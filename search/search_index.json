{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AndroDocs AndroDocs\u306b\u3064\u3044\u3066 AndroDocs\u306f\u3001Android\u306e\u5b66\u7fd2\u7528\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u3059\u3002 \u4fee\u6b63\u4f9d\u983c\u7b49 Github\u306eRepo\u306b Issues \u3092\u3042\u3052\u308b\u3002","title":"AndroDocs"},{"location":"#androdocs","text":"","title":"AndroDocs"},{"location":"#androdocs_1","text":"AndroDocs\u306f\u3001Android\u306e\u5b66\u7fd2\u7528\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u3059\u3002","title":"AndroDocs\u306b\u3064\u3044\u3066"},{"location":"#_1","text":"Github\u306eRepo\u306b Issues \u3092\u3042\u3052\u308b\u3002","title":"\u4fee\u6b63\u4f9d\u983c\u7b49"},{"location":"article-3-5/","text":"Bluetooth\u3067\u306e\u30c7\u30d0\u30c3\u30af Android\u3068PC\u3092USB\u3067\u3064\u306a\u304e\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c 1 /Users/\u30e6\u30fc\u30b6\u540d/Library/Android/sdk/platform-tools/adb tcpip 8888 1 /Users/\u30e6\u30fc\u30b6\u540d/Library/Android/sdk/platform-tools/adb shell ifconfig 1 /Users/\u30e6\u30fc\u30b6\u540d/Library/Android/sdk/platform-tools/adb connect 192.168.100.7:8888 1 /Users/sasakiakira/Library/Android/sdk/platform-tools/adb shell setprop service.adb.tcp.port 666 1 /Users/sasakiakira/Library/Android/sdk/platform-tools/adb tcpip 6666 1 /Users/sasakiakira/Library/Android/sdk/platform-tools/adb connect 192.168.100.7:6666","title":"Bluetooth\u3067\u306e\u30c7\u30d0\u30c3\u30af"},{"location":"article-3-5/#bluetooth","text":"Android\u3068PC\u3092USB\u3067\u3064\u306a\u304e\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c 1 /Users/\u30e6\u30fc\u30b6\u540d/Library/Android/sdk/platform-tools/adb tcpip 8888 1 /Users/\u30e6\u30fc\u30b6\u540d/Library/Android/sdk/platform-tools/adb shell ifconfig 1 /Users/\u30e6\u30fc\u30b6\u540d/Library/Android/sdk/platform-tools/adb connect 192.168.100.7:8888 1 /Users/sasakiakira/Library/Android/sdk/platform-tools/adb shell setprop service.adb.tcp.port 666 1 /Users/sasakiakira/Library/Android/sdk/platform-tools/adb tcpip 6666 1 /Users/sasakiakira/Library/Android/sdk/platform-tools/adb connect 192.168.100.7:6666","title":"Bluetooth\u3067\u306e\u30c7\u30d0\u30c3\u30af"},{"location":"article2-1/","text":"\u4e8b\u524d\u6e96\u5099 Bluetooth\u3068\u306f 10\u30e1\u30fc\u30c8\u30eb\u7a0b\u5ea6\u307e\u3067\u306e\u8ddd\u96e2\u306e\u6a5f\u5668\u9593\u3067\u4f7f\u7528\u3067\u304d\u308b2.4GHz\u5e2f\u306e\u96fb\u6ce2\u306b\u3088\u308b\u7121\u7dda\u901a\u4fe1\u3067\u3059\u3002 \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3084\u30ad\u30fc\u30dc\u30fc\u30c9\u3001\u30de\u30a6\u30b9\u306a\u3069\u306e\u30d1\u30bd\u30b3\u30f3\u306e\u5468\u8fba\u6a5f\u5668\u7b49\u306e\u97f3\u58f0\u3084\u6587\u5b57\u7b49\u306e\u6bd4\u8f03\u7684\u7c21\u5358\u306a\u901a\u4fe1\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002 \u6e96\u5099\u3059\u308b\u3082\u306e \u30fbAndroid\u958b\u767a\u74b0\u5883 (android studio) \u30fbAndroid\u7aef\u672b(\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3) \u30c7\u30fc\u30bf\u901a\u4fe1\u30b1\u30fc\u30d6\u30eb(USB-USBmini) \u30fbArduino Uno http://arduino.cc/en/Main/ArduinoBoardUno \u30fbBluetooth Mate (\u307e\u305f\u306fFaBo Brick\u306eBluetooth) https://www.sparkfun.com/products/12580 \u30fb\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9 \u30fb\u30b8\u30e3\u30f3\u30d1\u30fc\u30ef\u30a4\u30e4 \u30fbLED \u30fb\u62b5\u6297 Bluetooth\u30da\u30a2\u30ea\u30f3\u30b0\u8a2d\u5b9a \u9023\u643a\u3092\u884c\u3046\u305f\u3081\u306b\u306f\u3001\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3068Bluetooth\u3092\u30da\u30a2\u30ea\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u307e\u305a\u306fArduino\u306e\u56de\u8def\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u56de\u8def\u304c\u3067\u304d\u307e\u3057\u305f\u3089PC\u306b\u7e4b\u304e\u3001Bluetooth Mate\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 \u8d77\u52d5\u3059\u308b\u3068Bluetooth Mate\u306e\u30e9\u30f3\u30d7\u304c\u8d64\u304f\u70b9\u6ec5\u3057\u307e\u3059\u3002 \u3053\u306e\u72b6\u614b\u3067Android\u7aef\u672b\u5074\u3067\u30da\u30a2\u30ea\u30f3\u30b0\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002 \u300c\u8a2d\u5b9a\u300d\u306e\u300c\u7121\u7dda\u3068\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u300d\u3088\u308a\u300cBluetooth\u300d\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u3053\u306e\u6642\u3001Bluetooth\u304c\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u6709\u52b9\u306b\u3057\u3066\u4e0b\u3055\u3044\u3002 Bluetooth\u306e\u30b9\u30ad\u30e3\u30f3\u3092\u884c\u3044\u3001\u5bfe\u8c61\u306eBluetooth\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u3053\u306e\u300cRNBT-2D20\u300d\u3068\u3044\u3046\u306e\u304cBluetooth Mate\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u3068\u306a\u308a\u307e\u3059\u3002 \u300cRNBT-XXXX\u300d\u3067\u8868\u793a\u3055\u308c\u3001\u3053\u306e\u300cXXXX\u300d\u90e8\u5206\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002 \u8868\u793a\u3055\u308c\u305f\u30c7\u30d0\u30a4\u30b9\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u30da\u30a2\u30ea\u30f3\u30b0\u3092\u9078\u629e\u3059\u308b\u3068\u6a5f\u7a2e\u306b\u3088\u3063\u3066\u306f\u30b3\u30fc\u30c9\u5165\u529b\u304c\u6c42\u3081\u3089\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002(\u78ba\u8a8d\u306e\u307f\u306e\u5834\u5408\u3082\u3042\u308a\uff09 \u305d\u306e\u5834\u5408\u306f\u300c1234\u300d\u3092\u5165\u529b\u3057\u300cOK\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 \u30da\u30a2\u30ea\u30f3\u30b0\u304c\u6210\u529f\u3059\u308b\u3068\u3001\u30c7\u30d0\u30a4\u30b9\u540d\u306e\u4e0b\u306b\u300c\u30da\u30a2\u30ea\u30f3\u30b0\u6e08\u307f\u300d\u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u72b6\u614b\u3067\u306f\u3001Bluetooth\u5074\u306e\u30e9\u30f3\u30d7\u306f\u8d64\u304f\u70b9\u6ec5\u3057\u3066\u3044\u308b\u72b6\u614b\u304b\u3089\u5909\u5316\u306f\u3042\u308a\u307e\u305b\u3093\u3002 Android\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u8a2d\u5b9a Android\u7aef\u672b\u3067\u5b9f\u884c\u3059\u308b\u5834\u5408\u3001\u958b\u767a\u8005\u7528\u30aa\u30d7\u30b7\u30e7\u30f3\u8a2d\u5b9a\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002 \u8a2d\u5b9a\u753b\u9762\u3092\u958b\u304d\u3001\u300c\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u300d\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u203b\u6a5f\u7a2e\u306b\u3088\u3063\u3066\u306f\u3001\u3053\u306e\u300c\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u300d\u304c\u975e\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u306e\u5834\u5408\u306f\u3001\u8a2d\u5b9a\u753b\u9762\u3088\u308a\u3001\u300c\u30bf\u30d6\u30ec\u30c3\u30c8\u60c5\u5831\u300d\u3092\u958b\u304d\u3001\u8868\u793a\u3055\u308c\u305f\u300c\u30d3\u30eb\u30c9\u756a\u53f7\u300d\u3068\u3044\u3046\u6587\u5b57\u3092\uff17\u56de\u30bf\u30c3\u30d7\u3059\u308b\u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002 \u53f3\u4e0a\u306e\u90e8\u5206\u304c\u300cO\u300d\u306e\u5834\u5408\u306f\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u30bf\u30c3\u30d7\u3057\u3066\u300cI\u300d\u306b\u5909\u66f4\u3057\u307e\u3059\u3002 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u300cOK\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 \u6b21\u306bUSB\u30c7\u30d0\u30c3\u30b0\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002 \u307e\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u300cOK\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 USB\u30c7\u30d0\u30c3\u30b0\u306b\u30c1\u30a7\u30c3\u30af\u304c\u4ed8\u304d\u307e\u3057\u305f\u3002 \u3053\u308c\u3067\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u306f\u5b8c\u4e86\u3067\u3059\u3002","title":"\u4e8b\u524d\u6e96\u5099"},{"location":"article2-1/#_1","text":"","title":"\u4e8b\u524d\u6e96\u5099"},{"location":"article2-1/#bluetooth","text":"10\u30e1\u30fc\u30c8\u30eb\u7a0b\u5ea6\u307e\u3067\u306e\u8ddd\u96e2\u306e\u6a5f\u5668\u9593\u3067\u4f7f\u7528\u3067\u304d\u308b2.4GHz\u5e2f\u306e\u96fb\u6ce2\u306b\u3088\u308b\u7121\u7dda\u901a\u4fe1\u3067\u3059\u3002 \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3084\u30ad\u30fc\u30dc\u30fc\u30c9\u3001\u30de\u30a6\u30b9\u306a\u3069\u306e\u30d1\u30bd\u30b3\u30f3\u306e\u5468\u8fba\u6a5f\u5668\u7b49\u306e\u97f3\u58f0\u3084\u6587\u5b57\u7b49\u306e\u6bd4\u8f03\u7684\u7c21\u5358\u306a\u901a\u4fe1\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002","title":"Bluetooth\u3068\u306f"},{"location":"article2-1/#_2","text":"\u30fbAndroid\u958b\u767a\u74b0\u5883 (android studio) \u30fbAndroid\u7aef\u672b(\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3) \u30c7\u30fc\u30bf\u901a\u4fe1\u30b1\u30fc\u30d6\u30eb(USB-USBmini) \u30fbArduino Uno http://arduino.cc/en/Main/ArduinoBoardUno \u30fbBluetooth Mate (\u307e\u305f\u306fFaBo Brick\u306eBluetooth) https://www.sparkfun.com/products/12580 \u30fb\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9 \u30fb\u30b8\u30e3\u30f3\u30d1\u30fc\u30ef\u30a4\u30e4 \u30fbLED \u30fb\u62b5\u6297","title":"\u6e96\u5099\u3059\u308b\u3082\u306e"},{"location":"article2-1/#bluetooth_1","text":"\u9023\u643a\u3092\u884c\u3046\u305f\u3081\u306b\u306f\u3001\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3068Bluetooth\u3092\u30da\u30a2\u30ea\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u307e\u305a\u306fArduino\u306e\u56de\u8def\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u56de\u8def\u304c\u3067\u304d\u307e\u3057\u305f\u3089PC\u306b\u7e4b\u304e\u3001Bluetooth Mate\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 \u8d77\u52d5\u3059\u308b\u3068Bluetooth Mate\u306e\u30e9\u30f3\u30d7\u304c\u8d64\u304f\u70b9\u6ec5\u3057\u307e\u3059\u3002 \u3053\u306e\u72b6\u614b\u3067Android\u7aef\u672b\u5074\u3067\u30da\u30a2\u30ea\u30f3\u30b0\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002 \u300c\u8a2d\u5b9a\u300d\u306e\u300c\u7121\u7dda\u3068\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u300d\u3088\u308a\u300cBluetooth\u300d\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u3053\u306e\u6642\u3001Bluetooth\u304c\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u6709\u52b9\u306b\u3057\u3066\u4e0b\u3055\u3044\u3002 Bluetooth\u306e\u30b9\u30ad\u30e3\u30f3\u3092\u884c\u3044\u3001\u5bfe\u8c61\u306eBluetooth\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u3053\u306e\u300cRNBT-2D20\u300d\u3068\u3044\u3046\u306e\u304cBluetooth Mate\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u3068\u306a\u308a\u307e\u3059\u3002 \u300cRNBT-XXXX\u300d\u3067\u8868\u793a\u3055\u308c\u3001\u3053\u306e\u300cXXXX\u300d\u90e8\u5206\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002 \u8868\u793a\u3055\u308c\u305f\u30c7\u30d0\u30a4\u30b9\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u30da\u30a2\u30ea\u30f3\u30b0\u3092\u9078\u629e\u3059\u308b\u3068\u6a5f\u7a2e\u306b\u3088\u3063\u3066\u306f\u30b3\u30fc\u30c9\u5165\u529b\u304c\u6c42\u3081\u3089\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002(\u78ba\u8a8d\u306e\u307f\u306e\u5834\u5408\u3082\u3042\u308a\uff09 \u305d\u306e\u5834\u5408\u306f\u300c1234\u300d\u3092\u5165\u529b\u3057\u300cOK\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 \u30da\u30a2\u30ea\u30f3\u30b0\u304c\u6210\u529f\u3059\u308b\u3068\u3001\u30c7\u30d0\u30a4\u30b9\u540d\u306e\u4e0b\u306b\u300c\u30da\u30a2\u30ea\u30f3\u30b0\u6e08\u307f\u300d\u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u72b6\u614b\u3067\u306f\u3001Bluetooth\u5074\u306e\u30e9\u30f3\u30d7\u306f\u8d64\u304f\u70b9\u6ec5\u3057\u3066\u3044\u308b\u72b6\u614b\u304b\u3089\u5909\u5316\u306f\u3042\u308a\u307e\u305b\u3093\u3002","title":"Bluetooth\u30da\u30a2\u30ea\u30f3\u30b0\u8a2d\u5b9a"},{"location":"article2-1/#android","text":"Android\u7aef\u672b\u3067\u5b9f\u884c\u3059\u308b\u5834\u5408\u3001\u958b\u767a\u8005\u7528\u30aa\u30d7\u30b7\u30e7\u30f3\u8a2d\u5b9a\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002 \u8a2d\u5b9a\u753b\u9762\u3092\u958b\u304d\u3001\u300c\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u300d\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u203b\u6a5f\u7a2e\u306b\u3088\u3063\u3066\u306f\u3001\u3053\u306e\u300c\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u300d\u304c\u975e\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u306e\u5834\u5408\u306f\u3001\u8a2d\u5b9a\u753b\u9762\u3088\u308a\u3001\u300c\u30bf\u30d6\u30ec\u30c3\u30c8\u60c5\u5831\u300d\u3092\u958b\u304d\u3001\u8868\u793a\u3055\u308c\u305f\u300c\u30d3\u30eb\u30c9\u756a\u53f7\u300d\u3068\u3044\u3046\u6587\u5b57\u3092\uff17\u56de\u30bf\u30c3\u30d7\u3059\u308b\u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002 \u53f3\u4e0a\u306e\u90e8\u5206\u304c\u300cO\u300d\u306e\u5834\u5408\u306f\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u30bf\u30c3\u30d7\u3057\u3066\u300cI\u300d\u306b\u5909\u66f4\u3057\u307e\u3059\u3002 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u300cOK\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 \u6b21\u306bUSB\u30c7\u30d0\u30c3\u30b0\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002 \u307e\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u300cOK\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 USB\u30c7\u30d0\u30c3\u30b0\u306b\u30c1\u30a7\u30c3\u30af\u304c\u4ed8\u304d\u307e\u3057\u305f\u3002 \u3053\u308c\u3067\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u306f\u5b8c\u4e86\u3067\u3059\u3002","title":"Android\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u8a2d\u5b9a"},{"location":"article2-2/","text":"\u30c6\u30ad\u30b9\u30c8\u9001\u53d7\u4fe1 \u3053\u3053\u3067\u306fArduino\u304b\u3089\u30c7\u30fc\u30bf\u3092\u9001\u308a\u3001Android\u5074\u3067\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b\u3068\u3044\u3046\u5f62\u5f0f\u3067\u9023\u643a\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002 Arduino\u8a2d\u5b9a \u307e\u305a\u306fArduino\u5074\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002 \u56de\u8def\u306b\u3064\u3044\u3066\u306f\u300c\uff11.\u4e8b\u524d\u6e96\u5099\u300d\u3067\u4f5c\u6210\u3057\u305f\u56de\u8def\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 Arduino UNO\u3068Arduino MEGA\u3067\u306f\u56de\u8def\u3068\u30b9\u30b1\u30c3\u30c1\u304c\u7570\u306a\u308a\u307e\u3059\u306e\u3067\u5225\u3005\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002 \u56de\u8def\u304c\u3067\u304d\u307e\u3057\u305f\u3089\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u30b9\u30b1\u30c3\u30c1\u306fArduino IDE\u3092\u8d77\u52d5\u3057\u3066\u884c\u3044\u307e\u3059\u3002 Arduino UNO \u56de\u8def (Arduino Uno) \u30b9\u30b1\u30c3\u30c1 (Arduino UNO) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <SoftwareSerial.h> SoftwareSerial android ( 2 , 3 ); // SoftwareSerial android(12,13); // Fabo Brick\u4f7f\u7528\u6642 void setup (){ // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ Serial . println ( android . read ()); } if ( Serial . available ()){ android . write ( Serial . read ()); } } Arduino Mega \u56de\u8def (Arduino Mega) \u30b9\u30b1\u30c3\u30c1 (Arduino Mega) Arduino Mega\u3067\u306fSoftserial\u304c\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u306e\u306718, 19\u756a\u30d4\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 18,19\u756a\u30d4\u30f3\u306f 1 Serial1 . begin ( \u901f\u5ea6 ); \u3067\u547c\u3073\u51fa\u305b\u307e\u3059\u3002 Bluetooth\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3001Android\u9593\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3001115200\u306e\u901f\u5ea6\u306a\u306e\u3067 1 Serial1 . begin ( 115200 ); \u3068\u3057\u307e\u3059\u3002 \u5909\u66f4\u5f8c\u306f\u3053\u3061\u3089 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 void setup (){ // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a Serial1 . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); Serial . write ( \"init\" ); } void loop (){ if ( Serial1 . available ()){ Serial . println ( Serial1 . read ()); } if ( Serial . available ()){ Serial1 . write ( Serial . read ()); } } Android\u306eProject\u4f5c\u6210 \u6b21\u306bAndroid\u5074\u306e\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Android\u306e\u30a2\u30d7\u30ea\u4f5c\u6210\u306b\u306f\u300cAndroid Studio\u300d\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 Android Studio\u3092\u8d77\u52d5\u3057\u3001Quick Start\u306e\u4e00\u756a\u4e0a\u306b\u3042\u308b\u300cStart a new Android Studio project\u300d\u3092\u9078\u629e\u3057\u307e\u3059\u3002 New Project\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 Application name\u306b\u30a2\u30d7\u30ea\u540d\u300cMyBluetooth\u300d\u3092\u5165\u529b\u3057\u3001\u300cNext\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u3053\u3053\u306f\u5909\u66f4\u305b\u305a\u306b\u300cNext\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 Blank Activity\u3092\u9078\u629e\u3057\u3001\u300cNext\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 Activity\u306e\u540d\u524d\u3092\u5165\u529b\u3057\u3001\u300cFinish\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u4eca\u56de\u306f\u540d\u524d\u3092\u5909\u66f4\u305b\u305a\u306b\u9032\u3081\u307e\u3059\u3002 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002 \u30d3\u30e5\u30fc\u306e\u8868\u793a\u5f62\u5f0f\u3092\u5909\u66f4\u3057\u307e\u3059\u3002 \u753b\u9762\u5de6\u4e0a\u306b\u3042\u308b\u300cAndroid\u300d\u3068\u3044\u3046\u7b87\u6240\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u3059\u3050\u4e0b\u306b\u300cProject\u300d\u3068\u3044\u3046\u9805\u76ee\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u30d3\u30e5\u30fc\u306e\u8868\u793a\u5f62\u5f0f\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f\u3002 Bluetooth\u8a8d\u8b58\u8a2d\u5b9a \u6b21\u306bBluetooth\u306e\u8a8d\u8b58\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002 [app]>[src]>[main]>[res]\u5185\u306eAndroidManifest.xml\u3092\u958b\u304d\u3001\u4e0b\u8a18\u306e\u5185\u5bb9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 1 2 <uses-permission android:name= \"android.permission.BLUETOOTH\" /> <uses-permission android:name= \"android.permission.BLUETOOTH_ADMIN\" /> AndroidManifest.xml \u5909\u66f4\u5f8c\u306f\u3053\u306e\u3088\u3046\u306a\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"gclue.com.mybluetooth\" > <uses-permission android:name= \"android.permission.BLUETOOTH\" /> <uses-permission android:name= \"android.permission.BLUETOOTH_ADMIN\" /> <application android:allowBackup= \"true\" android:icon= \"@drawable/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> \u30d7\u30ed\u30b0\u30e9\u30e0\u4f5c\u6210 [src]>[main]>[res]>[layout]\u5185\u306b\u3042\u308bactivity_main.xml\u3092\u5909\u66f4\u3057\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u753b\u9762\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u8a2d\u5b9a\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u308a\u307e\u3059\u3002 activity_main.xml\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\u3068\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001\u753b\u9762\u53f3\u4e0b\u306e\u30bf\u30d6\u304b\u3089\u300cText\u300d\u306e\u30bf\u30d6\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3067\u30b3\u30fc\u30c9\u304c\u5165\u529b\u3067\u304d\u308b\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002 activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:orientation= \"vertical\" > <Button android:id= \"@+id/connectButton\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"Connect\" /> <TextView android:id= \"@+id/statusValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <TextView android:id= \"@+id/inputValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/writeButton\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"Write\" /> </LinearLayout> \u6b21\u306b[src]\u306b\u3042\u308b\u300cMainActivity.java\u300d\u3092\u958b\u304d\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5165\u529b\u3057\u307e\u3059\u3002 \uff11\u884c\u76ee\u306epackage\u306e\u7b87\u6240\u306f\u74b0\u5883\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u521d\u671f\u72b6\u614b\u304b\u3089\u5909\u66f4\u305b\u305a\u305d\u306e\u307e\u307e\u306e\u72b6\u614b\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u307e\u305f\u3001\"RNBT-205F\"\u306f\u300c\uff11.BLUETOOTH \u4e8b\u524d\u6e96\u5099\u300d\u306e\u30da\u30a2\u30ea\u30f3\u30b0\u6642\u306b\u3067\u3066\u304d\u305f\u30c7\u30d0\u30a4\u30b9\u540d\u3068\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u305d\u308c\u306b\u5408\u308f\u305b\u3066\u5909\u66f4\u3057\u3066\u4e0b\u3055\u3044\u3002 MainActivity.javapackage gclue.com.mybluetooth ; import android.bluetooth.BluetoothAdapter ; import android.bluetooth.BluetoothDevice ; import android.bluetooth.BluetoothSocket ; import android.os.Bundle ; import android.os.Handler ; import android.os.Message ; //import android.support.v7.app.ActionBarActivity; import android.support.v7.app.AppCompatActivity ; import android.util.Log ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import java.io.IOException ; import java.io.InputStream ; import java.io.OutputStream ; import java.util.Set ; import java.util.UUID ; //public class MainActivity extends ActionBarActivity implements Runnable, View.OnClickListener { public class MainActivity extends AppCompatActivity implements Runnable , View . OnClickListener { /* tag */ private static final String TAG = \"BluetoothSample\" ; /* Bluetooth Adapter */ private BluetoothAdapter mAdapter ; /* Bluetooth\u30c7\u30d0\u30a4\u30b9 */ private BluetoothDevice mDevice ; /* Bluetooth UUID(\u56fa\u5b9a) */ private final UUID MY_UUID = UUID . fromString ( \"00001101-0000-1000-8000-00805F9B34FB\" ); /* \u30c7\u30d0\u30a4\u30b9\u540d \u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u5909\u66f4*/ private final String DEVICE_NAME = \"RNBT-205F\" ; /* Soket */ private BluetoothSocket mSocket ; /* Thread */ private Thread mThread ; /* Thread\u306e\u72b6\u614b\u3092\u8868\u3059 */ private boolean isRunning ; /** \u63a5\u7d9a\u30dc\u30bf\u30f3. */ private Button connectButton ; /** \u66f8\u8fbc\u307f\u30dc\u30bf\u30f3. */ private Button writeButton ; /** \u30b9\u30c6\u30fc\u30bf\u30b9. */ private TextView mStatusTextView ; /** Bluetooth\u304b\u3089\u53d7\u4fe1\u3057\u305f\u5024. */ private TextView mInputTextView ; /** Action(\u30b9\u30c6\u30fc\u30bf\u30b9\u8868\u793a). */ private static final int VIEW_STATUS = 0 ; /** Action(\u53d6\u5f97\u6587\u5b57\u5217). */ private static final int VIEW_INPUT = 1 ; /** Connect\u78ba\u8a8d\u7528\u30d5\u30e9\u30b0 */ private boolean connectFlg = false ; /** Bluetooth\u306eOutputStream. */ OutputStream mmOutputStream = null ; @Override public void onCreate ( Bundle savedInstanceState ){ super . onCreate ( savedInstanceState ); // Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u30d3\u30e5\u30fc\u3092\u8868\u793a setContentView ( R . layout . activity_main ); // TextView\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) mInputTextView = ( TextView ) findViewById ( R . id . inputValue ); mStatusTextView = ( TextView ) findViewById ( R . id . statusValue ); // Button\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) connectButton = ( Button ) findViewById ( R . id . connectButton ); writeButton = ( Button ) findViewById ( R . id . writeButton ); // \u30dc\u30bf\u30f3\u306e\u30a4\u30d9\u30f3\u30c8\u8a2d\u5b9a connectButton . setOnClickListener ( this ); writeButton . setOnClickListener ( this ); // Bluetooth\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u53d6\u5f97 // \u30c7\u30d0\u30a4\u30b9\u540d\u306f\u3001RNBT-XXXX\u306b\u306a\u308b\u305f\u3081\u3001 // DVICE_NAME\u3067\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u5b9a\u7fa9 mAdapter = BluetoothAdapter . getDefaultAdapter (); mStatusTextView . setText ( \"SearchDevice\" ); Set < BluetoothDevice > devices = mAdapter . getBondedDevices (); for ( BluetoothDevice device : devices ){ if ( device . getName (). equals ( DEVICE_NAME )){ mStatusTextView . setText ( \"find: \" + device . getName ()); mDevice = device ; } } } // \u5225\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u304c\u8d77\u52d5\u3057\u305f\u5834\u5408\u306e\u51e6\u7406 @Override protected void onPause (){ super . onPause (); isRunning = false ; connectFlg = false ; try { mSocket . close (); } catch ( Exception e ){} } // \u30b9\u30ec\u30c3\u30c9\u51e6\u7406(connect\u30dc\u30bf\u30f3\u62bc\u4e0b\u5f8c\u306b\u5b9f\u884c) @Override public void run () { InputStream mmInStream = null ; Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connecting...\" ; mHandler . sendMessage ( valueMsg ); try { // \u53d6\u5f97\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u4f7f\u3063\u3066Bluetooth\u3067Socket\u63a5\u7d9a mSocket = mDevice . createRfcommSocketToServiceRecord ( MY_UUID ); mSocket . connect (); mmInStream = mSocket . getInputStream (); mmOutputStream = mSocket . getOutputStream (); // InputStream\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u683c\u7d0d byte [] buffer = new byte [ 1024 ] ; // \u53d6\u5f97\u3057\u305f\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3092\u683c\u7d0d int bytes ; valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connected.\" ; mHandler . sendMessage ( valueMsg ); connectFlg = true ; while ( isRunning ){ // InputStream\u306e\u8aad\u307f\u8fbc\u307f bytes = mmInStream . read ( buffer ); Log . i ( TAG , \"bytes=\" + bytes ); // String\u578b\u306b\u5909\u63db String readMsg = new String ( buffer , 0 , bytes ); // null\u4ee5\u5916\u306a\u3089\u8868\u793a if ( readMsg . trim () != null && ! readMsg . trim (). equals ( \"\" )){ Log . i ( TAG , \"value=\" + readMsg . trim ()); valueMsg = new Message (); valueMsg . what = VIEW_INPUT ; valueMsg . obj = readMsg ; mHandler . sendMessage ( valueMsg ); } } } // \u30a8\u30e9\u30fc\u51e6\u7406 catch ( Exception e ){ valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error1:\" + e ; mHandler . sendMessage ( valueMsg ); try { mSocket . close (); } catch ( Exception ee ){} isRunning = false ; connectFlg = false ; } } // \u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u306e\u51e6\u7406 @Override public void onClick ( View v ) { if ( v . equals ( connectButton )) { // \u63a5\u7d9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u307f if ( ! connectFlg ) { mStatusTextView . setText ( \"try connect\" ); mThread = new Thread ( this ); // Thread\u3092\u8d77\u52d5\u3057\u3001Bluetooth\u63a5\u7d9a isRunning = true ; mThread . start (); } } else if ( v . equals ( writeButton )) { // \u63a5\u7d9a\u4e2d\u306e\u307f\u66f8\u8fbc\u307f\u3092\u884c\u3046 if ( connectFlg ) { try { // Write\u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u3001'2'\u3092\u9001\u4fe1 mmOutputStream . write ( \"2\" . getBytes ()); // \u753b\u9762\u4e0a\u306b\"Write:\"\u3092\u8868\u793a mStatusTextView . setText ( \"Write:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error2:\" + e ; mHandler . sendMessage ( valueMsg ); } } else { mStatusTextView . setText ( \"Please push the connect button\" ); } } } /** * \u63cf\u753b\u51e6\u7406\u306fHandler\u3067\u304a\u3053\u306a\u3046 */ Handler mHandler = new Handler () { @Override public void handleMessage ( Message msg ) { int action = msg . what ; String msgStr = ( String ) msg . obj ; if ( action == VIEW_INPUT ){ mInputTextView . setText ( msgStr ); } else if ( action == VIEW_STATUS ){ mStatusTextView . setText ( msgStr ); } } }; } Android\u7aef\u672b\u3067\u306e\u5b9f\u884c\u8a2d\u5b9a \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\u3001\u53ca\u3073\u78ba\u8a8d \u6e96\u5099\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 Android\u306eConnect\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3001\uff11\u301c\uff13\u79d2\u307b\u3069\u3067\u8d64\u70b9\u6ec5\u304b\u3089\u7dd1\u306e\u70b9\u706f\u306b\u304b\u308f\u308a\u307e\u3059\u3002 \u3053\u308c\u3067\u30c7\u30fc\u30bf\u304c\u9001\u53d7\u4fe1\u3067\u304d\u308b\u72b6\u614b\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Connect\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3089\u3001\u6b21\u306bAndroid\u306eWrite\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 Arduino\u5074\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u78ba\u8a8d\u3059\u308b\u3068\u300150(2\u306eascii\u30b3\u30fc\u30c9)\u304c\u8ee2\u9001\u3055\u308c\u307e\u3059\u3002 \u203bArduino\u5074\u3067Serial.write(\u53d6\u5f97\u5024)\u3068\u3059\u308b\u304b\u3001char\u578b\u306e\u5909\u6570\u306b\u683c\u7d0d\u3057\u3066\u304b\u3089\u51fa\u529b\u3059\u308b\u3068\u300c2\u300d\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 Arduino\u306eSerial Console\u3067\u3001\u6587\u5b57\u3092\u5165\u529b\u3057\u3001\u9001\u4fe1\u3092\u62bc\u3059\u3068\u3001Android\u306b\u6587\u5b57\u304c\u9001\u3089\u308c\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002 Arduino\u5074\u3067\u6587\u5b57\u3092\u5165\u529b\u3057\u3001\u9001\u4fe1\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 Android\u5074\u306b\u6587\u5b57\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002","title":"\u30c6\u30ad\u30b9\u30c8\u9001\u53d7\u4fe1"},{"location":"article2-2/#_1","text":"\u3053\u3053\u3067\u306fArduino\u304b\u3089\u30c7\u30fc\u30bf\u3092\u9001\u308a\u3001Android\u5074\u3067\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b\u3068\u3044\u3046\u5f62\u5f0f\u3067\u9023\u643a\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002","title":"\u30c6\u30ad\u30b9\u30c8\u9001\u53d7\u4fe1"},{"location":"article2-2/#arduino","text":"\u307e\u305a\u306fArduino\u5074\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002 \u56de\u8def\u306b\u3064\u3044\u3066\u306f\u300c\uff11.\u4e8b\u524d\u6e96\u5099\u300d\u3067\u4f5c\u6210\u3057\u305f\u56de\u8def\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 Arduino UNO\u3068Arduino MEGA\u3067\u306f\u56de\u8def\u3068\u30b9\u30b1\u30c3\u30c1\u304c\u7570\u306a\u308a\u307e\u3059\u306e\u3067\u5225\u3005\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002 \u56de\u8def\u304c\u3067\u304d\u307e\u3057\u305f\u3089\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u30b9\u30b1\u30c3\u30c1\u306fArduino IDE\u3092\u8d77\u52d5\u3057\u3066\u884c\u3044\u307e\u3059\u3002","title":"Arduino\u8a2d\u5b9a"},{"location":"article2-2/#arduino-uno","text":"","title":"Arduino UNO"},{"location":"article2-2/#arduino-uno_1","text":"","title":"\u56de\u8def (Arduino Uno)"},{"location":"article2-2/#arduino-uno_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <SoftwareSerial.h> SoftwareSerial android ( 2 , 3 ); // SoftwareSerial android(12,13); // Fabo Brick\u4f7f\u7528\u6642 void setup (){ // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ Serial . println ( android . read ()); } if ( Serial . available ()){ android . write ( Serial . read ()); } }","title":"\u30b9\u30b1\u30c3\u30c1 (Arduino UNO)"},{"location":"article2-2/#arduino-mega","text":"","title":"Arduino Mega"},{"location":"article2-2/#arduino-mega_1","text":"","title":"\u56de\u8def (Arduino Mega)"},{"location":"article2-2/#arduino-mega_2","text":"Arduino Mega\u3067\u306fSoftserial\u304c\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u306e\u306718, 19\u756a\u30d4\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 18,19\u756a\u30d4\u30f3\u306f 1 Serial1 . begin ( \u901f\u5ea6 ); \u3067\u547c\u3073\u51fa\u305b\u307e\u3059\u3002 Bluetooth\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3001Android\u9593\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3001115200\u306e\u901f\u5ea6\u306a\u306e\u3067 1 Serial1 . begin ( 115200 ); \u3068\u3057\u307e\u3059\u3002 \u5909\u66f4\u5f8c\u306f\u3053\u3061\u3089 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 void setup (){ // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a Serial1 . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); Serial . write ( \"init\" ); } void loop (){ if ( Serial1 . available ()){ Serial . println ( Serial1 . read ()); } if ( Serial . available ()){ Serial1 . write ( Serial . read ()); } }","title":"\u30b9\u30b1\u30c3\u30c1 (Arduino Mega)"},{"location":"article2-2/#androidproject","text":"\u6b21\u306bAndroid\u5074\u306e\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Android\u306e\u30a2\u30d7\u30ea\u4f5c\u6210\u306b\u306f\u300cAndroid Studio\u300d\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 Android Studio\u3092\u8d77\u52d5\u3057\u3001Quick Start\u306e\u4e00\u756a\u4e0a\u306b\u3042\u308b\u300cStart a new Android Studio project\u300d\u3092\u9078\u629e\u3057\u307e\u3059\u3002 New Project\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 Application name\u306b\u30a2\u30d7\u30ea\u540d\u300cMyBluetooth\u300d\u3092\u5165\u529b\u3057\u3001\u300cNext\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u3053\u3053\u306f\u5909\u66f4\u305b\u305a\u306b\u300cNext\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 Blank Activity\u3092\u9078\u629e\u3057\u3001\u300cNext\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 Activity\u306e\u540d\u524d\u3092\u5165\u529b\u3057\u3001\u300cFinish\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u4eca\u56de\u306f\u540d\u524d\u3092\u5909\u66f4\u305b\u305a\u306b\u9032\u3081\u307e\u3059\u3002 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002 \u30d3\u30e5\u30fc\u306e\u8868\u793a\u5f62\u5f0f\u3092\u5909\u66f4\u3057\u307e\u3059\u3002 \u753b\u9762\u5de6\u4e0a\u306b\u3042\u308b\u300cAndroid\u300d\u3068\u3044\u3046\u7b87\u6240\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u3059\u3050\u4e0b\u306b\u300cProject\u300d\u3068\u3044\u3046\u9805\u76ee\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u30d3\u30e5\u30fc\u306e\u8868\u793a\u5f62\u5f0f\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f\u3002","title":"Android\u306eProject\u4f5c\u6210"},{"location":"article2-2/#bluetooth","text":"\u6b21\u306bBluetooth\u306e\u8a8d\u8b58\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002 [app]>[src]>[main]>[res]\u5185\u306eAndroidManifest.xml\u3092\u958b\u304d\u3001\u4e0b\u8a18\u306e\u5185\u5bb9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 1 2 <uses-permission android:name= \"android.permission.BLUETOOTH\" /> <uses-permission android:name= \"android.permission.BLUETOOTH_ADMIN\" />","title":"Bluetooth\u8a8d\u8b58\u8a2d\u5b9a"},{"location":"article2-2/#androidmanifestxml","text":"\u5909\u66f4\u5f8c\u306f\u3053\u306e\u3088\u3046\u306a\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"gclue.com.mybluetooth\" > <uses-permission android:name= \"android.permission.BLUETOOTH\" /> <uses-permission android:name= \"android.permission.BLUETOOTH_ADMIN\" /> <application android:allowBackup= \"true\" android:icon= \"@drawable/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"AndroidManifest.xml"},{"location":"article2-2/#_2","text":"[src]>[main]>[res]>[layout]\u5185\u306b\u3042\u308bactivity_main.xml\u3092\u5909\u66f4\u3057\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u753b\u9762\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u8a2d\u5b9a\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u308a\u307e\u3059\u3002 activity_main.xml\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\u3068\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001\u753b\u9762\u53f3\u4e0b\u306e\u30bf\u30d6\u304b\u3089\u300cText\u300d\u306e\u30bf\u30d6\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3067\u30b3\u30fc\u30c9\u304c\u5165\u529b\u3067\u304d\u308b\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002 activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:orientation= \"vertical\" > <Button android:id= \"@+id/connectButton\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"Connect\" /> <TextView android:id= \"@+id/statusValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <TextView android:id= \"@+id/inputValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/writeButton\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"Write\" /> </LinearLayout> \u6b21\u306b[src]\u306b\u3042\u308b\u300cMainActivity.java\u300d\u3092\u958b\u304d\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5165\u529b\u3057\u307e\u3059\u3002 \uff11\u884c\u76ee\u306epackage\u306e\u7b87\u6240\u306f\u74b0\u5883\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u521d\u671f\u72b6\u614b\u304b\u3089\u5909\u66f4\u305b\u305a\u305d\u306e\u307e\u307e\u306e\u72b6\u614b\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u307e\u305f\u3001\"RNBT-205F\"\u306f\u300c\uff11.BLUETOOTH \u4e8b\u524d\u6e96\u5099\u300d\u306e\u30da\u30a2\u30ea\u30f3\u30b0\u6642\u306b\u3067\u3066\u304d\u305f\u30c7\u30d0\u30a4\u30b9\u540d\u3068\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u305d\u308c\u306b\u5408\u308f\u305b\u3066\u5909\u66f4\u3057\u3066\u4e0b\u3055\u3044\u3002","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u4f5c\u6210"},{"location":"article2-2/#mainactivityjava","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 package gclue.com.mybluetooth ; import android.bluetooth.BluetoothAdapter ; import android.bluetooth.BluetoothDevice ; import android.bluetooth.BluetoothSocket ; import android.os.Bundle ; import android.os.Handler ; import android.os.Message ; //import android.support.v7.app.ActionBarActivity; import android.support.v7.app.AppCompatActivity ; import android.util.Log ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import java.io.IOException ; import java.io.InputStream ; import java.io.OutputStream ; import java.util.Set ; import java.util.UUID ; //public class MainActivity extends ActionBarActivity implements Runnable, View.OnClickListener { public class MainActivity extends AppCompatActivity implements Runnable , View . OnClickListener { /* tag */ private static final String TAG = \"BluetoothSample\" ; /* Bluetooth Adapter */ private BluetoothAdapter mAdapter ; /* Bluetooth\u30c7\u30d0\u30a4\u30b9 */ private BluetoothDevice mDevice ; /* Bluetooth UUID(\u56fa\u5b9a) */ private final UUID MY_UUID = UUID . fromString ( \"00001101-0000-1000-8000-00805F9B34FB\" ); /* \u30c7\u30d0\u30a4\u30b9\u540d \u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u5909\u66f4*/ private final String DEVICE_NAME = \"RNBT-205F\" ; /* Soket */ private BluetoothSocket mSocket ; /* Thread */ private Thread mThread ; /* Thread\u306e\u72b6\u614b\u3092\u8868\u3059 */ private boolean isRunning ; /** \u63a5\u7d9a\u30dc\u30bf\u30f3. */ private Button connectButton ; /** \u66f8\u8fbc\u307f\u30dc\u30bf\u30f3. */ private Button writeButton ; /** \u30b9\u30c6\u30fc\u30bf\u30b9. */ private TextView mStatusTextView ; /** Bluetooth\u304b\u3089\u53d7\u4fe1\u3057\u305f\u5024. */ private TextView mInputTextView ; /** Action(\u30b9\u30c6\u30fc\u30bf\u30b9\u8868\u793a). */ private static final int VIEW_STATUS = 0 ; /** Action(\u53d6\u5f97\u6587\u5b57\u5217). */ private static final int VIEW_INPUT = 1 ; /** Connect\u78ba\u8a8d\u7528\u30d5\u30e9\u30b0 */ private boolean connectFlg = false ; /** Bluetooth\u306eOutputStream. */ OutputStream mmOutputStream = null ; @Override public void onCreate ( Bundle savedInstanceState ){ super . onCreate ( savedInstanceState ); // Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u30d3\u30e5\u30fc\u3092\u8868\u793a setContentView ( R . layout . activity_main ); // TextView\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) mInputTextView = ( TextView ) findViewById ( R . id . inputValue ); mStatusTextView = ( TextView ) findViewById ( R . id . statusValue ); // Button\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) connectButton = ( Button ) findViewById ( R . id . connectButton ); writeButton = ( Button ) findViewById ( R . id . writeButton ); // \u30dc\u30bf\u30f3\u306e\u30a4\u30d9\u30f3\u30c8\u8a2d\u5b9a connectButton . setOnClickListener ( this ); writeButton . setOnClickListener ( this ); // Bluetooth\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u53d6\u5f97 // \u30c7\u30d0\u30a4\u30b9\u540d\u306f\u3001RNBT-XXXX\u306b\u306a\u308b\u305f\u3081\u3001 // DVICE_NAME\u3067\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u5b9a\u7fa9 mAdapter = BluetoothAdapter . getDefaultAdapter (); mStatusTextView . setText ( \"SearchDevice\" ); Set < BluetoothDevice > devices = mAdapter . getBondedDevices (); for ( BluetoothDevice device : devices ){ if ( device . getName (). equals ( DEVICE_NAME )){ mStatusTextView . setText ( \"find: \" + device . getName ()); mDevice = device ; } } } // \u5225\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u304c\u8d77\u52d5\u3057\u305f\u5834\u5408\u306e\u51e6\u7406 @Override protected void onPause (){ super . onPause (); isRunning = false ; connectFlg = false ; try { mSocket . close (); } catch ( Exception e ){} } // \u30b9\u30ec\u30c3\u30c9\u51e6\u7406(connect\u30dc\u30bf\u30f3\u62bc\u4e0b\u5f8c\u306b\u5b9f\u884c) @Override public void run () { InputStream mmInStream = null ; Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connecting...\" ; mHandler . sendMessage ( valueMsg ); try { // \u53d6\u5f97\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u4f7f\u3063\u3066Bluetooth\u3067Socket\u63a5\u7d9a mSocket = mDevice . createRfcommSocketToServiceRecord ( MY_UUID ); mSocket . connect (); mmInStream = mSocket . getInputStream (); mmOutputStream = mSocket . getOutputStream (); // InputStream\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u683c\u7d0d byte [] buffer = new byte [ 1024 ] ; // \u53d6\u5f97\u3057\u305f\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3092\u683c\u7d0d int bytes ; valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connected.\" ; mHandler . sendMessage ( valueMsg ); connectFlg = true ; while ( isRunning ){ // InputStream\u306e\u8aad\u307f\u8fbc\u307f bytes = mmInStream . read ( buffer ); Log . i ( TAG , \"bytes=\" + bytes ); // String\u578b\u306b\u5909\u63db String readMsg = new String ( buffer , 0 , bytes ); // null\u4ee5\u5916\u306a\u3089\u8868\u793a if ( readMsg . trim () != null && ! readMsg . trim (). equals ( \"\" )){ Log . i ( TAG , \"value=\" + readMsg . trim ()); valueMsg = new Message (); valueMsg . what = VIEW_INPUT ; valueMsg . obj = readMsg ; mHandler . sendMessage ( valueMsg ); } } } // \u30a8\u30e9\u30fc\u51e6\u7406 catch ( Exception e ){ valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error1:\" + e ; mHandler . sendMessage ( valueMsg ); try { mSocket . close (); } catch ( Exception ee ){} isRunning = false ; connectFlg = false ; } } // \u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u306e\u51e6\u7406 @Override public void onClick ( View v ) { if ( v . equals ( connectButton )) { // \u63a5\u7d9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u307f if ( ! connectFlg ) { mStatusTextView . setText ( \"try connect\" ); mThread = new Thread ( this ); // Thread\u3092\u8d77\u52d5\u3057\u3001Bluetooth\u63a5\u7d9a isRunning = true ; mThread . start (); } } else if ( v . equals ( writeButton )) { // \u63a5\u7d9a\u4e2d\u306e\u307f\u66f8\u8fbc\u307f\u3092\u884c\u3046 if ( connectFlg ) { try { // Write\u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u3001'2'\u3092\u9001\u4fe1 mmOutputStream . write ( \"2\" . getBytes ()); // \u753b\u9762\u4e0a\u306b\"Write:\"\u3092\u8868\u793a mStatusTextView . setText ( \"Write:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error2:\" + e ; mHandler . sendMessage ( valueMsg ); } } else { mStatusTextView . setText ( \"Please push the connect button\" ); } } } /** * \u63cf\u753b\u51e6\u7406\u306fHandler\u3067\u304a\u3053\u306a\u3046 */ Handler mHandler = new Handler () { @Override public void handleMessage ( Message msg ) { int action = msg . what ; String msgStr = ( String ) msg . obj ; if ( action == VIEW_INPUT ){ mInputTextView . setText ( msgStr ); } else if ( action == VIEW_STATUS ){ mStatusTextView . setText ( msgStr ); } } }; }","title":"MainActivity.java"},{"location":"article2-2/#android","text":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\u3001\u53ca\u3073\u78ba\u8a8d \u6e96\u5099\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 Android\u306eConnect\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3001\uff11\u301c\uff13\u79d2\u307b\u3069\u3067\u8d64\u70b9\u6ec5\u304b\u3089\u7dd1\u306e\u70b9\u706f\u306b\u304b\u308f\u308a\u307e\u3059\u3002 \u3053\u308c\u3067\u30c7\u30fc\u30bf\u304c\u9001\u53d7\u4fe1\u3067\u304d\u308b\u72b6\u614b\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Connect\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3089\u3001\u6b21\u306bAndroid\u306eWrite\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 Arduino\u5074\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u78ba\u8a8d\u3059\u308b\u3068\u300150(2\u306eascii\u30b3\u30fc\u30c9)\u304c\u8ee2\u9001\u3055\u308c\u307e\u3059\u3002 \u203bArduino\u5074\u3067Serial.write(\u53d6\u5f97\u5024)\u3068\u3059\u308b\u304b\u3001char\u578b\u306e\u5909\u6570\u306b\u683c\u7d0d\u3057\u3066\u304b\u3089\u51fa\u529b\u3059\u308b\u3068\u300c2\u300d\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 Arduino\u306eSerial Console\u3067\u3001\u6587\u5b57\u3092\u5165\u529b\u3057\u3001\u9001\u4fe1\u3092\u62bc\u3059\u3068\u3001Android\u306b\u6587\u5b57\u304c\u9001\u3089\u308c\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002 Arduino\u5074\u3067\u6587\u5b57\u3092\u5165\u529b\u3057\u3001\u9001\u4fe1\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 Android\u5074\u306b\u6587\u5b57\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002","title":"Android\u7aef\u672b\u3067\u306e\u5b9f\u884c\u8a2d\u5b9a"},{"location":"article2-3/","text":"Android\u304b\u3089LED\u64cd\u4f5c \u4eca\u5ea6\u306f\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u5074\u304b\u3089\u304b\u3089Arduino\u3092\u901a\u3057\u3066LED\u3092\u64cd\u4f5c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 Arduino\u8a2d\u5b9a \u4eca\u56deLED\u3057\u307e\u3059\u304c\u3001LED\u306b\u306f\u30d7\u30e9\u30b9\u30de\u30a4\u30ca\u30b9\u306e\u5411\u304d\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002 \u9577\u3044\u65b9\u304c\u30d7\u30e9\u30b9(\u3053\u306e\u5834\u5408\u306f13\u30d4\u30f3)\u306b\u306a\u308a\u307e\u3059\u3002 Brick\u306eLED\u306e\u5834\u5408\u306f13\u30d4\u30f3\u306b\u63a5\u7d9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Arduino Uno \u56de\u8def (Arduino Uno) \u30b9\u30b1\u30c3\u30c1 (Arduino Uno) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include <SoftwareSerial.h> #define led 13 // 13\u756a\u30d4\u30f3\u306b\u3066LED\u3092\u5236\u5fa1 SoftwareSerial android ( 2 , 3 ); // SoftwareSerial android(12,13); // FaBo Brick\u4f7f\u7528\u6642 int inByte = 0 ; // android\u304b\u3089\u306e\u30c6\u30ad\u30b9\u30c8\u53d6\u5f97\u7528 void setup (){ // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); // LED\u30d4\u30f3\u306e\u51fa\u529b\u8a2d\u5b9a pinMode ( led , OUTPUT ); Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ inByte = android . read (); Serial . println ( inByte ); // \u53d7\u4fe1\u30c7\u30fc\u30bf\u306b\u3088\u308aLED\u306e\u5236\u5fa1\u3092\u884c\u3046 if ( inByte == 49 ){ digitalWrite ( led , HIGH ); } else { digitalWrite ( led , LOW ); } } if ( Serial . available ()){ android . write ( Serial . read ()); } } 25\u884c\u76ee\u306f\u53d6\u5f97\u3057\u305f\u5024\u306e\u5224\u5b9a\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002 \u306a\u304a\u3001\u3053\u306e49\u3068\u3044\u3046\u6570\u5024\u306fASCII\u30b3\u30fc\u30c9\u3068\u306a\u3063\u3066\u304a\u308a\u300149\u306f'1'\u300148\u306f'0'\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002 \u8a73\u7d30\u306b\u3064\u304d\u307e\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u3054\u53c2\u7167\u4e0b\u3055\u3044\u3002 e-words \u3000\u6587\u5b57\u30b3\u30fc\u30c9\u8868 http://e-words.jp/p/r-ascii.html \u203b\u4eca\u56de\u306finByte\u306e\u5909\u6570\u3092\u6570\u5024\u578b(int)\u306b\u3057\u307e\u3057\u305f\u304c\u3001char\u578b\u306b\u3059\u308b\u3053\u3068\u306749\u3092'1'\u3068\u3057\u3066\u6271\u3046\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002 Arduino Mega \u56de\u8def (Arduino Mega) \u30b9\u30b1\u30c3\u30c1 (Arduino Mega) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #define led 13 // 13\u756a\u30d4\u30f3\u306b\u3066LED\u3092\u5236\u5fa1 int inByte = 0 ; // android\u304b\u3089\u306e\u30c6\u30ad\u30b9\u30c8\u53d6\u5f97\u7528 void setup (){ // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a Serial1 . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); // LED\u30d4\u30f3\u306e\u51fa\u529b\u8a2d\u5b9a pinMode ( led , OUTPUT ); Serial . write ( \"init\" ); } void loop (){ if ( Serial1 . available ()){ inByte = Serial1 . read (); Serial . println ( inByte ); // \u53d7\u4fe1\u30c7\u30fc\u30bf\u306b\u3088\u308aLED\u306e\u5236\u5fa1\u3092\u884c\u3046 if ( inByte == 49 ){ digitalWrite ( led , HIGH ); } else { digitalWrite ( led , LOW ); } } if ( Serial . available ()){ Serial1 . write ( Serial . read ()); } } Android\u8a2d\u5b9a activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:orientation= \"vertical\" > <Button android:id= \"@+id/connectButton\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"Connect\" /> <TextView android:id= \"@+id/statusValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <TextView android:id= \"@+id/inputValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/ledOnButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"LED ON\" /> <Button android:id= \"@+id/ledOffButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"LED OFF\" /> </LinearLayout> MainActivity.javapackage com.gclue.mybluetooth ; import android.bluetooth.BluetoothAdapter ; import android.bluetooth.BluetoothDevice ; import android.bluetooth.BluetoothSocket ; import android.os.Bundle ; import android.os.Handler ; import android.os.Message ; //import android.support.v7.app.ActionBarActivity; import android.support.v7.app.AppCompatActivity ; import android.util.Log ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import java.io.IOException ; import java.io.InputStream ; import java.io.OutputStream ; import java.util.Set ; import java.util.UUID ; //public class MainActivity extends ActionBarActivity implements Runnable, View.OnClickListener { public class MainActivity extends AppCompatActivity implements Runnable , View . OnClickListener { /* tag */ private static final String TAG = \"BluetoothSample\" ; /* Bluetooth Adapter */ private BluetoothAdapter mAdapter ; /* Bluetooth\u30c7\u30d0\u30a4\u30b9 */ private BluetoothDevice mDevice ; /* Bluetooth UUID */ private final UUID MY_UUID = UUID . fromString ( \"00001101-0000-1000-8000-00805F9B34FB\" ); /* \u30c7\u30d0\u30a4\u30b9\u540d */ private final String DEVICE_NAME = \"RNBT-205F\" ; /* Soket */ private BluetoothSocket mSocket ; /* Thread */ private Thread mThread ; /* Thread\u306e\u72b6\u614b\u3092\u8868\u3059 */ private boolean isRunning ; /** \u63a5\u7d9a\u30dc\u30bf\u30f3. */ private Button connectButton ; /** LED ON\u30dc\u30bf\u30f3. */ private Button ledOnButton ; /** LED OFF\u30dc\u30bf\u30f3. */ private Button ledOffButton ; /** \u30b9\u30c6\u30fc\u30bf\u30b9. */ private TextView mStatusTextView ; /** Bluetooth\u304b\u3089\u53d7\u4fe1\u3057\u305f\u5024. */ private TextView mInputTextView ; /** Action(\u30b9\u30c6\u30fc\u30bf\u30b9\u8868\u793a). */ private static final int VIEW_STATUS = 0 ; /** Action(\u53d6\u5f97\u6587\u5b57\u5217). */ private static final int VIEW_INPUT = 1 ; /** Bluetooth\u306eOutputStream. */ OutputStream mmOutputStream = null ; /** Connect\u72b6\u614b\u78ba\u8a8d\u7528\u30d5\u30e9\u30b0. */ private boolean connectFlg = false ; @Override public void onCreate ( Bundle savedInstanceState ){ super . onCreate ( savedInstanceState ); // Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u30d3\u30e5\u30fc\u3092\u8868\u793a setContentView ( R . layout . activity_main ); // TextView\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) mInputTextView = ( TextView ) findViewById ( R . id . inputValue ); mStatusTextView = ( TextView ) findViewById ( R . id . statusValue ); // Button\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) connectButton = ( Button ) findViewById ( R . id . connectButton ); ledOnButton = ( Button ) findViewById ( R . id . ledOnButton ); ledOffButton = ( Button ) findViewById ( R . id . ledOffButton ); // Button\u306e\u30a4\u30d9\u30f3\u30c8\u8a2d\u5b9a connectButton . setOnClickListener ( this ); ledOnButton . setOnClickListener ( this ); ledOffButton . setOnClickListener ( this ); // Bluetooth\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u53d6\u5f97 // \u30c7\u30d0\u30a4\u30b9\u540d\u306f\u3001RNBT-XXXX\u306b\u306a\u308b\u305f\u3081\u3001 // DVICE_NAME\u3067\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u5b9a\u7fa9 mAdapter = BluetoothAdapter . getDefaultAdapter (); mStatusTextView . setText ( \"SearchDevice\" ); Set < BluetoothDevice > devices = mAdapter . getBondedDevices (); for ( BluetoothDevice device : devices ){ if ( device . getName (). equals ( DEVICE_NAME )){ mStatusTextView . setText ( \"find: \" + device . getName ()); mDevice = device ; } } } // \u5225\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u304c\u8d77\u52d5\u3057\u305f\u5834\u5408\u306e\u51e6\u7406 @Override protected void onPause (){ super . onPause (); isRunning = false ; connectFlg = false ; try { mSocket . close (); } catch ( Exception e ){} } // \u30b9\u30ec\u30c3\u30c9\u51e6\u7406(connect\u30dc\u30bf\u30f3\u62bc\u4e0b\u5f8c\u306b\u5b9f\u884c) @Override public void run () { InputStream mmInStream = null ; Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connecting...\" ; mHandler . sendMessage ( valueMsg ); try { // \u53d6\u5f97\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u4f7f\u3063\u3066Bluetooth\u3067Socket\u63a5\u7d9a mSocket = mDevice . createRfcommSocketToServiceRecord ( MY_UUID ); mSocket . connect (); mmInStream = mSocket . getInputStream (); mmOutputStream = mSocket . getOutputStream (); // InputStream\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u683c\u7d0d byte [] buffer = new byte [ 1024 ] ; // \u53d6\u5f97\u3057\u305f\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3092\u683c\u7d0d int bytes ; valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connected.\" ; mHandler . sendMessage ( valueMsg ); connectFlg = true ; while ( isRunning ){ // InputStream\u306e\u8aad\u307f\u8fbc\u307f bytes = mmInStream . read ( buffer ); Log . i ( TAG , \"bytes=\" + bytes ); // String\u578b\u306b\u5909\u63db String readMsg = new String ( buffer , 0 , bytes ); // null\u4ee5\u5916\u306a\u3089\u8868\u793a if ( readMsg . trim () != null && ! readMsg . trim (). equals ( \"\" )){ Log . i ( TAG , \"value=\" + readMsg . trim ()); valueMsg = new Message (); valueMsg . what = VIEW_INPUT ; valueMsg . obj = readMsg ; mHandler . sendMessage ( valueMsg ); } } } // \u30a8\u30e9\u30fc\u51e6\u7406 catch ( Exception e ){ valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error1:\" + e ; mHandler . sendMessage ( valueMsg ); try { mSocket . close (); } catch ( Exception ee ){} isRunning = false ; connectFlg = false ; } } // \u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u306e\u51e6\u7406 @Override public void onClick ( View v ) { // Connect\u30dc\u30bf\u30f3 if ( v . equals ( connectButton )) { if ( ! connectFlg ) { mStatusTextView . setText ( \"try connect\" ); mThread = new Thread ( this ); // Thread\u3092\u8d77\u52d5\u3057\u3001Bluetooth\u63a5\u7d9a isRunning = true ; mThread . start (); } } // ledOn\u30dc\u30bf\u30f3 else if ( v . equals ( ledOnButton )) { if ( connectFlg ) { try { mmOutputStream . write ( \"1\" . getBytes ()); mStatusTextView . setText ( \"LED ON:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error3:\" + e ; mHandler . sendMessage ( valueMsg ); } } else { mStatusTextView . setText ( \"Please push the connect button\" ); } } // ledOff\u30dc\u30bf\u30f3 else if ( v . equals ( ledOffButton )) { if ( connectFlg ) { try { mmOutputStream . write ( \"0\" . getBytes ()); mStatusTextView . setText ( \"LED OFF:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error4:\" + e ; mHandler . sendMessage ( valueMsg ); } } else { mStatusTextView . setText ( \"Please push the connect button\" ); } } } /** * \u63cf\u753b\u51e6\u7406\u306fHandler\u3067\u304a\u3053\u306a\u3046 */ Handler mHandler = new Handler () { @Override public void handleMessage ( Message msg ) { int action = msg . what ; String msgStr = ( String ) msg . obj ; if ( action == VIEW_INPUT ){ mInputTextView . setText ( msgStr ); } else if ( action == VIEW_STATUS ){ mStatusTextView . setText ( msgStr ); } } }; } \u5b9f\u884c\u78ba\u8a8d Android\u7aef\u672b\u306b\u30dc\u30bf\u30f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u300cConnect\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 Bluetooth\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8d64\u3044\u70b9\u6ec5\u304c\u6d88\u3048\u3001\u7dd1\u306e\u30e9\u30f3\u30d7\u304c\u70b9\u706f\u3057\u307e\u3057\u305f\u3002 \u3053\u306e\u72b6\u614b\u3067\u300cLED ON\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 LED\u304c\u70b9\u706f\u3057\u307e\u3057\u305f\u3002 \u3053\u306e\u72b6\u614b\u3067\u300cLED OFF\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068LED\u304c\u6d88\u706f\u3057\u307e\u3059\u306e\u3067\u3001\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002","title":"Android\u304b\u3089LED\u64cd\u4f5c"},{"location":"article2-3/#androidled","text":"\u4eca\u5ea6\u306f\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u5074\u304b\u3089\u304b\u3089Arduino\u3092\u901a\u3057\u3066LED\u3092\u64cd\u4f5c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002","title":"Android\u304b\u3089LED\u64cd\u4f5c"},{"location":"article2-3/#arduino","text":"\u4eca\u56deLED\u3057\u307e\u3059\u304c\u3001LED\u306b\u306f\u30d7\u30e9\u30b9\u30de\u30a4\u30ca\u30b9\u306e\u5411\u304d\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002 \u9577\u3044\u65b9\u304c\u30d7\u30e9\u30b9(\u3053\u306e\u5834\u5408\u306f13\u30d4\u30f3)\u306b\u306a\u308a\u307e\u3059\u3002 Brick\u306eLED\u306e\u5834\u5408\u306f13\u30d4\u30f3\u306b\u63a5\u7d9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Arduino\u8a2d\u5b9a"},{"location":"article2-3/#arduino-uno","text":"","title":"Arduino Uno"},{"location":"article2-3/#arduino-uno_1","text":"","title":"\u56de\u8def (Arduino Uno)"},{"location":"article2-3/#arduino-uno_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include <SoftwareSerial.h> #define led 13 // 13\u756a\u30d4\u30f3\u306b\u3066LED\u3092\u5236\u5fa1 SoftwareSerial android ( 2 , 3 ); // SoftwareSerial android(12,13); // FaBo Brick\u4f7f\u7528\u6642 int inByte = 0 ; // android\u304b\u3089\u306e\u30c6\u30ad\u30b9\u30c8\u53d6\u5f97\u7528 void setup (){ // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); // LED\u30d4\u30f3\u306e\u51fa\u529b\u8a2d\u5b9a pinMode ( led , OUTPUT ); Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ inByte = android . read (); Serial . println ( inByte ); // \u53d7\u4fe1\u30c7\u30fc\u30bf\u306b\u3088\u308aLED\u306e\u5236\u5fa1\u3092\u884c\u3046 if ( inByte == 49 ){ digitalWrite ( led , HIGH ); } else { digitalWrite ( led , LOW ); } } if ( Serial . available ()){ android . write ( Serial . read ()); } } 25\u884c\u76ee\u306f\u53d6\u5f97\u3057\u305f\u5024\u306e\u5224\u5b9a\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002 \u306a\u304a\u3001\u3053\u306e49\u3068\u3044\u3046\u6570\u5024\u306fASCII\u30b3\u30fc\u30c9\u3068\u306a\u3063\u3066\u304a\u308a\u300149\u306f'1'\u300148\u306f'0'\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002 \u8a73\u7d30\u306b\u3064\u304d\u307e\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u3054\u53c2\u7167\u4e0b\u3055\u3044\u3002 e-words \u3000\u6587\u5b57\u30b3\u30fc\u30c9\u8868 http://e-words.jp/p/r-ascii.html \u203b\u4eca\u56de\u306finByte\u306e\u5909\u6570\u3092\u6570\u5024\u578b(int)\u306b\u3057\u307e\u3057\u305f\u304c\u3001char\u578b\u306b\u3059\u308b\u3053\u3068\u306749\u3092'1'\u3068\u3057\u3066\u6271\u3046\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u30b9\u30b1\u30c3\u30c1 (Arduino Uno)"},{"location":"article2-3/#arduino-mega","text":"","title":"Arduino Mega"},{"location":"article2-3/#arduino-mega_1","text":"","title":"\u56de\u8def (Arduino Mega)"},{"location":"article2-3/#arduino-mega_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #define led 13 // 13\u756a\u30d4\u30f3\u306b\u3066LED\u3092\u5236\u5fa1 int inByte = 0 ; // android\u304b\u3089\u306e\u30c6\u30ad\u30b9\u30c8\u53d6\u5f97\u7528 void setup (){ // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a Serial1 . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); // LED\u30d4\u30f3\u306e\u51fa\u529b\u8a2d\u5b9a pinMode ( led , OUTPUT ); Serial . write ( \"init\" ); } void loop (){ if ( Serial1 . available ()){ inByte = Serial1 . read (); Serial . println ( inByte ); // \u53d7\u4fe1\u30c7\u30fc\u30bf\u306b\u3088\u308aLED\u306e\u5236\u5fa1\u3092\u884c\u3046 if ( inByte == 49 ){ digitalWrite ( led , HIGH ); } else { digitalWrite ( led , LOW ); } } if ( Serial . available ()){ Serial1 . write ( Serial . read ()); } }","title":"\u30b9\u30b1\u30c3\u30c1 (Arduino Mega)"},{"location":"article2-3/#android","text":"activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:orientation= \"vertical\" > <Button android:id= \"@+id/connectButton\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"Connect\" /> <TextView android:id= \"@+id/statusValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <TextView android:id= \"@+id/inputValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/ledOnButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"LED ON\" /> <Button android:id= \"@+id/ledOffButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"LED OFF\" /> </LinearLayout> MainActivity.javapackage com.gclue.mybluetooth ; import android.bluetooth.BluetoothAdapter ; import android.bluetooth.BluetoothDevice ; import android.bluetooth.BluetoothSocket ; import android.os.Bundle ; import android.os.Handler ; import android.os.Message ; //import android.support.v7.app.ActionBarActivity; import android.support.v7.app.AppCompatActivity ; import android.util.Log ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import java.io.IOException ; import java.io.InputStream ; import java.io.OutputStream ; import java.util.Set ; import java.util.UUID ; //public class MainActivity extends ActionBarActivity implements Runnable, View.OnClickListener { public class MainActivity extends AppCompatActivity implements Runnable , View . OnClickListener { /* tag */ private static final String TAG = \"BluetoothSample\" ; /* Bluetooth Adapter */ private BluetoothAdapter mAdapter ; /* Bluetooth\u30c7\u30d0\u30a4\u30b9 */ private BluetoothDevice mDevice ; /* Bluetooth UUID */ private final UUID MY_UUID = UUID . fromString ( \"00001101-0000-1000-8000-00805F9B34FB\" ); /* \u30c7\u30d0\u30a4\u30b9\u540d */ private final String DEVICE_NAME = \"RNBT-205F\" ; /* Soket */ private BluetoothSocket mSocket ; /* Thread */ private Thread mThread ; /* Thread\u306e\u72b6\u614b\u3092\u8868\u3059 */ private boolean isRunning ; /** \u63a5\u7d9a\u30dc\u30bf\u30f3. */ private Button connectButton ; /** LED ON\u30dc\u30bf\u30f3. */ private Button ledOnButton ; /** LED OFF\u30dc\u30bf\u30f3. */ private Button ledOffButton ; /** \u30b9\u30c6\u30fc\u30bf\u30b9. */ private TextView mStatusTextView ; /** Bluetooth\u304b\u3089\u53d7\u4fe1\u3057\u305f\u5024. */ private TextView mInputTextView ; /** Action(\u30b9\u30c6\u30fc\u30bf\u30b9\u8868\u793a). */ private static final int VIEW_STATUS = 0 ; /** Action(\u53d6\u5f97\u6587\u5b57\u5217). */ private static final int VIEW_INPUT = 1 ; /** Bluetooth\u306eOutputStream. */ OutputStream mmOutputStream = null ; /** Connect\u72b6\u614b\u78ba\u8a8d\u7528\u30d5\u30e9\u30b0. */ private boolean connectFlg = false ; @Override public void onCreate ( Bundle savedInstanceState ){ super . onCreate ( savedInstanceState ); // Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u30d3\u30e5\u30fc\u3092\u8868\u793a setContentView ( R . layout . activity_main ); // TextView\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) mInputTextView = ( TextView ) findViewById ( R . id . inputValue ); mStatusTextView = ( TextView ) findViewById ( R . id . statusValue ); // Button\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) connectButton = ( Button ) findViewById ( R . id . connectButton ); ledOnButton = ( Button ) findViewById ( R . id . ledOnButton ); ledOffButton = ( Button ) findViewById ( R . id . ledOffButton ); // Button\u306e\u30a4\u30d9\u30f3\u30c8\u8a2d\u5b9a connectButton . setOnClickListener ( this ); ledOnButton . setOnClickListener ( this ); ledOffButton . setOnClickListener ( this ); // Bluetooth\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u53d6\u5f97 // \u30c7\u30d0\u30a4\u30b9\u540d\u306f\u3001RNBT-XXXX\u306b\u306a\u308b\u305f\u3081\u3001 // DVICE_NAME\u3067\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u5b9a\u7fa9 mAdapter = BluetoothAdapter . getDefaultAdapter (); mStatusTextView . setText ( \"SearchDevice\" ); Set < BluetoothDevice > devices = mAdapter . getBondedDevices (); for ( BluetoothDevice device : devices ){ if ( device . getName (). equals ( DEVICE_NAME )){ mStatusTextView . setText ( \"find: \" + device . getName ()); mDevice = device ; } } } // \u5225\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u304c\u8d77\u52d5\u3057\u305f\u5834\u5408\u306e\u51e6\u7406 @Override protected void onPause (){ super . onPause (); isRunning = false ; connectFlg = false ; try { mSocket . close (); } catch ( Exception e ){} } // \u30b9\u30ec\u30c3\u30c9\u51e6\u7406(connect\u30dc\u30bf\u30f3\u62bc\u4e0b\u5f8c\u306b\u5b9f\u884c) @Override public void run () { InputStream mmInStream = null ; Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connecting...\" ; mHandler . sendMessage ( valueMsg ); try { // \u53d6\u5f97\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u4f7f\u3063\u3066Bluetooth\u3067Socket\u63a5\u7d9a mSocket = mDevice . createRfcommSocketToServiceRecord ( MY_UUID ); mSocket . connect (); mmInStream = mSocket . getInputStream (); mmOutputStream = mSocket . getOutputStream (); // InputStream\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u683c\u7d0d byte [] buffer = new byte [ 1024 ] ; // \u53d6\u5f97\u3057\u305f\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3092\u683c\u7d0d int bytes ; valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connected.\" ; mHandler . sendMessage ( valueMsg ); connectFlg = true ; while ( isRunning ){ // InputStream\u306e\u8aad\u307f\u8fbc\u307f bytes = mmInStream . read ( buffer ); Log . i ( TAG , \"bytes=\" + bytes ); // String\u578b\u306b\u5909\u63db String readMsg = new String ( buffer , 0 , bytes ); // null\u4ee5\u5916\u306a\u3089\u8868\u793a if ( readMsg . trim () != null && ! readMsg . trim (). equals ( \"\" )){ Log . i ( TAG , \"value=\" + readMsg . trim ()); valueMsg = new Message (); valueMsg . what = VIEW_INPUT ; valueMsg . obj = readMsg ; mHandler . sendMessage ( valueMsg ); } } } // \u30a8\u30e9\u30fc\u51e6\u7406 catch ( Exception e ){ valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error1:\" + e ; mHandler . sendMessage ( valueMsg ); try { mSocket . close (); } catch ( Exception ee ){} isRunning = false ; connectFlg = false ; } } // \u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u306e\u51e6\u7406 @Override public void onClick ( View v ) { // Connect\u30dc\u30bf\u30f3 if ( v . equals ( connectButton )) { if ( ! connectFlg ) { mStatusTextView . setText ( \"try connect\" ); mThread = new Thread ( this ); // Thread\u3092\u8d77\u52d5\u3057\u3001Bluetooth\u63a5\u7d9a isRunning = true ; mThread . start (); } } // ledOn\u30dc\u30bf\u30f3 else if ( v . equals ( ledOnButton )) { if ( connectFlg ) { try { mmOutputStream . write ( \"1\" . getBytes ()); mStatusTextView . setText ( \"LED ON:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error3:\" + e ; mHandler . sendMessage ( valueMsg ); } } else { mStatusTextView . setText ( \"Please push the connect button\" ); } } // ledOff\u30dc\u30bf\u30f3 else if ( v . equals ( ledOffButton )) { if ( connectFlg ) { try { mmOutputStream . write ( \"0\" . getBytes ()); mStatusTextView . setText ( \"LED OFF:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error4:\" + e ; mHandler . sendMessage ( valueMsg ); } } else { mStatusTextView . setText ( \"Please push the connect button\" ); } } } /** * \u63cf\u753b\u51e6\u7406\u306fHandler\u3067\u304a\u3053\u306a\u3046 */ Handler mHandler = new Handler () { @Override public void handleMessage ( Message msg ) { int action = msg . what ; String msgStr = ( String ) msg . obj ; if ( action == VIEW_INPUT ){ mInputTextView . setText ( msgStr ); } else if ( action == VIEW_STATUS ){ mStatusTextView . setText ( msgStr ); } } }; }","title":"Android\u8a2d\u5b9a"},{"location":"article2-3/#_1","text":"Android\u7aef\u672b\u306b\u30dc\u30bf\u30f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u300cConnect\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 Bluetooth\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8d64\u3044\u70b9\u6ec5\u304c\u6d88\u3048\u3001\u7dd1\u306e\u30e9\u30f3\u30d7\u304c\u70b9\u706f\u3057\u307e\u3057\u305f\u3002 \u3053\u306e\u72b6\u614b\u3067\u300cLED ON\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 LED\u304c\u70b9\u706f\u3057\u307e\u3057\u305f\u3002 \u3053\u306e\u72b6\u614b\u3067\u300cLED OFF\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068LED\u304c\u6d88\u706f\u3057\u307e\u3059\u306e\u3067\u3001\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002","title":"\u5b9f\u884c\u78ba\u8a8d"},{"location":"article2-4/","text":"\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u3092Android\u7aef\u672b\u3067\u8868\u793a \u4eca\u56de\u306f\u4f7f\u7528\u3059\u308b\u30bb\u30f3\u30b5\u30fc\u306f\u8ddd\u96e2\u30bb\u30f3\u30b5\u30fc\u3067\u3059\u3002 \u203bFaBo Brick\u3092\u4f7f\u7528\u6642\u306f\u4ed6\u306e\u30bb\u30f3\u30b5\u30fc\u3092\u3054\u4f7f\u7528\u4e0b\u3055\u3044\u3002 Arduino\u8a2d\u5b9a Arduino Uno \u56de\u8def (Arduino Uno) \u30b9\u30b1\u30c3\u30c1 (Arduino Uno) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 #include <SoftwareSerial.h> #define led 13 // 13\u756a\u30d4\u30f3\u306b\u3066LED\u3092\u5236\u5fa1 #define sensorPin 0 // \u30bb\u30f3\u30b5\u30fc\u3092\u4f7f\u7528\u3059\u308b\u30d4\u30f3 SoftwareSerial android ( 2 , 3 ); //SoftwareSerial android(12,13); // FaBo Brick\u4f7f\u7528\u6642 int inByte = 0 ; // android\u304b\u3089\u306e\u30c6\u30ad\u30b9\u30c8\u53d6\u5f97\u7528 int getSensor = 0 ; // \u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u53d6\u5f97\u7528 void setup (){ // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); // LED\u30d4\u30f3\u306e\u51fa\u529b\u8a2d\u5b9a pinMode ( led , OUTPUT ); Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ inByte = android . read (); Serial . println ( inByte ); // \u53d7\u4fe1\u30c7\u30fc\u30bf\u306b\u3088\u308aLED\u306e\u5236\u5fa1\u3092\u884c\u3046 if ( inByte == 49 ){ digitalWrite ( led , HIGH ); } else if ( inByte == 50 ){ // \u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u53d6\u5f97 getSensor = analogRead ( sensorPin ); android . print ( getSensor ); } else { digitalWrite ( led , LOW ); } } if ( Serial . available ()){ android . write ( Serial . read ()); } } Arduino Mega \u56de\u8def (Arduino Mega) \u30b9\u30b1\u30c3\u30c1 (Arduino Mega) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 int led = 13 ; // 13\u756a\u30d4\u30f3\u306b\u3066LED\u3092\u5236\u5fa1 int inByte = 0 ; // android\u304b\u3089\u306e\u30c6\u30ad\u30b9\u30c8\u53d6\u5f97\u7528 int sensorPin = 0 ; // \u30bb\u30f3\u30b5\u30fc\u3092\u4f7f\u7528\u3059\u308b\u30d4\u30f3 int getSensor = 0 ; // \u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u53d6\u5f97\u7528 void setup (){ // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); // LED\u30d4\u30f3\u306e\u51fa\u529b\u8a2d\u5b9a pinMode ( led , OUTPUT ); Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ inByte = android . read (); Serial . println ( inByte ); // \u53d7\u4fe1\u30c7\u30fc\u30bf\u306b\u3088\u308aLED\u306e\u5236\u5fa1\u3092\u884c\u3046 if ( inByte == 49 ){ digitalWrite ( led , HIGH ); } else if ( inByte == 50 ){ // \u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u53d6\u5f97 getSensor = analogRead ( sensorPin ); Serial1 . print ( getSensor ); } else { digitalWrite ( led , LOW ); } } if ( Serial . available ()){ Serial1 . write ( Serial . read ()); } } Android\u8a2d\u5b9a \u6b21\u306bAndroid\u5074\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u3057\u307e\u3059\u3002 BluetoothServer.javapackage gclue.com.mybluetooth ; import android.bluetooth.BluetoothAdapter ; import android.bluetooth.BluetoothDevice ; import android.bluetooth.BluetoothSocket ; import android.os.Bundle ; import android.os.Handler ; import android.os.Message ; //import android.support.v7.app.ActionBarActivity; import android.support.v7.app.AppCompatActivity ; import android.util.Log ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import java.io.IOException ; import java.io.InputStream ; import java.io.OutputStream ; import java.util.Set ; import java.util.UUID ; //public class MainActivity extends ActionBarActivity implements Runnable, View.OnClickListener { public class MainActivity extends AppCompatActivity implements Runnable , View . OnClickListener { /* tag */ private static final String TAG = \"BluetoothSample\" ; /* Bluetooth Adapter */ private BluetoothAdapter mAdapter ; /* Bluetooth\u30c7\u30d0\u30a4\u30b9 */ private BluetoothDevice mDevice ; /* Bluetooth UUID */ private final UUID MY_UUID = UUID . fromString ( \"00001101-0000-1000-8000-00805F9B34FB\" ); /* \u30c7\u30d0\u30a4\u30b9\u540d */ private final String DEVICE_NAME = \"RNBT-205F\" ; /* Soket */ private BluetoothSocket mSocket ; /* Thread */ private Thread mThread ; /* Thread\u306e\u72b6\u614b\u3092\u8868\u3059 */ private boolean isRunning ; /** \u63a5\u7d9a\u30dc\u30bf\u30f3. */ private Button connectButton ; /** LED ON\u30dc\u30bf\u30f3. */ private Button ledOnButton ; /** LED OFF\u30dc\u30bf\u30f3. */ private Button ledOffButton ; /** Sensor\u30dc\u30bf\u30f3. */ private Button sensorButton ; /** \u30b9\u30c6\u30fc\u30bf\u30b9. */ private TextView mStatusTextView ; /** Bluetooth\u304b\u3089\u53d7\u4fe1\u3057\u305f\u5024. */ private TextView mInputTextView ; /** Action(\u30b9\u30c6\u30fc\u30bf\u30b9\u8868\u793a). */ private static final int VIEW_STATUS = 0 ; /** Action(\u53d6\u5f97\u6587\u5b57\u5217). */ private static final int VIEW_INPUT = 1 ; /** Bluetooth\u306eOutputStream. */ OutputStream mmOutputStream = null ; private boolean connectFlg = false ; @Override public void onCreate ( Bundle savedInstanceState ){ super . onCreate ( savedInstanceState ); // Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u30d3\u30e5\u30fc\u3092\u8868\u793a setContentView ( R . layout . activity_main ); // TextView\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) mInputTextView = ( TextView ) findViewById ( R . id . inputValue ); mStatusTextView = ( TextView ) findViewById ( R . id . statusValue ); // Button\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) connectButton = ( Button ) findViewById ( R . id . connectButton ); ledOnButton = ( Button ) findViewById ( R . id . ledOnButton ); ledOffButton = ( Button ) findViewById ( R . id . ledOffButton ); sensorButton = ( Button ) findViewById ( R . id . sensorButton ); // \u30dc\u30bf\u30f3\u306e\u30a4\u30d9\u30f3\u30c8\u53d6\u5f97\u8a2d\u5b9a connectButton . setOnClickListener ( this ); ledOnButton . setOnClickListener ( this ); ledOffButton . setOnClickListener ( this ); sensorButton . setOnClickListener ( this ); // Bluetooth\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u53d6\u5f97 // \u30c7\u30d0\u30a4\u30b9\u540d\u306f\u3001RNBT-XXXX\u306b\u306a\u308b\u305f\u3081\u3001 // DVICE_NAME\u3067\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u5b9a\u7fa9 mAdapter = BluetoothAdapter . getDefaultAdapter (); mStatusTextView . setText ( \"SearchDevice\" ); Set < BluetoothDevice > devices = mAdapter . getBondedDevices (); for ( BluetoothDevice device : devices ){ if ( device . getName (). equals ( DEVICE_NAME )){ mStatusTextView . setText ( \"find: \" + device . getName ()); mDevice = device ; } } } // \u5225\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u304c\u8d77\u52d5\u3057\u305f\u5834\u5408\u306e\u51e6\u7406 @Override protected void onPause (){ super . onPause (); isRunning = false ; connectFlg = false ; try { mSocket . close (); } catch ( Exception e ){} } // \u30b9\u30ec\u30c3\u30c9\u51e6\u7406(connect\u30dc\u30bf\u30f3\u62bc\u4e0b\u5f8c\u306b\u5b9f\u884c) @Override public void run () { InputStream mmInStream = null ; Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connecting...\" ; mHandler . sendMessage ( valueMsg ); try { // \u53d6\u5f97\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u4f7f\u3063\u3066Bluetooth\u3067Socket\u63a5\u7d9a mSocket = mDevice . createRfcommSocketToServiceRecord ( MY_UUID ); mSocket . connect (); mmInStream = mSocket . getInputStream (); mmOutputStream = mSocket . getOutputStream (); // InputStream\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u683c\u7d0d byte [] buffer = new byte [ 1024 ] ; // \u53d6\u5f97\u3057\u305f\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3092\u683c\u7d0d int bytes ; valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connected.\" ; mHandler . sendMessage ( valueMsg ); connectFlg = true ; while ( isRunning ){ // InputStream\u306e\u8aad\u307f\u8fbc\u307f bytes = mmInStream . read ( buffer ); Log . i ( TAG , \"bytes=\" + bytes ); // String\u578b\u306b\u5909\u63db String readMsg = new String ( buffer , 0 , bytes ); // null\u4ee5\u5916\u306a\u3089\u8868\u793a if ( readMsg . trim () != null && ! readMsg . trim (). equals ( \"\" )){ Log . i ( TAG , \"value=\" + readMsg . trim ()); valueMsg = new Message (); valueMsg . what = VIEW_INPUT ; valueMsg . obj = readMsg ; mHandler . sendMessage ( valueMsg ); } } } // \u30a8\u30e9\u30fc\u51e6\u7406 catch ( Exception e ){ valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error1:\" + e ; mHandler . sendMessage ( valueMsg ); try { mSocket . close (); } catch ( Exception ee ){} isRunning = false ; connectFlg = false ; } } @Override public void onClick ( View v ) { if ( v . equals ( connectButton )) { if ( ! connectFlg ) { mStatusTextView . setText ( \"try connect\" ); mThread = new Thread ( this ); // Thread\u3092\u8d77\u52d5\u3057\u3001Bluetooth\u63a5\u7d9a isRunning = true ; mThread . start (); } } else if ( v . equals ( ledOnButton )) { if ( connectFlg ) { try { mmOutputStream . write ( \"1\" . getBytes ()); mStatusTextView . setText ( \"LED ON:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error3:\" + e ; mHandler . sendMessage ( valueMsg ); } } else { mStatusTextView . setText ( \"Please push the connect button\" ); } } else if ( v . equals ( ledOffButton )) { if ( connectFlg ) { try { mmOutputStream . write ( \"0\" . getBytes ()); mStatusTextView . setText ( \"LED OFF:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error4:\" + e ; mHandler . sendMessage ( valueMsg ); } } else { mStatusTextView . setText ( \"Please push the connect button\" ); } } else if ( v . equals ( sensorButton )) { if ( connectFlg ) { try { mmOutputStream . write ( \"2\" . getBytes ()); mStatusTextView . setText ( \"Sensor Data:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error5:\" + e ; mHandler . sendMessage ( valueMsg ); } } else { mStatusTextView . setText ( \"Please push the connect button\" ); } } } /** * \u63cf\u753b\u51e6\u7406\u306fHandler\u3067\u304a\u3053\u306a\u3046 */ Handler mHandler = new Handler () { @Override public void handleMessage ( Message msg ) { int action = msg . what ; String msgStr = ( String ) msg . obj ; if ( action == VIEW_INPUT ){ mInputTextView . setText ( msgStr ); } else if ( action == VIEW_STATUS ){ mStatusTextView . setText ( msgStr ); } } }; } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:orientation= \"vertical\" > <Button android:id= \"@+id/connectButton\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"Connect\" /> <TextView android:id= \"@+id/statusValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <TextView android:id= \"@+id/inputValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/ledOnButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"LED ON\" /> <Button android:id= \"@+id/ledOffButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"LED OFF\" /> <Button android:id= \"@+id/sensorButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"SENSOR\" /> </LinearLayout> \u5b9f\u884c\u78ba\u8a8d Android\u7aef\u672b\u306b\u30dc\u30bf\u30f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u524d\u56de\u3068\u540c\u69d8\u300cConnect\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 Sensor\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u5024\u306e\u78ba\u8a8d\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u203b\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u3088\u3063\u3066\u306f\u5024\u306e\u4e00\u90e8\u306e\u307f\u8868\u793a\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u5bfe\u5fdc\u3059\u308b\u306b\u306f\u7d42\u4e86\u6587\u5b57\u3092Android\u5074\u3067\u5224\u65ad\u3057\u3001\u7d42\u4e86\u6587\u5b57\u304c\u304f\u308b\u307e\u3067\u683c\u7d0d\u3057\u3066\u304b\u3089\u51fa\u529b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u5bfe\u5fdc\u4f8b Arduino loop\u306e\u51e6\u7406\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002 \u5909\u66f4\u5185\u5bb9\u3068\u3057\u3066\u306f\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u9001\u4fe1\u5f8c\u306b'*'\u306e\u6587\u5b57\u3092\u9001\u4fe1\u3057\u3066\u3044\u307e\u3059\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 void loop (){ if ( android . available ()){ inByte = android . read (); Serial . println ( inByte ); // \u53d7\u4fe1\u30c7\u30fc\u30bf\u306b\u3088\u308aLED\u306e\u5236\u5fa1\u3092\u884c\u3046 if ( inByte == 49 ){ digitalWrite ( led , HIGH ); } else if ( inByte == 50 ){ // \u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u53d6\u5f97 getSensor = analogRead ( sensorPin ); android . print ( getSensor ); android . print ( '*' ); } else { digitalWrite ( led , LOW ); } } Android \u53d7\u3051\u53d6\u3063\u305f\u6587\u5b57\u3092\u683c\u7d0d\u3057\u3001'*'\u304c\u5165\u3063\u305f\u6642\u70b9\u3067\u51fa\u529b\u3092\u884c\u3046\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002 MainActivity.java\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4 MainActivity\u5185\u3067\u5909\u6570\u5b9a\u7fa9\u306e\u8ffd\u52a0 1 2 3 4 /** \u53d6\u5f97\u30c7\u30fc\u30bf\u3092\u683c\u7d0d(\u6587\u5b57\u5217) */ private String out_Text = \"\" ; /** \u53d6\u5f97\u30c7\u30fc\u30bf\u306e\u7d42\u4e86\u6587\u5b57\u4ee5\u964d(2\u6587\u5b57\u76ee\u4ee5\u964d)\u3092\u683c\u7d0d(\u6587\u5b57\u5217) */ private String out_Text_bk = \"\" ; \u30b9\u30ec\u30c3\u30c9\u51e6\u7406(run)\u5185\u306e\u30eb\u30fc\u30d7\u51e6\u7406\u3092\u5909\u66f4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 while ( isRunning ){ // InputStream\u306e\u8aad\u307f\u8fbc\u307f bytes = mmInStream . read ( buffer ); Log . i ( TAG , \"bytes=\" + bytes ); // String\u578b\u306b\u5909\u63db(\u9000\u907f\u7528\u306b\u6587\u5b57\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u305d\u308c\u3082\u542b\u3081\u3066\u8a2d\u5b9a) String readMsg = out_Text_bk + new String ( buffer , 0 , bytes ); // \u9000\u907f\u7528\u5909\u6570\u306e\u521d\u671f\u5316 out_Text_bk = \"\" ; // \u51fa\u529b\u30d5\u30e9\u30b0\u306e\u521d\u671f\u5316 Boolean dataEndFlg = false ; // \u8aad\u307f\u8fbc\u3093\u3060\u6587\u5b57\u5217\u30921\u6587\u5b57\u305a\u3064\u53d6\u5f97 for ( int i = 0 ; readMsg . length () > i ; i ++ ) { char readChar = readMsg . charAt ( i ); // \u6587\u5b57\u5224\u5b9a if ( readChar == '*' ) { // \u7d42\u4e86\u6587\u5b57\u3092\u78ba\u8a8d\u3057\u305f\u6642\u70b9\u3067\u51fa\u529b\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b dataEndFlg = true ; // \u7d42\u4e86\u6587\u5b57\u4ee5\u964d } else if ( dataEndFlg ) { // \u6587\u5b57\u3092\u9000\u907f out_Text_bk = out_Text_bk + readChar ; // \u7d42\u4e86\u6587\u5b57\u4ee5\u524d } else { // \u51fa\u529b\u7528\u306b\u8a2d\u5b9a out_Text = out_Text + readChar ; } } // \u51fa\u529b\u30d5\u30e9\u30b0\u304ctrue\u304b\u3064null(\u7a7a\u6587\u5b57\u542b\u3080)\u4ee5\u5916\u306a\u3089\u8868\u793a if ( dataEndFlg && out_Text . trim () != null && ! out_Text . trim (). equals ( \"\" )){ Log . i ( TAG , \"value=\" + out_Text . trim ()); valueMsg = new Message (); valueMsg . what = VIEW_INPUT ; valueMsg . obj = out_Text . trim (); mHandler . sendMessage ( valueMsg ); // \u51fa\u529b\u7528\u5909\u6570\u306e\u521d\u671f\u5316 out_Text = \"\" ; } }","title":"\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u3092Android\u7aef\u672b\u3067\u8868\u793a"},{"location":"article2-4/#android","text":"\u4eca\u56de\u306f\u4f7f\u7528\u3059\u308b\u30bb\u30f3\u30b5\u30fc\u306f\u8ddd\u96e2\u30bb\u30f3\u30b5\u30fc\u3067\u3059\u3002 \u203bFaBo Brick\u3092\u4f7f\u7528\u6642\u306f\u4ed6\u306e\u30bb\u30f3\u30b5\u30fc\u3092\u3054\u4f7f\u7528\u4e0b\u3055\u3044\u3002","title":"\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u3092Android\u7aef\u672b\u3067\u8868\u793a"},{"location":"article2-4/#arduino","text":"","title":"Arduino\u8a2d\u5b9a"},{"location":"article2-4/#arduino-uno","text":"","title":"Arduino Uno"},{"location":"article2-4/#arduino-uno_1","text":"","title":"\u56de\u8def (Arduino Uno)"},{"location":"article2-4/#arduino-uno_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 #include <SoftwareSerial.h> #define led 13 // 13\u756a\u30d4\u30f3\u306b\u3066LED\u3092\u5236\u5fa1 #define sensorPin 0 // \u30bb\u30f3\u30b5\u30fc\u3092\u4f7f\u7528\u3059\u308b\u30d4\u30f3 SoftwareSerial android ( 2 , 3 ); //SoftwareSerial android(12,13); // FaBo Brick\u4f7f\u7528\u6642 int inByte = 0 ; // android\u304b\u3089\u306e\u30c6\u30ad\u30b9\u30c8\u53d6\u5f97\u7528 int getSensor = 0 ; // \u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u53d6\u5f97\u7528 void setup (){ // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); // LED\u30d4\u30f3\u306e\u51fa\u529b\u8a2d\u5b9a pinMode ( led , OUTPUT ); Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ inByte = android . read (); Serial . println ( inByte ); // \u53d7\u4fe1\u30c7\u30fc\u30bf\u306b\u3088\u308aLED\u306e\u5236\u5fa1\u3092\u884c\u3046 if ( inByte == 49 ){ digitalWrite ( led , HIGH ); } else if ( inByte == 50 ){ // \u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u53d6\u5f97 getSensor = analogRead ( sensorPin ); android . print ( getSensor ); } else { digitalWrite ( led , LOW ); } } if ( Serial . available ()){ android . write ( Serial . read ()); } }","title":"\u30b9\u30b1\u30c3\u30c1 (Arduino Uno)"},{"location":"article2-4/#arduino-mega","text":"","title":"Arduino Mega"},{"location":"article2-4/#arduino-mega_1","text":"\u30b9\u30b1\u30c3\u30c1 (Arduino Mega) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 int led = 13 ; // 13\u756a\u30d4\u30f3\u306b\u3066LED\u3092\u5236\u5fa1 int inByte = 0 ; // android\u304b\u3089\u306e\u30c6\u30ad\u30b9\u30c8\u53d6\u5f97\u7528 int sensorPin = 0 ; // \u30bb\u30f3\u30b5\u30fc\u3092\u4f7f\u7528\u3059\u308b\u30d4\u30f3 int getSensor = 0 ; // \u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u53d6\u5f97\u7528 void setup (){ // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); // LED\u30d4\u30f3\u306e\u51fa\u529b\u8a2d\u5b9a pinMode ( led , OUTPUT ); Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ inByte = android . read (); Serial . println ( inByte ); // \u53d7\u4fe1\u30c7\u30fc\u30bf\u306b\u3088\u308aLED\u306e\u5236\u5fa1\u3092\u884c\u3046 if ( inByte == 49 ){ digitalWrite ( led , HIGH ); } else if ( inByte == 50 ){ // \u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u53d6\u5f97 getSensor = analogRead ( sensorPin ); Serial1 . print ( getSensor ); } else { digitalWrite ( led , LOW ); } } if ( Serial . available ()){ Serial1 . write ( Serial . read ()); } }","title":"\u56de\u8def (Arduino Mega)"},{"location":"article2-4/#android_1","text":"\u6b21\u306bAndroid\u5074\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u3057\u307e\u3059\u3002 BluetoothServer.javapackage gclue.com.mybluetooth ; import android.bluetooth.BluetoothAdapter ; import android.bluetooth.BluetoothDevice ; import android.bluetooth.BluetoothSocket ; import android.os.Bundle ; import android.os.Handler ; import android.os.Message ; //import android.support.v7.app.ActionBarActivity; import android.support.v7.app.AppCompatActivity ; import android.util.Log ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import java.io.IOException ; import java.io.InputStream ; import java.io.OutputStream ; import java.util.Set ; import java.util.UUID ; //public class MainActivity extends ActionBarActivity implements Runnable, View.OnClickListener { public class MainActivity extends AppCompatActivity implements Runnable , View . OnClickListener { /* tag */ private static final String TAG = \"BluetoothSample\" ; /* Bluetooth Adapter */ private BluetoothAdapter mAdapter ; /* Bluetooth\u30c7\u30d0\u30a4\u30b9 */ private BluetoothDevice mDevice ; /* Bluetooth UUID */ private final UUID MY_UUID = UUID . fromString ( \"00001101-0000-1000-8000-00805F9B34FB\" ); /* \u30c7\u30d0\u30a4\u30b9\u540d */ private final String DEVICE_NAME = \"RNBT-205F\" ; /* Soket */ private BluetoothSocket mSocket ; /* Thread */ private Thread mThread ; /* Thread\u306e\u72b6\u614b\u3092\u8868\u3059 */ private boolean isRunning ; /** \u63a5\u7d9a\u30dc\u30bf\u30f3. */ private Button connectButton ; /** LED ON\u30dc\u30bf\u30f3. */ private Button ledOnButton ; /** LED OFF\u30dc\u30bf\u30f3. */ private Button ledOffButton ; /** Sensor\u30dc\u30bf\u30f3. */ private Button sensorButton ; /** \u30b9\u30c6\u30fc\u30bf\u30b9. */ private TextView mStatusTextView ; /** Bluetooth\u304b\u3089\u53d7\u4fe1\u3057\u305f\u5024. */ private TextView mInputTextView ; /** Action(\u30b9\u30c6\u30fc\u30bf\u30b9\u8868\u793a). */ private static final int VIEW_STATUS = 0 ; /** Action(\u53d6\u5f97\u6587\u5b57\u5217). */ private static final int VIEW_INPUT = 1 ; /** Bluetooth\u306eOutputStream. */ OutputStream mmOutputStream = null ; private boolean connectFlg = false ; @Override public void onCreate ( Bundle savedInstanceState ){ super . onCreate ( savedInstanceState ); // Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u30d3\u30e5\u30fc\u3092\u8868\u793a setContentView ( R . layout . activity_main ); // TextView\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) mInputTextView = ( TextView ) findViewById ( R . id . inputValue ); mStatusTextView = ( TextView ) findViewById ( R . id . statusValue ); // Button\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) connectButton = ( Button ) findViewById ( R . id . connectButton ); ledOnButton = ( Button ) findViewById ( R . id . ledOnButton ); ledOffButton = ( Button ) findViewById ( R . id . ledOffButton ); sensorButton = ( Button ) findViewById ( R . id . sensorButton ); // \u30dc\u30bf\u30f3\u306e\u30a4\u30d9\u30f3\u30c8\u53d6\u5f97\u8a2d\u5b9a connectButton . setOnClickListener ( this ); ledOnButton . setOnClickListener ( this ); ledOffButton . setOnClickListener ( this ); sensorButton . setOnClickListener ( this ); // Bluetooth\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u53d6\u5f97 // \u30c7\u30d0\u30a4\u30b9\u540d\u306f\u3001RNBT-XXXX\u306b\u306a\u308b\u305f\u3081\u3001 // DVICE_NAME\u3067\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u5b9a\u7fa9 mAdapter = BluetoothAdapter . getDefaultAdapter (); mStatusTextView . setText ( \"SearchDevice\" ); Set < BluetoothDevice > devices = mAdapter . getBondedDevices (); for ( BluetoothDevice device : devices ){ if ( device . getName (). equals ( DEVICE_NAME )){ mStatusTextView . setText ( \"find: \" + device . getName ()); mDevice = device ; } } } // \u5225\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u304c\u8d77\u52d5\u3057\u305f\u5834\u5408\u306e\u51e6\u7406 @Override protected void onPause (){ super . onPause (); isRunning = false ; connectFlg = false ; try { mSocket . close (); } catch ( Exception e ){} } // \u30b9\u30ec\u30c3\u30c9\u51e6\u7406(connect\u30dc\u30bf\u30f3\u62bc\u4e0b\u5f8c\u306b\u5b9f\u884c) @Override public void run () { InputStream mmInStream = null ; Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connecting...\" ; mHandler . sendMessage ( valueMsg ); try { // \u53d6\u5f97\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u4f7f\u3063\u3066Bluetooth\u3067Socket\u63a5\u7d9a mSocket = mDevice . createRfcommSocketToServiceRecord ( MY_UUID ); mSocket . connect (); mmInStream = mSocket . getInputStream (); mmOutputStream = mSocket . getOutputStream (); // InputStream\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u683c\u7d0d byte [] buffer = new byte [ 1024 ] ; // \u53d6\u5f97\u3057\u305f\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3092\u683c\u7d0d int bytes ; valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connected.\" ; mHandler . sendMessage ( valueMsg ); connectFlg = true ; while ( isRunning ){ // InputStream\u306e\u8aad\u307f\u8fbc\u307f bytes = mmInStream . read ( buffer ); Log . i ( TAG , \"bytes=\" + bytes ); // String\u578b\u306b\u5909\u63db String readMsg = new String ( buffer , 0 , bytes ); // null\u4ee5\u5916\u306a\u3089\u8868\u793a if ( readMsg . trim () != null && ! readMsg . trim (). equals ( \"\" )){ Log . i ( TAG , \"value=\" + readMsg . trim ()); valueMsg = new Message (); valueMsg . what = VIEW_INPUT ; valueMsg . obj = readMsg ; mHandler . sendMessage ( valueMsg ); } } } // \u30a8\u30e9\u30fc\u51e6\u7406 catch ( Exception e ){ valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error1:\" + e ; mHandler . sendMessage ( valueMsg ); try { mSocket . close (); } catch ( Exception ee ){} isRunning = false ; connectFlg = false ; } } @Override public void onClick ( View v ) { if ( v . equals ( connectButton )) { if ( ! connectFlg ) { mStatusTextView . setText ( \"try connect\" ); mThread = new Thread ( this ); // Thread\u3092\u8d77\u52d5\u3057\u3001Bluetooth\u63a5\u7d9a isRunning = true ; mThread . start (); } } else if ( v . equals ( ledOnButton )) { if ( connectFlg ) { try { mmOutputStream . write ( \"1\" . getBytes ()); mStatusTextView . setText ( \"LED ON:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error3:\" + e ; mHandler . sendMessage ( valueMsg ); } } else { mStatusTextView . setText ( \"Please push the connect button\" ); } } else if ( v . equals ( ledOffButton )) { if ( connectFlg ) { try { mmOutputStream . write ( \"0\" . getBytes ()); mStatusTextView . setText ( \"LED OFF:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error4:\" + e ; mHandler . sendMessage ( valueMsg ); } } else { mStatusTextView . setText ( \"Please push the connect button\" ); } } else if ( v . equals ( sensorButton )) { if ( connectFlg ) { try { mmOutputStream . write ( \"2\" . getBytes ()); mStatusTextView . setText ( \"Sensor Data:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error5:\" + e ; mHandler . sendMessage ( valueMsg ); } } else { mStatusTextView . setText ( \"Please push the connect button\" ); } } } /** * \u63cf\u753b\u51e6\u7406\u306fHandler\u3067\u304a\u3053\u306a\u3046 */ Handler mHandler = new Handler () { @Override public void handleMessage ( Message msg ) { int action = msg . what ; String msgStr = ( String ) msg . obj ; if ( action == VIEW_INPUT ){ mInputTextView . setText ( msgStr ); } else if ( action == VIEW_STATUS ){ mStatusTextView . setText ( msgStr ); } } }; } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:orientation= \"vertical\" > <Button android:id= \"@+id/connectButton\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"Connect\" /> <TextView android:id= \"@+id/statusValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <TextView android:id= \"@+id/inputValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/ledOnButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"LED ON\" /> <Button android:id= \"@+id/ledOffButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"LED OFF\" /> <Button android:id= \"@+id/sensorButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"SENSOR\" /> </LinearLayout>","title":"Android\u8a2d\u5b9a"},{"location":"article2-4/#_1","text":"Android\u7aef\u672b\u306b\u30dc\u30bf\u30f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u524d\u56de\u3068\u540c\u69d8\u300cConnect\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002 Sensor\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u5024\u306e\u78ba\u8a8d\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u203b\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u3088\u3063\u3066\u306f\u5024\u306e\u4e00\u90e8\u306e\u307f\u8868\u793a\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u5bfe\u5fdc\u3059\u308b\u306b\u306f\u7d42\u4e86\u6587\u5b57\u3092Android\u5074\u3067\u5224\u65ad\u3057\u3001\u7d42\u4e86\u6587\u5b57\u304c\u304f\u308b\u307e\u3067\u683c\u7d0d\u3057\u3066\u304b\u3089\u51fa\u529b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u5b9f\u884c\u78ba\u8a8d"},{"location":"article2-4/#_2","text":"","title":"\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u5bfe\u5fdc\u4f8b"},{"location":"article2-4/#arduino_1","text":"loop\u306e\u51e6\u7406\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002 \u5909\u66f4\u5185\u5bb9\u3068\u3057\u3066\u306f\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u9001\u4fe1\u5f8c\u306b'*'\u306e\u6587\u5b57\u3092\u9001\u4fe1\u3057\u3066\u3044\u307e\u3059\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 void loop (){ if ( android . available ()){ inByte = android . read (); Serial . println ( inByte ); // \u53d7\u4fe1\u30c7\u30fc\u30bf\u306b\u3088\u308aLED\u306e\u5236\u5fa1\u3092\u884c\u3046 if ( inByte == 49 ){ digitalWrite ( led , HIGH ); } else if ( inByte == 50 ){ // \u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u53d6\u5f97 getSensor = analogRead ( sensorPin ); android . print ( getSensor ); android . print ( '*' ); } else { digitalWrite ( led , LOW ); } } Android \u53d7\u3051\u53d6\u3063\u305f\u6587\u5b57\u3092\u683c\u7d0d\u3057\u3001'*'\u304c\u5165\u3063\u305f\u6642\u70b9\u3067\u51fa\u529b\u3092\u884c\u3046\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002 MainActivity.java\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4 MainActivity\u5185\u3067\u5909\u6570\u5b9a\u7fa9\u306e\u8ffd\u52a0 1 2 3 4 /** \u53d6\u5f97\u30c7\u30fc\u30bf\u3092\u683c\u7d0d(\u6587\u5b57\u5217) */ private String out_Text = \"\" ; /** \u53d6\u5f97\u30c7\u30fc\u30bf\u306e\u7d42\u4e86\u6587\u5b57\u4ee5\u964d(2\u6587\u5b57\u76ee\u4ee5\u964d)\u3092\u683c\u7d0d(\u6587\u5b57\u5217) */ private String out_Text_bk = \"\" ; \u30b9\u30ec\u30c3\u30c9\u51e6\u7406(run)\u5185\u306e\u30eb\u30fc\u30d7\u51e6\u7406\u3092\u5909\u66f4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 while ( isRunning ){ // InputStream\u306e\u8aad\u307f\u8fbc\u307f bytes = mmInStream . read ( buffer ); Log . i ( TAG , \"bytes=\" + bytes ); // String\u578b\u306b\u5909\u63db(\u9000\u907f\u7528\u306b\u6587\u5b57\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u305d\u308c\u3082\u542b\u3081\u3066\u8a2d\u5b9a) String readMsg = out_Text_bk + new String ( buffer , 0 , bytes ); // \u9000\u907f\u7528\u5909\u6570\u306e\u521d\u671f\u5316 out_Text_bk = \"\" ; // \u51fa\u529b\u30d5\u30e9\u30b0\u306e\u521d\u671f\u5316 Boolean dataEndFlg = false ; // \u8aad\u307f\u8fbc\u3093\u3060\u6587\u5b57\u5217\u30921\u6587\u5b57\u305a\u3064\u53d6\u5f97 for ( int i = 0 ; readMsg . length () > i ; i ++ ) { char readChar = readMsg . charAt ( i ); // \u6587\u5b57\u5224\u5b9a if ( readChar == '*' ) { // \u7d42\u4e86\u6587\u5b57\u3092\u78ba\u8a8d\u3057\u305f\u6642\u70b9\u3067\u51fa\u529b\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b dataEndFlg = true ; // \u7d42\u4e86\u6587\u5b57\u4ee5\u964d } else if ( dataEndFlg ) { // \u6587\u5b57\u3092\u9000\u907f out_Text_bk = out_Text_bk + readChar ; // \u7d42\u4e86\u6587\u5b57\u4ee5\u524d } else { // \u51fa\u529b\u7528\u306b\u8a2d\u5b9a out_Text = out_Text + readChar ; } } // \u51fa\u529b\u30d5\u30e9\u30b0\u304ctrue\u304b\u3064null(\u7a7a\u6587\u5b57\u542b\u3080)\u4ee5\u5916\u306a\u3089\u8868\u793a if ( dataEndFlg && out_Text . trim () != null && ! out_Text . trim (). equals ( \"\" )){ Log . i ( TAG , \"value=\" + out_Text . trim ()); valueMsg = new Message (); valueMsg . what = VIEW_INPUT ; valueMsg . obj = out_Text . trim (); mHandler . sendMessage ( valueMsg ); // \u51fa\u529b\u7528\u5909\u6570\u306e\u521d\u671f\u5316 out_Text = \"\" ; } }","title":"Arduino"},{"location":"article2-5/","text":"\u30ed\u30dc\u30c3\u30c8\u30ab\u30fc\u5236\u5fa1 \u3053\u3053\u3067\u306f\u30ed\u30dc\u30c3\u30c8\u30ab\u30fc\u30ad\u30c3\u30c8\u306e\u7d44\u307f\u7acb\u3066\u3068\u3001Android\u7aef\u672b\u304b\u3089\u8d70\u884c\u306e\u5236\u5fa1\u3092\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002 \u30ed\u30dc\u30c3\u30c8\u30ab\u30fc\u7d44\u307f\u7acb\u3066 \u30ed\u30dc\u30c3\u30c8\u30ab\u30fc\u306e\u7d44\u307f\u7acb\u3066\u65b9\u6cd5\u3001\u304a\u3088\u3073\u914d\u7dda\u306f\u3053\u3061\u3089\u3092\u3054\u53c2\u7167\u4e0b\u3055\u3044\u3002 https://sites.google.com/a/gclue.jp/roboka-zuo-cheng/home \u4f7f\u7528\u3059\u308b\u30b7\u30fc\u30eb\u30c9 \u4eca\u56de\u306fFaBo\u306e\u30e2\u30fc\u30bf\u30fc\u30b7\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u4f7f\u7528\u65b9\u6cd5\u306f\u3053\u3061\u3089\u3092\u3054\u53c2\u7167\u4e0b\u3055\u3044\u3002 \u30e2\u30fc\u30bf\u30fc\u30b7\u30fc\u30eb\u30c9 https://fabo.gitbooks.io/module/content/shield_motor/shield_motor.html \u4f7f\u7528\u3059\u308bBrick Bluetooth https://fabo.gitbooks.io/module/content/brick_serial_bluetooth/brick_serial_bluetooth.html Arduino Arduino\u5074\u3067\u306f\u3001Android\u7aef\u672b\u304b\u3089\u53d7\u4fe1\u3057\u305f\u30c7\u30fc\u30bf\u306b\u3088\u308a\u524d\u9032\u3001\u5f8c\u9000\u3001\u505c\u6b62\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u307e\u3059\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 #include <SoftwareSerial.h> #define led1 A0 // A0\u756a\u30d4\u30f3\u306b\u3066LED\u3092\u5236\u5fa1 #define led2 A1 // A1\u756a\u30d4\u30f3\u306b\u3066LED\u3092\u5236\u5fa1 #define right_f 4 // \u53f3\u30bf\u30a4\u30e4\u306e\u30e2\u30fc\u30bf\u30fc\u524d\u9032\u7528\u30d4\u30f3 #define right_pow 3 // \u53f3\u30bf\u30a4\u30e4\u306e\u30e2\u30fc\u30bf\u30fc\u51fa\u529b\u8a2d\u5b9a\u7528\u30d4\u30f3 #define right_b 2 // \u53f3\u30bf\u30a4\u30e4\u306e\u30e2\u30fc\u30bf\u30fc\u5f8c\u9000\u7528\u30d4\u30f3 #define left_f 5 // \u5de6\u30bf\u30a4\u30e4\u306e\u30e2\u30fc\u30bf\u30fc\u7528\u30d4\u30f3(\u524d\u9032\u7528) #define left_pow 6 // \u5de6\u30bf\u30a4\u30e4\u306e\u30e2\u30fc\u30bf\u30fc\u51fa\u529b\u8a2d\u5b9a\u7528\u30d4\u30f3 #define left_b 7 // \u5de6\u30bf\u30a4\u30e4\u306e\u30e2\u30fc\u30bf\u30fc\u7528\u30d4\u30f3(\u5f8c\u9000\u7528) SoftwareSerial android ( 12 , 13 ); // Bluetooth\u7528\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u30d4\u30f3 char readData = 0 ; // android\u304b\u3089\u306e\u30c6\u30ad\u30b9\u30c8\u53d6\u5f97\u7528 void setup () { // \u53f3\u5074\u306e\u30bf\u30a4\u30e4\u5236\u5fa1\u7528 pinMode ( right_f , OUTPUT ); pinMode ( right_b , OUTPUT ); pinMode ( right_pow , OUTPUT ); // \u5de6\u5074\u306e\u30bf\u30a4\u30e4\u5236\u5fa1\u7528 pinMode ( left_f , OUTPUT ); pinMode ( left_b , OUTPUT ); pinMode ( left_pow , OUTPUT ); // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); Serial . println ( \"start\" ); } void loop () { if ( android . available ()) { // Android\u304b\u3089\u30c7\u30fc\u30bf\u53d7\u4fe1 readData = android . read (); Serial . write ( readData ); Serial . write ( 10 ); // \u53d7\u4fe1\u30c7\u30fc\u30bf\u306b\u3088\u308a\u30ed\u30dc\u30ab\u30fc\u306e\u5236\u5fa1\u3092\u884c\u3046 // \u524d\u9032 if ( readData == '1' ) { // \u53f3\u30bf\u30a4\u30e4\u524d\u9032(H/L) digitalWrite ( right_f , HIGH ); digitalWrite ( right_b , LOW ); analogWrite ( right_pow , 255 ); // 0-255 \u5f37\u3055 // \u5de6\u30bf\u30a4\u30e4\u524d\u9032(H/L) digitalWrite ( left_f , HIGH ); digitalWrite ( left_b , LOW ); analogWrite ( left_pow , 255 ); // 0-255 \u5f37\u3055 } // \u5f8c\u9000 else if ( readData == '2' ) { // \u53f3\u30bf\u30a4\u30e4\u5f8c\u9000(L/H) digitalWrite ( right_f , LOW ); digitalWrite ( right_b , HIGH ); analogWrite ( right_pow , 255 ); // 0-255 \u5f37\u3055 // \u5de6\u30bf\u30a4\u30e4\u5f8c\u9000(L/H) digitalWrite ( left_f , LOW ); digitalWrite ( left_b , HIGH ); analogWrite ( left_pow , 255 ); // 0-255 \u5f37\u3055 } // \u505c\u6b62 else { // \u53f3\u30bf\u30a4\u30e4\u505c\u6b62(L/L) digitalWrite ( right_f , LOW ); digitalWrite ( right_b , LOW ); analogWrite ( right_pow , 0 ); // 0-255 \u5f37\u3055 // \u5de6\u30bf\u30a4\u30e4\u5f8c\u9000(L/L) digitalWrite ( left_f , LOW ); digitalWrite ( left_b , LOW ); analogWrite ( left_pow , 0 ); // 0-255 \u5f37\u3055 } } } Android Bluetooth\u8a8d\u8b58\u8a2d\u5b9a Bluetooth\u306e\u8a8d\u8b58\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002 [app]>[src]>[main]>[res]\u5185\u306eAndroidManifest.xml\u3092\u958b\u304d\u3001\u4e0b\u8a18\u306e\u5185\u5bb9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 1 2 <uses-permission android:name= \"android.permission.BLUETOOTH\" /> <uses-permission android:name= \"android.permission.BLUETOOTH_ADMIN\" /> AndroidManifest.xml \u5909\u66f4\u5f8c\u306f\u3053\u306e\u3088\u3046\u306a\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"gclue.com.mybluetooth\" > <uses-permission android:name= \"android.permission.BLUETOOTH\" /> <uses-permission android:name= \"android.permission.BLUETOOTH_ADMIN\" /> <application android:allowBackup= \"true\" android:icon= \"@drawable/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> \u753b\u9762\u30ec\u30a4\u30a2\u30a6\u30c8 \u30ed\u30dc\u30ab\u30fc\u64cd\u4f5c\u7528\u306b\u2191\u30dc\u30bf\u30f3\u3001Stop\u30dc\u30bf\u30f3\u3001\u2193\u30dc\u30bf\u30f3\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002 activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:orientation= \"vertical\" > <Button android:id= \"@+id/connectButton\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"Connect\" /> <TextView android:id= \"@+id/statusValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <TextView android:id= \"@+id/inputValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/forwardButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"\u2191\" /> <Button android:id= \"@+id/stopButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"stop\" /> <Button android:id= \"@+id/backButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"\u2193\" /> </LinearLayout> \u6b21\u306b\u30e1\u30a4\u30f3\u306e\u51e6\u7406\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 MainActivity.javapackage sample.robo ; import android.bluetooth.BluetoothAdapter ; import android.bluetooth.BluetoothDevice ; import android.bluetooth.BluetoothSocket ; import android.os.Bundle ; import android.os.Handler ; import android.os.Message ; //import android.support.v7.app.ActionBarActivity; import android.support.v7.app.AppCompatActivity ; import android.util.Log ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import java.io.IOException ; import java.io.InputStream ; import java.io.OutputStream ; import java.util.Set ; import java.util.UUID ; //public class MainActivity extends ActionBarActivity implements Runnable, View.OnClickListener { public class MainActivity extends AppCompatActivity implements Runnable , View . OnClickListener { /* tag */ private static final String TAG = \"BluetoothSample\" ; /* Bluetooth Adapter */ private BluetoothAdapter mAdapter ; /* Bluetooth\u30c7\u30d0\u30a4\u30b9 */ private BluetoothDevice mDevice ; /* Bluetooth UUID (\u56fa\u5b9a\uff09*/ private final UUID MY_UUID = UUID . fromString ( \"00001101-0000-1000-8000-00805F9B34FB\" ); /* \u30c7\u30d0\u30a4\u30b9\u540d \u74b0\u5883\u306b\u5408\u3063\u305f\u3082\u306e\u306b\u5909\u66f4*/ private final String DEVICE_NAME = \"RNBT-71EE\" ; /* Soket */ private BluetoothSocket mSocket ; /* Thread */ private Thread mThread ; /* Thread\u306e\u72b6\u614b\u3092\u8868\u3059 */ private boolean isRunning ; /** \u63a5\u7d9a\u30dc\u30bf\u30f3. */ private Button connectButton ; /** \u524d\u9032\u30dc\u30bf\u30f3. */ private Button forwardButton ; /** \u5f8c\u9000\u30dc\u30bf\u30f3. */ private Button backButton ; /** STOP\u30dc\u30bf\u30f3. */ private Button stopButton ; /** \u30b9\u30c6\u30fc\u30bf\u30b9. */ private TextView mStatusTextView ; /** Bluetooth\u304b\u3089\u53d7\u4fe1\u3057\u305f\u5024. */ private TextView mInputTextView ; /** Action(\u30b9\u30c6\u30fc\u30bf\u30b9\u8868\u793a). */ private static final int VIEW_STATUS = 0 ; /** Action(\u53d6\u5f97\u6587\u5b57\u5217). */ private static final int VIEW_INPUT = 1 ; /** Bluetooth\u306eOutputStream. */ OutputStream mmOutputStream = null ; /** Connect\u72b6\u614b\u78ba\u8a8d\u7528\u30d5\u30e9\u30b0. */ private boolean connectFlg = false ; @Override public void onCreate ( Bundle savedInstanceState ){ super . onCreate ( savedInstanceState ); // Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u30d3\u30e5\u30fc\u3092\u8868\u793a setContentView ( R . layout . activity_main ); // TextView\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) mInputTextView = ( TextView ) findViewById ( R . id . inputValue ); mStatusTextView = ( TextView ) findViewById ( R . id . statusValue ); // Button\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) connectButton = ( Button ) findViewById ( R . id . connectButton ); forwardButton = ( Button ) findViewById ( R . id . forwardButton ); backButton = ( Button ) findViewById ( R . id . backButton ); stopButton = ( Button ) findViewById ( R . id . stopButton ); // \u30dc\u30bf\u30f3\u306e\u30a4\u30d9\u30f3\u30c8\u8a2d\u5b9a connectButton . setOnClickListener ( this ); forwardButton . setOnClickListener ( this ); backButton . setOnClickListener ( this ); stopButton . setOnClickListener ( this ); // Bluetooth\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u53d6\u5f97 // \u30c7\u30d0\u30a4\u30b9\u540d\u306f\u3001RNBT-XXXX\u306b\u306a\u308b\u305f\u3081\u3001 // DVICE_NAME\u3067\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u5b9a\u7fa9 mAdapter = BluetoothAdapter . getDefaultAdapter (); mStatusTextView . setText ( \"SearchDevice\" ); Set < BluetoothDevice > devices = mAdapter . getBondedDevices (); for ( BluetoothDevice device : devices ){ if ( device . getName (). equals ( DEVICE_NAME )){ mStatusTextView . setText ( \"find: \" + device . getName ()); mDevice = device ; } } } // \u5225\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u304c\u8d77\u52d5\u3057\u305f\u5834\u5408\u306e\u51e6\u7406 @Override protected void onPause (){ super . onPause (); isRunning = false ; connectFlg = false ; try { mSocket . close (); } catch ( Exception e ){} } // \u30b9\u30ec\u30c3\u30c9\u51e6\u7406(connect\u30dc\u30bf\u30f3\u62bc\u4e0b\u5f8c\u306b\u5b9f\u884c) @Override public void run () { InputStream mmInStream = null ; Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connecting...\" ; mHandler . sendMessage ( valueMsg ); try { // \u53d6\u5f97\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u4f7f\u3063\u3066Bluetooth\u3067Socket\u63a5\u7d9a mSocket = mDevice . createRfcommSocketToServiceRecord ( MY_UUID ); mSocket . connect (); mmInStream = mSocket . getInputStream (); mmOutputStream = mSocket . getOutputStream (); // InputStream\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u683c\u7d0d byte [] buffer = new byte [ 1024 ] ; // \u53d6\u5f97\u3057\u305f\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3092\u683c\u7d0d int bytes ; valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connected.\" ; mHandler . sendMessage ( valueMsg ); connectFlg = true ; while ( isRunning ){ // InputStream\u306e\u8aad\u307f\u8fbc\u307f bytes = mmInStream . read ( buffer ); Log . i ( TAG , \"bytes=\" + bytes ); // String\u578b\u306b\u5909\u63db String readMsg = new String ( buffer , 0 , bytes ); // null\u4ee5\u5916\u306a\u3089\u8868\u793a if ( readMsg . trim () != null && ! readMsg . trim (). equals ( \"\" )){ Log . i ( TAG , \"value=\" + readMsg . trim ()); valueMsg = new Message (); valueMsg . what = VIEW_INPUT ; valueMsg . obj = readMsg ; mHandler . sendMessage ( valueMsg ); } } } // \u30a8\u30e9\u30fc\u51e6\u7406 catch ( Exception e ){ valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error1:\" + e ; mHandler . sendMessage ( valueMsg ); try { mSocket . close (); } catch ( Exception ee ){} isRunning = false ; connectFlg = false ; } } // \u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u306e\u51e6\u7406 @Override public void onClick ( View v ) { // Connect\u30dc\u30bf\u30f3 if ( v . equals ( connectButton )) { if ( ! connectFlg ) { mStatusTextView . setText ( \"try connect\" ); mThread = new Thread ( this ); // Thread\u3092\u8d77\u52d5\u3057\u3001Bluetooth\u63a5\u7d9a isRunning = true ; mThread . start (); } } // \u2191\u30dc\u30bf\u30f3 else if ( v . equals ( forwardButton )) { if ( connectFlg ) { try { // \u2191\u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u3001'1'\u3092\u9001\u4fe1 mmOutputStream . write ( \"1\" . getBytes ()); // \u753b\u9762\u4e0a\u306b'\u2191:'\u3092\u8868\u793a mStatusTextView . setText ( \"\u2191:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error1:\" + e ; mHandler . sendMessage ( valueMsg ); } } // Connect\u30dc\u30bf\u30f3\u306b\u3088\u308a\u63a5\u7d9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408 else { mStatusTextView . setText ( \"Please push the connect button\" ); } } // \u2193\u30dc\u30bf\u30f3 else if ( v . equals ( backButton )) { if ( connectFlg ) { try { // \u2193\u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u3001'2'\u3092\u9001\u4fe1 mmOutputStream . write ( \"2\" . getBytes ()); // \u753b\u9762\u4e0a\u306b'\u2193:'\u3092\u8868\u793a mStatusTextView . setText ( \"\u2193:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error2:\" + e ; mHandler . sendMessage ( valueMsg ); } } // Connect\u30dc\u30bf\u30f3\u306b\u3088\u308a\u63a5\u7d9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408 else { mStatusTextView . setText ( \"Please push the connect button\" ); } } // stop\u30dc\u30bf\u30f3 else if ( v . equals ( stopButton )) { if ( connectFlg ) { try { // stop\u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u3001'0'\u3092\u9001\u4fe1 mmOutputStream . write ( \"0\" . getBytes ()); // \u753b\u9762\u4e0a\u306b'STOP:'\u3092\u8868\u793a mStatusTextView . setText ( \"STOP:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error5:\" + e ; mHandler . sendMessage ( valueMsg ); } } // Connect\u30dc\u30bf\u30f3\u306b\u3088\u308a\u63a5\u7d9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408 else { mStatusTextView . setText ( \"Please push the connect button\" ); } } } /** * \u63cf\u753b\u51e6\u7406\u306fHandler\u3067\u304a\u3053\u306a\u3046 */ Handler mHandler = new Handler () { @Override public void handleMessage ( Message msg ) { int action = msg . what ; String msgStr = ( String ) msg . obj ; if ( action == VIEW_INPUT ){ mInputTextView . setText ( msgStr ); } else if ( action == VIEW_STATUS ){ mStatusTextView . setText ( msgStr ); } } }; } \u3053\u308c\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5b8c\u4e86\u3067\u3059\u3002 \u307e\u305a\u3001\u30ed\u30dc\u30c3\u30c8\u30ab\u30fc\u306b\u5358\u4e09\u96fb\u6c60\uff14\u672c(\u30e2\u30fc\u30bf\u30fc\u7528)\u30019V\u96fb\u6c60(Arduino\u96fb\u6e90\u7528)\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002 Android\u3068Bluetooth\u63a5\u7d9a\u3057\u3001\u753b\u9762\u306e\u30dc\u30bf\u30f3\u304b\u3089\u30ed\u30dc\u30c3\u30c8\u30ab\u30fc\u3092\u64cd\u4f5c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002 \u3053\u3053\u307e\u3067\u51fa\u6765\u307e\u3057\u305f\u3089\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \uff11\uff0e\u53f3\u65cb\u56de\u3001\u5de6\u65cb\u56de\u6a5f\u80fd\u3092\u8ffd\u52a0 \uff12\uff0e\u901f\u5ea6\u5909\u66f4 \uff13\uff0e\u30bb\u30f3\u30b5\u30fc\u3092\u63a5\u7d9a\u3057\u3001\u53d6\u5f97\u3057\u305f\u5024\u3092Android\u7aef\u672b\u306b\u9001\u4fe1 \uff14\uff0e\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u306b\u3088\u308a\u52d5\u4f5c\u5909\u66f4\uff08\u6697\u304f\u306a\u3063\u305f\u3089\u9045\u304f\u306a\u308b\u306a\u3069\uff09","title":"\u30ed\u30dc\u30c3\u30c8\u30ab\u30fc\u5236\u5fa1"},{"location":"article2-5/#_1","text":"\u3053\u3053\u3067\u306f\u30ed\u30dc\u30c3\u30c8\u30ab\u30fc\u30ad\u30c3\u30c8\u306e\u7d44\u307f\u7acb\u3066\u3068\u3001Android\u7aef\u672b\u304b\u3089\u8d70\u884c\u306e\u5236\u5fa1\u3092\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002","title":"\u30ed\u30dc\u30c3\u30c8\u30ab\u30fc\u5236\u5fa1"},{"location":"article2-5/#_2","text":"\u30ed\u30dc\u30c3\u30c8\u30ab\u30fc\u306e\u7d44\u307f\u7acb\u3066\u65b9\u6cd5\u3001\u304a\u3088\u3073\u914d\u7dda\u306f\u3053\u3061\u3089\u3092\u3054\u53c2\u7167\u4e0b\u3055\u3044\u3002 https://sites.google.com/a/gclue.jp/roboka-zuo-cheng/home","title":"\u30ed\u30dc\u30c3\u30c8\u30ab\u30fc\u7d44\u307f\u7acb\u3066"},{"location":"article2-5/#_3","text":"\u4eca\u56de\u306fFaBo\u306e\u30e2\u30fc\u30bf\u30fc\u30b7\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u4f7f\u7528\u65b9\u6cd5\u306f\u3053\u3061\u3089\u3092\u3054\u53c2\u7167\u4e0b\u3055\u3044\u3002 \u30e2\u30fc\u30bf\u30fc\u30b7\u30fc\u30eb\u30c9 https://fabo.gitbooks.io/module/content/shield_motor/shield_motor.html","title":"\u4f7f\u7528\u3059\u308b\u30b7\u30fc\u30eb\u30c9"},{"location":"article2-5/#brick","text":"Bluetooth https://fabo.gitbooks.io/module/content/brick_serial_bluetooth/brick_serial_bluetooth.html","title":"\u4f7f\u7528\u3059\u308bBrick"},{"location":"article2-5/#arduino","text":"Arduino\u5074\u3067\u306f\u3001Android\u7aef\u672b\u304b\u3089\u53d7\u4fe1\u3057\u305f\u30c7\u30fc\u30bf\u306b\u3088\u308a\u524d\u9032\u3001\u5f8c\u9000\u3001\u505c\u6b62\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u307e\u3059\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 #include <SoftwareSerial.h> #define led1 A0 // A0\u756a\u30d4\u30f3\u306b\u3066LED\u3092\u5236\u5fa1 #define led2 A1 // A1\u756a\u30d4\u30f3\u306b\u3066LED\u3092\u5236\u5fa1 #define right_f 4 // \u53f3\u30bf\u30a4\u30e4\u306e\u30e2\u30fc\u30bf\u30fc\u524d\u9032\u7528\u30d4\u30f3 #define right_pow 3 // \u53f3\u30bf\u30a4\u30e4\u306e\u30e2\u30fc\u30bf\u30fc\u51fa\u529b\u8a2d\u5b9a\u7528\u30d4\u30f3 #define right_b 2 // \u53f3\u30bf\u30a4\u30e4\u306e\u30e2\u30fc\u30bf\u30fc\u5f8c\u9000\u7528\u30d4\u30f3 #define left_f 5 // \u5de6\u30bf\u30a4\u30e4\u306e\u30e2\u30fc\u30bf\u30fc\u7528\u30d4\u30f3(\u524d\u9032\u7528) #define left_pow 6 // \u5de6\u30bf\u30a4\u30e4\u306e\u30e2\u30fc\u30bf\u30fc\u51fa\u529b\u8a2d\u5b9a\u7528\u30d4\u30f3 #define left_b 7 // \u5de6\u30bf\u30a4\u30e4\u306e\u30e2\u30fc\u30bf\u30fc\u7528\u30d4\u30f3(\u5f8c\u9000\u7528) SoftwareSerial android ( 12 , 13 ); // Bluetooth\u7528\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u30d4\u30f3 char readData = 0 ; // android\u304b\u3089\u306e\u30c6\u30ad\u30b9\u30c8\u53d6\u5f97\u7528 void setup () { // \u53f3\u5074\u306e\u30bf\u30a4\u30e4\u5236\u5fa1\u7528 pinMode ( right_f , OUTPUT ); pinMode ( right_b , OUTPUT ); pinMode ( right_pow , OUTPUT ); // \u5de6\u5074\u306e\u30bf\u30a4\u30e4\u5236\u5fa1\u7528 pinMode ( left_f , OUTPUT ); pinMode ( left_b , OUTPUT ); pinMode ( left_pow , OUTPUT ); // Bluetooth\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 115200 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 9600 ); Serial . println ( \"start\" ); } void loop () { if ( android . available ()) { // Android\u304b\u3089\u30c7\u30fc\u30bf\u53d7\u4fe1 readData = android . read (); Serial . write ( readData ); Serial . write ( 10 ); // \u53d7\u4fe1\u30c7\u30fc\u30bf\u306b\u3088\u308a\u30ed\u30dc\u30ab\u30fc\u306e\u5236\u5fa1\u3092\u884c\u3046 // \u524d\u9032 if ( readData == '1' ) { // \u53f3\u30bf\u30a4\u30e4\u524d\u9032(H/L) digitalWrite ( right_f , HIGH ); digitalWrite ( right_b , LOW ); analogWrite ( right_pow , 255 ); // 0-255 \u5f37\u3055 // \u5de6\u30bf\u30a4\u30e4\u524d\u9032(H/L) digitalWrite ( left_f , HIGH ); digitalWrite ( left_b , LOW ); analogWrite ( left_pow , 255 ); // 0-255 \u5f37\u3055 } // \u5f8c\u9000 else if ( readData == '2' ) { // \u53f3\u30bf\u30a4\u30e4\u5f8c\u9000(L/H) digitalWrite ( right_f , LOW ); digitalWrite ( right_b , HIGH ); analogWrite ( right_pow , 255 ); // 0-255 \u5f37\u3055 // \u5de6\u30bf\u30a4\u30e4\u5f8c\u9000(L/H) digitalWrite ( left_f , LOW ); digitalWrite ( left_b , HIGH ); analogWrite ( left_pow , 255 ); // 0-255 \u5f37\u3055 } // \u505c\u6b62 else { // \u53f3\u30bf\u30a4\u30e4\u505c\u6b62(L/L) digitalWrite ( right_f , LOW ); digitalWrite ( right_b , LOW ); analogWrite ( right_pow , 0 ); // 0-255 \u5f37\u3055 // \u5de6\u30bf\u30a4\u30e4\u5f8c\u9000(L/L) digitalWrite ( left_f , LOW ); digitalWrite ( left_b , LOW ); analogWrite ( left_pow , 0 ); // 0-255 \u5f37\u3055 } } }","title":"Arduino"},{"location":"article2-5/#android","text":"","title":"Android"},{"location":"article2-5/#bluetooth","text":"Bluetooth\u306e\u8a8d\u8b58\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002 [app]>[src]>[main]>[res]\u5185\u306eAndroidManifest.xml\u3092\u958b\u304d\u3001\u4e0b\u8a18\u306e\u5185\u5bb9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 1 2 <uses-permission android:name= \"android.permission.BLUETOOTH\" /> <uses-permission android:name= \"android.permission.BLUETOOTH_ADMIN\" />","title":"Bluetooth\u8a8d\u8b58\u8a2d\u5b9a"},{"location":"article2-5/#androidmanifestxml","text":"\u5909\u66f4\u5f8c\u306f\u3053\u306e\u3088\u3046\u306a\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"gclue.com.mybluetooth\" > <uses-permission android:name= \"android.permission.BLUETOOTH\" /> <uses-permission android:name= \"android.permission.BLUETOOTH_ADMIN\" /> <application android:allowBackup= \"true\" android:icon= \"@drawable/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"AndroidManifest.xml"},{"location":"article2-5/#_4","text":"\u30ed\u30dc\u30ab\u30fc\u64cd\u4f5c\u7528\u306b\u2191\u30dc\u30bf\u30f3\u3001Stop\u30dc\u30bf\u30f3\u3001\u2193\u30dc\u30bf\u30f3\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002 activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:orientation= \"vertical\" > <Button android:id= \"@+id/connectButton\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"Connect\" /> <TextView android:id= \"@+id/statusValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <TextView android:id= \"@+id/inputValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/forwardButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"\u2191\" /> <Button android:id= \"@+id/stopButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"stop\" /> <Button android:id= \"@+id/backButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center_horizontal\" android:text= \"\u2193\" /> </LinearLayout> \u6b21\u306b\u30e1\u30a4\u30f3\u306e\u51e6\u7406\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 MainActivity.javapackage sample.robo ; import android.bluetooth.BluetoothAdapter ; import android.bluetooth.BluetoothDevice ; import android.bluetooth.BluetoothSocket ; import android.os.Bundle ; import android.os.Handler ; import android.os.Message ; //import android.support.v7.app.ActionBarActivity; import android.support.v7.app.AppCompatActivity ; import android.util.Log ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import java.io.IOException ; import java.io.InputStream ; import java.io.OutputStream ; import java.util.Set ; import java.util.UUID ; //public class MainActivity extends ActionBarActivity implements Runnable, View.OnClickListener { public class MainActivity extends AppCompatActivity implements Runnable , View . OnClickListener { /* tag */ private static final String TAG = \"BluetoothSample\" ; /* Bluetooth Adapter */ private BluetoothAdapter mAdapter ; /* Bluetooth\u30c7\u30d0\u30a4\u30b9 */ private BluetoothDevice mDevice ; /* Bluetooth UUID (\u56fa\u5b9a\uff09*/ private final UUID MY_UUID = UUID . fromString ( \"00001101-0000-1000-8000-00805F9B34FB\" ); /* \u30c7\u30d0\u30a4\u30b9\u540d \u74b0\u5883\u306b\u5408\u3063\u305f\u3082\u306e\u306b\u5909\u66f4*/ private final String DEVICE_NAME = \"RNBT-71EE\" ; /* Soket */ private BluetoothSocket mSocket ; /* Thread */ private Thread mThread ; /* Thread\u306e\u72b6\u614b\u3092\u8868\u3059 */ private boolean isRunning ; /** \u63a5\u7d9a\u30dc\u30bf\u30f3. */ private Button connectButton ; /** \u524d\u9032\u30dc\u30bf\u30f3. */ private Button forwardButton ; /** \u5f8c\u9000\u30dc\u30bf\u30f3. */ private Button backButton ; /** STOP\u30dc\u30bf\u30f3. */ private Button stopButton ; /** \u30b9\u30c6\u30fc\u30bf\u30b9. */ private TextView mStatusTextView ; /** Bluetooth\u304b\u3089\u53d7\u4fe1\u3057\u305f\u5024. */ private TextView mInputTextView ; /** Action(\u30b9\u30c6\u30fc\u30bf\u30b9\u8868\u793a). */ private static final int VIEW_STATUS = 0 ; /** Action(\u53d6\u5f97\u6587\u5b57\u5217). */ private static final int VIEW_INPUT = 1 ; /** Bluetooth\u306eOutputStream. */ OutputStream mmOutputStream = null ; /** Connect\u72b6\u614b\u78ba\u8a8d\u7528\u30d5\u30e9\u30b0. */ private boolean connectFlg = false ; @Override public void onCreate ( Bundle savedInstanceState ){ super . onCreate ( savedInstanceState ); // Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u30d3\u30e5\u30fc\u3092\u8868\u793a setContentView ( R . layout . activity_main ); // TextView\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) mInputTextView = ( TextView ) findViewById ( R . id . inputValue ); mStatusTextView = ( TextView ) findViewById ( R . id . statusValue ); // Button\u306e\u8a2d\u5b9a(Layout\u306b\u3066\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u3092\u95a2\u9023\u4ed8\u3051) connectButton = ( Button ) findViewById ( R . id . connectButton ); forwardButton = ( Button ) findViewById ( R . id . forwardButton ); backButton = ( Button ) findViewById ( R . id . backButton ); stopButton = ( Button ) findViewById ( R . id . stopButton ); // \u30dc\u30bf\u30f3\u306e\u30a4\u30d9\u30f3\u30c8\u8a2d\u5b9a connectButton . setOnClickListener ( this ); forwardButton . setOnClickListener ( this ); backButton . setOnClickListener ( this ); stopButton . setOnClickListener ( this ); // Bluetooth\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u53d6\u5f97 // \u30c7\u30d0\u30a4\u30b9\u540d\u306f\u3001RNBT-XXXX\u306b\u306a\u308b\u305f\u3081\u3001 // DVICE_NAME\u3067\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u5b9a\u7fa9 mAdapter = BluetoothAdapter . getDefaultAdapter (); mStatusTextView . setText ( \"SearchDevice\" ); Set < BluetoothDevice > devices = mAdapter . getBondedDevices (); for ( BluetoothDevice device : devices ){ if ( device . getName (). equals ( DEVICE_NAME )){ mStatusTextView . setText ( \"find: \" + device . getName ()); mDevice = device ; } } } // \u5225\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u304c\u8d77\u52d5\u3057\u305f\u5834\u5408\u306e\u51e6\u7406 @Override protected void onPause (){ super . onPause (); isRunning = false ; connectFlg = false ; try { mSocket . close (); } catch ( Exception e ){} } // \u30b9\u30ec\u30c3\u30c9\u51e6\u7406(connect\u30dc\u30bf\u30f3\u62bc\u4e0b\u5f8c\u306b\u5b9f\u884c) @Override public void run () { InputStream mmInStream = null ; Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connecting...\" ; mHandler . sendMessage ( valueMsg ); try { // \u53d6\u5f97\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u4f7f\u3063\u3066Bluetooth\u3067Socket\u63a5\u7d9a mSocket = mDevice . createRfcommSocketToServiceRecord ( MY_UUID ); mSocket . connect (); mmInStream = mSocket . getInputStream (); mmOutputStream = mSocket . getOutputStream (); // InputStream\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u683c\u7d0d byte [] buffer = new byte [ 1024 ] ; // \u53d6\u5f97\u3057\u305f\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3092\u683c\u7d0d int bytes ; valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"connected.\" ; mHandler . sendMessage ( valueMsg ); connectFlg = true ; while ( isRunning ){ // InputStream\u306e\u8aad\u307f\u8fbc\u307f bytes = mmInStream . read ( buffer ); Log . i ( TAG , \"bytes=\" + bytes ); // String\u578b\u306b\u5909\u63db String readMsg = new String ( buffer , 0 , bytes ); // null\u4ee5\u5916\u306a\u3089\u8868\u793a if ( readMsg . trim () != null && ! readMsg . trim (). equals ( \"\" )){ Log . i ( TAG , \"value=\" + readMsg . trim ()); valueMsg = new Message (); valueMsg . what = VIEW_INPUT ; valueMsg . obj = readMsg ; mHandler . sendMessage ( valueMsg ); } } } // \u30a8\u30e9\u30fc\u51e6\u7406 catch ( Exception e ){ valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error1:\" + e ; mHandler . sendMessage ( valueMsg ); try { mSocket . close (); } catch ( Exception ee ){} isRunning = false ; connectFlg = false ; } } // \u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u306e\u51e6\u7406 @Override public void onClick ( View v ) { // Connect\u30dc\u30bf\u30f3 if ( v . equals ( connectButton )) { if ( ! connectFlg ) { mStatusTextView . setText ( \"try connect\" ); mThread = new Thread ( this ); // Thread\u3092\u8d77\u52d5\u3057\u3001Bluetooth\u63a5\u7d9a isRunning = true ; mThread . start (); } } // \u2191\u30dc\u30bf\u30f3 else if ( v . equals ( forwardButton )) { if ( connectFlg ) { try { // \u2191\u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u3001'1'\u3092\u9001\u4fe1 mmOutputStream . write ( \"1\" . getBytes ()); // \u753b\u9762\u4e0a\u306b'\u2191:'\u3092\u8868\u793a mStatusTextView . setText ( \"\u2191:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error1:\" + e ; mHandler . sendMessage ( valueMsg ); } } // Connect\u30dc\u30bf\u30f3\u306b\u3088\u308a\u63a5\u7d9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408 else { mStatusTextView . setText ( \"Please push the connect button\" ); } } // \u2193\u30dc\u30bf\u30f3 else if ( v . equals ( backButton )) { if ( connectFlg ) { try { // \u2193\u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u3001'2'\u3092\u9001\u4fe1 mmOutputStream . write ( \"2\" . getBytes ()); // \u753b\u9762\u4e0a\u306b'\u2193:'\u3092\u8868\u793a mStatusTextView . setText ( \"\u2193:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error2:\" + e ; mHandler . sendMessage ( valueMsg ); } } // Connect\u30dc\u30bf\u30f3\u306b\u3088\u308a\u63a5\u7d9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408 else { mStatusTextView . setText ( \"Please push the connect button\" ); } } // stop\u30dc\u30bf\u30f3 else if ( v . equals ( stopButton )) { if ( connectFlg ) { try { // stop\u30dc\u30bf\u30f3\u62bc\u4e0b\u6642\u3001'0'\u3092\u9001\u4fe1 mmOutputStream . write ( \"0\" . getBytes ()); // \u753b\u9762\u4e0a\u306b'STOP:'\u3092\u8868\u793a mStatusTextView . setText ( \"STOP:\" ); } catch ( IOException e ) { Message valueMsg = new Message (); valueMsg . what = VIEW_STATUS ; valueMsg . obj = \"Error5:\" + e ; mHandler . sendMessage ( valueMsg ); } } // Connect\u30dc\u30bf\u30f3\u306b\u3088\u308a\u63a5\u7d9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408 else { mStatusTextView . setText ( \"Please push the connect button\" ); } } } /** * \u63cf\u753b\u51e6\u7406\u306fHandler\u3067\u304a\u3053\u306a\u3046 */ Handler mHandler = new Handler () { @Override public void handleMessage ( Message msg ) { int action = msg . what ; String msgStr = ( String ) msg . obj ; if ( action == VIEW_INPUT ){ mInputTextView . setText ( msgStr ); } else if ( action == VIEW_STATUS ){ mStatusTextView . setText ( msgStr ); } } }; } \u3053\u308c\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5b8c\u4e86\u3067\u3059\u3002 \u307e\u305a\u3001\u30ed\u30dc\u30c3\u30c8\u30ab\u30fc\u306b\u5358\u4e09\u96fb\u6c60\uff14\u672c(\u30e2\u30fc\u30bf\u30fc\u7528)\u30019V\u96fb\u6c60(Arduino\u96fb\u6e90\u7528)\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002 Android\u3068Bluetooth\u63a5\u7d9a\u3057\u3001\u753b\u9762\u306e\u30dc\u30bf\u30f3\u304b\u3089\u30ed\u30dc\u30c3\u30c8\u30ab\u30fc\u3092\u64cd\u4f5c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002 \u3053\u3053\u307e\u3067\u51fa\u6765\u307e\u3057\u305f\u3089\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \uff11\uff0e\u53f3\u65cb\u56de\u3001\u5de6\u65cb\u56de\u6a5f\u80fd\u3092\u8ffd\u52a0 \uff12\uff0e\u901f\u5ea6\u5909\u66f4 \uff13\uff0e\u30bb\u30f3\u30b5\u30fc\u3092\u63a5\u7d9a\u3057\u3001\u53d6\u5f97\u3057\u305f\u5024\u3092Android\u7aef\u672b\u306b\u9001\u4fe1 \uff14\uff0e\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u306b\u3088\u308a\u52d5\u4f5c\u5909\u66f4\uff08\u6697\u304f\u306a\u3063\u305f\u3089\u9045\u304f\u306a\u308b\u306a\u3069\uff09","title":"\u753b\u9762\u30ec\u30a4\u30a2\u30a6\u30c8"},{"location":"article3-1/","text":"\u4e8b\u524d\u6e96\u5099 USB Host\u3068\u306f USB Host\u3068\u306f\u3001USB\u3067\u7aef\u672b\u3068\u5468\u8fba\u6a5f\u5668\u3092\u7e4b\u304e\u3001\u7247\u65b9\u304c\u89aa\u3068\u306a\u308a\u5468\u8fba\u6a5f\u5668\u3092\u5236\u5fa1\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002 \u3053\u3053\u3067\u306f\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3068Arduino\u3092USB\u30b1\u30fc\u30d6\u30eb\u3067\u63a5\u7d9a\u3057\u3001\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3067\u30c6\u30ad\u30b9\u30c8\u9001\u4fe1\u3084LED\u5236\u5fa1\u3092\u884c\u3063\u3066\u884c\u304d\u307e\u3059\u3002 \u6e96\u5099\u3059\u308b\u3082\u306e \u30fbAndroid\u958b\u767a\u74b0\u5883 (Android Studio) \u30fb\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3(Android\u7aef\u672b) \u30fbUSB(microB to A)\u5909\u63db\u30a2\u30c0\u30d7\u30bf\u30fc \u30fbUSB\u30b1\u30fc\u30d6\u30eb(A - miniB) \u30fbArduino Uno http://arduino.cc/en/Main/ArduinoBoardUno Android\u5074\u306e\u30c9\u30e9\u30a4\u30d0\u8a2d\u5b9a \u65b0\u898f\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u30e1\u30cb\u30e5\u30fc\u3088\u308a\u3001[File] - [New] - [project...]\u3092\u9078\u629e\u3057\u307e\u3059\u3002 New Project \u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u300cApplication name\u300d\u3001\u300cCompany Domain\u300d\u3092\u5165\u529b\u3057\u300cNext\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u5fc5\u8981\u306aAPI\u3092\u9078\u629e\u3057\u3001\u300cNext\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u300cBlank Activity\u300d\u3092\u9078\u629e\u3057\u3001\u300cNext\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u300cFinish\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u6b21\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u8ffd\u52a0\u3092\u884c\u3044\u307e\u3059\u3002 FTDI\u793e\u306eFT232RL\u7528\u30c9\u30e9\u30a4\u30d0\u30fc\u3092\u7d44\u307f\u8fbc\u307f\u307e\u3059\u3002 \u203b\u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u7d44\u307f\u8fbc\u307f\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5358\u4f4d\u3067\u884c\u3046\u305f\u3081\u3001\u65b0\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u540c\u69d8\u306e\u64cd\u4f5c\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002 http://www.ftdichip.com/Support/SoftwareExamples/Android/TN_147_Java_D2xx_for_Android_Demo_Source.zip \u4e0a\u8a18\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u89e3\u51cd\u3057\u307e\u3059\u3002 \u89e3\u51cd\u5f8c\u3001\u5bfe\u8c61\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u306f\u3044\u3063\u3066\u3044\u308bj2xx.jar\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002 Android Studio\u306eExplorer\u306e\u8868\u793a\u3092\u5909\u3048\u307e\u3059\u3002 Android\u306e\u6a2a\u306e\u4e0b\u4e09\u89d2\u3092\u9078\u629e\u3057\u3001\u8868\u793a\u30e2\u30fc\u30c9\u3092Project\u306b\u5909\u66f4\u3057\u307e\u3059\u3002 \u300cProject\u300d\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u5148\u307b\u3069\u3001\u30b3\u30d4\u30fc\u3057\u305fj2xx.jar \u3092libs\u30d5\u30a9\u30eb\u30c0\u306b\u30da\u30fc\u30b9\u30c8\u3057\u307e\u3059\u3002 Sync\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u3001\u540c\u671f\u3057\u307e\u3059\u3002 \u30c9\u30e9\u30a4\u30d0\u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0a\u3067\u5b8c\u4e86\u3067\u3059\u3002","title":"\u4e8b\u524d\u6e96\u5099"},{"location":"article3-1/#_1","text":"","title":"\u4e8b\u524d\u6e96\u5099"},{"location":"article3-1/#usb-host","text":"USB Host\u3068\u306f\u3001USB\u3067\u7aef\u672b\u3068\u5468\u8fba\u6a5f\u5668\u3092\u7e4b\u304e\u3001\u7247\u65b9\u304c\u89aa\u3068\u306a\u308a\u5468\u8fba\u6a5f\u5668\u3092\u5236\u5fa1\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002 \u3053\u3053\u3067\u306f\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3068Arduino\u3092USB\u30b1\u30fc\u30d6\u30eb\u3067\u63a5\u7d9a\u3057\u3001\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3067\u30c6\u30ad\u30b9\u30c8\u9001\u4fe1\u3084LED\u5236\u5fa1\u3092\u884c\u3063\u3066\u884c\u304d\u307e\u3059\u3002","title":"USB Host\u3068\u306f"},{"location":"article3-1/#_2","text":"\u30fbAndroid\u958b\u767a\u74b0\u5883 (Android Studio) \u30fb\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3(Android\u7aef\u672b) \u30fbUSB(microB to A)\u5909\u63db\u30a2\u30c0\u30d7\u30bf\u30fc \u30fbUSB\u30b1\u30fc\u30d6\u30eb(A - miniB) \u30fbArduino Uno http://arduino.cc/en/Main/ArduinoBoardUno","title":"\u6e96\u5099\u3059\u308b\u3082\u306e"},{"location":"article3-1/#android","text":"\u65b0\u898f\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u30e1\u30cb\u30e5\u30fc\u3088\u308a\u3001[File] - [New] - [project...]\u3092\u9078\u629e\u3057\u307e\u3059\u3002 New Project \u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u300cApplication name\u300d\u3001\u300cCompany Domain\u300d\u3092\u5165\u529b\u3057\u300cNext\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u5fc5\u8981\u306aAPI\u3092\u9078\u629e\u3057\u3001\u300cNext\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u300cBlank Activity\u300d\u3092\u9078\u629e\u3057\u3001\u300cNext\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u300cFinish\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u6b21\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u8ffd\u52a0\u3092\u884c\u3044\u307e\u3059\u3002 FTDI\u793e\u306eFT232RL\u7528\u30c9\u30e9\u30a4\u30d0\u30fc\u3092\u7d44\u307f\u8fbc\u307f\u307e\u3059\u3002 \u203b\u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u7d44\u307f\u8fbc\u307f\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5358\u4f4d\u3067\u884c\u3046\u305f\u3081\u3001\u65b0\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u540c\u69d8\u306e\u64cd\u4f5c\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002 http://www.ftdichip.com/Support/SoftwareExamples/Android/TN_147_Java_D2xx_for_Android_Demo_Source.zip \u4e0a\u8a18\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u89e3\u51cd\u3057\u307e\u3059\u3002 \u89e3\u51cd\u5f8c\u3001\u5bfe\u8c61\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u306f\u3044\u3063\u3066\u3044\u308bj2xx.jar\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002 Android Studio\u306eExplorer\u306e\u8868\u793a\u3092\u5909\u3048\u307e\u3059\u3002 Android\u306e\u6a2a\u306e\u4e0b\u4e09\u89d2\u3092\u9078\u629e\u3057\u3001\u8868\u793a\u30e2\u30fc\u30c9\u3092Project\u306b\u5909\u66f4\u3057\u307e\u3059\u3002 \u300cProject\u300d\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u5148\u307b\u3069\u3001\u30b3\u30d4\u30fc\u3057\u305fj2xx.jar \u3092libs\u30d5\u30a9\u30eb\u30c0\u306b\u30da\u30fc\u30b9\u30c8\u3057\u307e\u3059\u3002 Sync\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u3001\u540c\u671f\u3057\u307e\u3059\u3002 \u30c9\u30e9\u30a4\u30d0\u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0a\u3067\u5b8c\u4e86\u3067\u3059\u3002","title":"Android\u5074\u306e\u30c9\u30e9\u30a4\u30d0\u8a2d\u5b9a"},{"location":"article3-2/","text":"\u30c6\u30ad\u30b9\u30c8\u9001\u4fe1 Arduino\u5074\u306e\u8a2d\u5b9a \u56de\u8def\u3092\u4f5c\u6210\u3057\u3001\u30b9\u30b1\u30c3\u30c1\u306e\u5165\u529b\u3092\u884c\u3044\u307e\u3059\u3002 \u4eca\u56de\u306f\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3092\u4f7f\u7528\u305b\u305a\u3001\u30b7\u30ea\u30a2\u30eb\u30a2\u30c0\u30d7\u30bf\u3068\u76f4\u63a5\u7e4b\u3052\u307e\u3059\u3002 \u306a\u304a\u3001Arduino Uno\u3068Arduino Mega\u3067\u306f\u914d\u7dda\u3068\u30b9\u30b1\u30c3\u30c1\u304c\u5c11\u3057\u7570\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u5225\u3005\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002 Adrduino Uno \u56de\u8def (Arduino Uno) \u30b9\u30b1\u30c3\u30c1 (Arduino Uno) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <SoftwareSerial.h> //android\u3067\u4f7f\u7528\u3059\u308b\u30d4\u30f3\u3092\u6307\u5b9a SoftwareSerial android ( 2 , 3 ); void setup (){ //android\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 9600 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 19200 ); Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ Serial . write ( android . read ()); } } Arduino Mega \u56de\u8def (Arduino Mega) Arduino 18 TX1 -> USB Serial RXD Arduino 19 RX1 -> USB Serial TXD \u53c2\u8003 http://arduino.cc/en/Serial/begin \u30b9\u30b1\u30c3\u30c1 (Arduino Mega) 18, 19\u306f\u3001TX1, RX1\u3068\u306a\u3063\u3066\u304a\u308a\u3001Arduino\u3067\u306f Serial1.begin(\u901f\u5ea6)\u3067\u8a2d\u5b9a\u3067\u304d\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 void setup () { // android\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a Serial1 . begin ( 9600 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 19200 ); Serial . write ( \"init\" ); } void loop () { if ( Serial1 . available ()) { Serial . write ( Serial1 . read ()); } } Android\u5074\u306e\u8a2d\u5b9a Android\u30b3\u30fc\u30c9\u5165\u529b MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 package gclue . com . myusbhost ; import android.content.BroadcastReceiver ; import android.content.Context ; import android.content.Intent ; import android.hardware.usb.UsbManager ; import android.os.Bundle ; import android.support.v7.app.ActionBarActivity ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.Toast ; import com.ftdi.j2xx.D2xxManager ; import com.ftdi.j2xx.FT_Device ; public class MainActivity extends ActionBarActivity { private FT_Device ftDev = null ; private static Context mContext ; private D2xxManager ftdid2xx ; private static final String TAG = \"USB\" ; private int iavailable = 0 ; private static final int readLength = 512 ; byte [] readData ; char [] readDataToText ; private Button mOutputButton ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); try { ftdid2xx = D2xxManager . getInstance ( this ); } catch ( D2xxManager . D2xxException ex ) { Log . e ( TAG , ex . toString ()); } mContext = this . getBaseContext (); openUsb (); // \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089 USB\u306b\u5024\u3092\u9001\u308a\u8fbc\u3080 mOutputButton = ( Button ) findViewById ( R . id . outputButton ); mOutputButton . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View v ) { SendMessage ( \"1\" ); } }); } public void openUsb (){ int devCount = 0 ; devCount = ftdid2xx . createDeviceInfoList ( this ); if ( devCount <= 0 ) { Toast . makeText ( this , \"\u30c7\u30d0\u30a4\u30b9\u304c\u767a\u898b\u3067\u304d\u307e\u305b\u3093\u3002\" + Integer . toString ( devCount ), Toast . LENGTH_LONG ) . show (); Log . i ( TAG , \"\u30c7\u30d0\u30a4\u30b9\u304c\u767a\u898b\u3067\u304d\u307e\u3057\u305b\u3093\u3067\u3057\u305f\u3002\" ); return ; } else { Toast . makeText ( this , \"\" + devCount + \"\u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\" , Toast . LENGTH_LONG ) . show (); Log . i ( TAG , \"\" + devCount + \"\u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\" ); } if ( null == ftDev ) { ftDev = ftdid2xx . openByIndex ( mContext , 0 ); } else { synchronized ( ftDev ) { ftDev = ftdid2xx . openByIndex ( mContext , 0 ); } } // ftDev . setBitMode (( byte ) 0 , D2xxManager . FT_BITMODE_RESET ); ftDev . setBaudRate ( 9600 ); ftDev . setDataCharacteristics ( D2xxManager . FT_DATA_BITS_8 , D2xxManager . FT_STOP_BITS_1 , D2xxManager . FT_PARITY_NONE ); ftDev . setFlowControl ( D2xxManager . FT_FLOW_NONE , ( byte ) 0x0b , ( byte ) 0x0d ); ftDev . purge (( byte ) ( D2xxManager . FT_PURGE_TX | D2xxManager . FT_PURGE_RX )); ftDev . restartInTask (); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu ; this adds items to the action bar if it is present . getMenuInflater () . inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here . The action bar will // automatically handle clicks on the Home / Up button , so long // as you specify a parent activity in AndroidManifest . xml . int id = item . getItemId (); // noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } public void SendMessage ( String msg ) { if ( ftDev == null ){ return ; } synchronized ( ftDev ) { if ( ftDev . isOpen () == false ) { Log . e ( \"j2xx\" , \"SendMessage: device not open\" ); return ; } ftDev . setLatencyTimer (( byte ) 16 ); if ( msg != null ) { byte [] OutData = msg . getBytes (); ftDev . write ( OutData , msg . length ()); } } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:orientation= \"vertical\" > <Button android:id= \"@+id/outputButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Button\" android:layout_gravity= \"center_horizontal\" /> </LinearLayout> AndroidManifext.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"gclue.com.myusbhost\" > <application android:allowBackup= \"true\" android:icon= \"@drawable/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> <intent-filter> <action android:name= \"android.hardware.usb.action.USB_DEVICE_ATTACHED\" /> </intent-filter> <meta-data android:name= \"android.hardware.usb.action.USB_DEVICE_ATTACHED\" android:resource= \"@xml/device_filter\" /> </activity> </application> </manifest> device_filter.xml res/xml\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u65b0\u898f\u4f5c\u6210\u3057\u3001device_filter.xml\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u4f5c\u6210\u3057\u305fdevice_filter.xml\u3092\u5909\u66f4\u3057\u307e\u3059\u3002 1 2 3 4 <?xml version=\"1.0\" encoding=\"utf-8\"?> <resources> <usb-device vendor-id= \"1027\" /> </resources> \u5b9f\u884c\u78ba\u8a8d PC\u3068Android\u7aef\u672b\u3092USB\u30b1\u30fc\u30d6\u30eb\u3067\u7e4b\u304e\u307e\u3059\u3002 \u3053\u306e\u72b6\u614b\u3067\u306f\u6570\u79d2\u5f8c\u306b\u81ea\u52d5\u7684\u306b\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u6b21\u306bUSB\u30b1\u30fc\u30d6\u30eb\u3092\u53d6\u308a\u5916\u3057\u3001\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306bArduino\u3068Android\u7aef\u672b\u3092\u7e4b\u304e\u307e\u3059\u3002 \u9806\u756a\u3068\u3057\u307e\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3000\u2192\u3000\u5909\u63db\u30a2\u30c0\u30d7\u30bf\u3000\u2192\u3000USB\u30b1\u30fc\u30d6\u30eb\u3000 \u2192\u3000Arduino(USB\u30b7\u30ea\u30a2\u30eb\u30a2\u30c0\u30d7\u30bf)\u3000\u2192\u3000USB\u30b1\u30fc\u30d6\u30eb\u3000\u2192\u3000PC \u3053\u306e\u6642\u3001Arduino IDE\u3092\u8d77\u52d5\u3057\u3001\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u8d77\u52d5\u3057\u3066\u304a\u304d\u307e\u3059\u3002 \u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u53f3\u4e0a\u306e\u30eb\u30fc\u30da\u30de\u30fc\u30af\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u8d77\u52d5\u3057\u307e\u3059\u3002 \u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002 \u53f3\u4e0b\u306e\u8ee2\u9001\u30ec\u30fc\u30c8\u304c\u30b9\u30b1\u30c3\u30c1\u3067\u5165\u529b\u3057\u305f\u5024\u3068\u4e00\u81f4\u3057\u3066\u3044\u306a\u3044\u3068\u6b63\u3057\u304f\u8868\u793a\u3055\u308c\u306a\u3044\u305f\u3081\u3001\u540c\u3058\u5024\u306e\u300c19200\u300d\u306b\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002 Android\u306e\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u30681\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","title":"\u30c6\u30ad\u30b9\u30c8\u9001\u4fe1"},{"location":"article3-2/#_1","text":"","title":"\u30c6\u30ad\u30b9\u30c8\u9001\u4fe1"},{"location":"article3-2/#arduino","text":"\u56de\u8def\u3092\u4f5c\u6210\u3057\u3001\u30b9\u30b1\u30c3\u30c1\u306e\u5165\u529b\u3092\u884c\u3044\u307e\u3059\u3002 \u4eca\u56de\u306f\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3092\u4f7f\u7528\u305b\u305a\u3001\u30b7\u30ea\u30a2\u30eb\u30a2\u30c0\u30d7\u30bf\u3068\u76f4\u63a5\u7e4b\u3052\u307e\u3059\u3002 \u306a\u304a\u3001Arduino Uno\u3068Arduino Mega\u3067\u306f\u914d\u7dda\u3068\u30b9\u30b1\u30c3\u30c1\u304c\u5c11\u3057\u7570\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u5225\u3005\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002","title":"Arduino\u5074\u306e\u8a2d\u5b9a"},{"location":"article3-2/#adrduino-uno","text":"","title":"Adrduino Uno"},{"location":"article3-2/#arduino-uno","text":"","title":"\u56de\u8def (Arduino Uno)"},{"location":"article3-2/#arduino-uno_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <SoftwareSerial.h> //android\u3067\u4f7f\u7528\u3059\u308b\u30d4\u30f3\u3092\u6307\u5b9a SoftwareSerial android ( 2 , 3 ); void setup (){ //android\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 9600 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 19200 ); Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ Serial . write ( android . read ()); } }","title":"\u30b9\u30b1\u30c3\u30c1 (Arduino Uno)"},{"location":"article3-2/#arduino-mega","text":"","title":"Arduino Mega"},{"location":"article3-2/#arduino-mega_1","text":"Arduino 18 TX1 -> USB Serial RXD Arduino 19 RX1 -> USB Serial TXD \u53c2\u8003 http://arduino.cc/en/Serial/begin","title":"\u56de\u8def (Arduino Mega)"},{"location":"article3-2/#arduino-mega_2","text":"18, 19\u306f\u3001TX1, RX1\u3068\u306a\u3063\u3066\u304a\u308a\u3001Arduino\u3067\u306f Serial1.begin(\u901f\u5ea6)\u3067\u8a2d\u5b9a\u3067\u304d\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 void setup () { // android\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a Serial1 . begin ( 9600 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 19200 ); Serial . write ( \"init\" ); } void loop () { if ( Serial1 . available ()) { Serial . write ( Serial1 . read ()); } }","title":"\u30b9\u30b1\u30c3\u30c1 (Arduino Mega)"},{"location":"article3-2/#android","text":"","title":"Android\u5074\u306e\u8a2d\u5b9a"},{"location":"article3-2/#android_1","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 package gclue . com . myusbhost ; import android.content.BroadcastReceiver ; import android.content.Context ; import android.content.Intent ; import android.hardware.usb.UsbManager ; import android.os.Bundle ; import android.support.v7.app.ActionBarActivity ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.Toast ; import com.ftdi.j2xx.D2xxManager ; import com.ftdi.j2xx.FT_Device ; public class MainActivity extends ActionBarActivity { private FT_Device ftDev = null ; private static Context mContext ; private D2xxManager ftdid2xx ; private static final String TAG = \"USB\" ; private int iavailable = 0 ; private static final int readLength = 512 ; byte [] readData ; char [] readDataToText ; private Button mOutputButton ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); try { ftdid2xx = D2xxManager . getInstance ( this ); } catch ( D2xxManager . D2xxException ex ) { Log . e ( TAG , ex . toString ()); } mContext = this . getBaseContext (); openUsb (); // \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089 USB\u306b\u5024\u3092\u9001\u308a\u8fbc\u3080 mOutputButton = ( Button ) findViewById ( R . id . outputButton ); mOutputButton . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View v ) { SendMessage ( \"1\" ); } }); } public void openUsb (){ int devCount = 0 ; devCount = ftdid2xx . createDeviceInfoList ( this ); if ( devCount <= 0 ) { Toast . makeText ( this , \"\u30c7\u30d0\u30a4\u30b9\u304c\u767a\u898b\u3067\u304d\u307e\u305b\u3093\u3002\" + Integer . toString ( devCount ), Toast . LENGTH_LONG ) . show (); Log . i ( TAG , \"\u30c7\u30d0\u30a4\u30b9\u304c\u767a\u898b\u3067\u304d\u307e\u3057\u305b\u3093\u3067\u3057\u305f\u3002\" ); return ; } else { Toast . makeText ( this , \"\" + devCount + \"\u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\" , Toast . LENGTH_LONG ) . show (); Log . i ( TAG , \"\" + devCount + \"\u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\" ); } if ( null == ftDev ) { ftDev = ftdid2xx . openByIndex ( mContext , 0 ); } else { synchronized ( ftDev ) { ftDev = ftdid2xx . openByIndex ( mContext , 0 ); } } // ftDev . setBitMode (( byte ) 0 , D2xxManager . FT_BITMODE_RESET ); ftDev . setBaudRate ( 9600 ); ftDev . setDataCharacteristics ( D2xxManager . FT_DATA_BITS_8 , D2xxManager . FT_STOP_BITS_1 , D2xxManager . FT_PARITY_NONE ); ftDev . setFlowControl ( D2xxManager . FT_FLOW_NONE , ( byte ) 0x0b , ( byte ) 0x0d ); ftDev . purge (( byte ) ( D2xxManager . FT_PURGE_TX | D2xxManager . FT_PURGE_RX )); ftDev . restartInTask (); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu ; this adds items to the action bar if it is present . getMenuInflater () . inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here . The action bar will // automatically handle clicks on the Home / Up button , so long // as you specify a parent activity in AndroidManifest . xml . int id = item . getItemId (); // noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } public void SendMessage ( String msg ) { if ( ftDev == null ){ return ; } synchronized ( ftDev ) { if ( ftDev . isOpen () == false ) { Log . e ( \"j2xx\" , \"SendMessage: device not open\" ); return ; } ftDev . setLatencyTimer (( byte ) 16 ); if ( msg != null ) { byte [] OutData = msg . getBytes (); ftDev . write ( OutData , msg . length ()); } } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:orientation= \"vertical\" > <Button android:id= \"@+id/outputButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Button\" android:layout_gravity= \"center_horizontal\" /> </LinearLayout> AndroidManifext.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"gclue.com.myusbhost\" > <application android:allowBackup= \"true\" android:icon= \"@drawable/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> <intent-filter> <action android:name= \"android.hardware.usb.action.USB_DEVICE_ATTACHED\" /> </intent-filter> <meta-data android:name= \"android.hardware.usb.action.USB_DEVICE_ATTACHED\" android:resource= \"@xml/device_filter\" /> </activity> </application> </manifest> device_filter.xml res/xml\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u65b0\u898f\u4f5c\u6210\u3057\u3001device_filter.xml\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u4f5c\u6210\u3057\u305fdevice_filter.xml\u3092\u5909\u66f4\u3057\u307e\u3059\u3002 1 2 3 4 <?xml version=\"1.0\" encoding=\"utf-8\"?> <resources> <usb-device vendor-id= \"1027\" /> </resources>","title":"Android\u30b3\u30fc\u30c9\u5165\u529b"},{"location":"article3-2/#_2","text":"PC\u3068Android\u7aef\u672b\u3092USB\u30b1\u30fc\u30d6\u30eb\u3067\u7e4b\u304e\u307e\u3059\u3002 \u3053\u306e\u72b6\u614b\u3067\u306f\u6570\u79d2\u5f8c\u306b\u81ea\u52d5\u7684\u306b\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u6b21\u306bUSB\u30b1\u30fc\u30d6\u30eb\u3092\u53d6\u308a\u5916\u3057\u3001\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306bArduino\u3068Android\u7aef\u672b\u3092\u7e4b\u304e\u307e\u3059\u3002 \u9806\u756a\u3068\u3057\u307e\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3000\u2192\u3000\u5909\u63db\u30a2\u30c0\u30d7\u30bf\u3000\u2192\u3000USB\u30b1\u30fc\u30d6\u30eb\u3000 \u2192\u3000Arduino(USB\u30b7\u30ea\u30a2\u30eb\u30a2\u30c0\u30d7\u30bf)\u3000\u2192\u3000USB\u30b1\u30fc\u30d6\u30eb\u3000\u2192\u3000PC \u3053\u306e\u6642\u3001Arduino IDE\u3092\u8d77\u52d5\u3057\u3001\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u8d77\u52d5\u3057\u3066\u304a\u304d\u307e\u3059\u3002 \u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u53f3\u4e0a\u306e\u30eb\u30fc\u30da\u30de\u30fc\u30af\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u8d77\u52d5\u3057\u307e\u3059\u3002 \u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002 \u53f3\u4e0b\u306e\u8ee2\u9001\u30ec\u30fc\u30c8\u304c\u30b9\u30b1\u30c3\u30c1\u3067\u5165\u529b\u3057\u305f\u5024\u3068\u4e00\u81f4\u3057\u3066\u3044\u306a\u3044\u3068\u6b63\u3057\u304f\u8868\u793a\u3055\u308c\u306a\u3044\u305f\u3081\u3001\u540c\u3058\u5024\u306e\u300c19200\u300d\u306b\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002 Android\u306e\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u30681\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","title":"\u5b9f\u884c\u78ba\u8a8d"},{"location":"article3-3/","text":"\u30c6\u30ad\u30b9\u30c8\u53d7\u4fe1 \u6b21\u306fArduino\u304b\u3089Android\u3078\u30c6\u30ad\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002 Arduino\u5074\u306e\u8a2d\u5b9a \u56de\u8def\u306f\u524d\u56de\u3068\u540c\u69d8\u306a\u306e\u3067\u3001\u30b9\u30b1\u30c3\u30c1\u306e\u307f\u5909\u66f4\u3057\u307e\u3059\u3002 Arduino UNO 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <SoftwareSerial.h> //android\u3067\u4f7f\u7528\u3059\u308b\u30d4\u30f3\u3092\u6307\u5b9a SoftwareSerial android ( 2 , 3 ); void setup (){ //android\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 9600 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 19200 ); Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ Serial . write ( android . read ()); } if ( Serial . available ()){ android . write ( Serial . read ()); } } Arduino Mega 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 void setup () { // android\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a Serial1 . begin ( 9600 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 19200 ); Serial . write ( \"init\" ); } void loop () { if ( Serial1 . available ()) { Serial . write ( Serial1 . read ()); } if ( Serial . available ()) { Serial1 . write ( Serial . read ()); } } Android\u5074\u306e\u8a2d\u5b9a \u4ee5\u4e0b\u306e\u305d\u308c\u305e\u308c\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u9752\u306e\u7b87\u6240\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u306a\u304a\u3001xml\u3092\u5909\u66f4\u5f8c\u306b\u4fdd\u5b58\u3057\u3066\u3044\u306a\u3044\u72b6\u614b\u3067\u306f\u3001MainActivity.java\u306e\u30a8\u30e9\u30fc\u304c\u6d88\u3048\u307e\u305b\u3093\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002 MainActivity.javapackage gclue . com . myusbhost ; import android.content.BroadcastReceiver ; import android.content.Context ; import android.content.Intent ; import android.hardware.usb.UsbManager ; import android.os.Bundle ; import android.os.Handler ; import android.os.Message ; import android.support.v7.app.ActionBarActivity ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import android.widget.Toast ; import com.ftdi.j2xx.D2xxManager ; import com.ftdi.j2xx.FT_Device ; public class MainActivity extends ActionBarActivity { private FT_Device ftDev = null ; private static Context mContext ; private D2xxManager ftdid2xx ; private static final String TAG = \"USB\" ; private boolean isReading = false ; private ReadThread mReadThread ; private int iavailable = 0 ; private static final int readLength = 512 ; byte [] readData ; char [] readDataToText ; private TextView mInputValue ; private Button mOutputButton ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); try { ftdid2xx = D2xxManager . getInstance ( this ); } catch ( D2xxManager . D2xxException ex ) { Log . e ( TAG , ex . toString ()); } mContext = this . getBaseContext (); openUsb (); mInputValue = ( TextView ) findViewById ( R . id . inputValue ); // \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089 USB\u306b\u5024\u3092\u9001\u308a\u8fbc\u3080 mOutputButton = ( Button ) findViewById ( R . id . outputButton ); mOutputButton . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View v ) { SendMessage ( \"1\" ); } }); } public void openUsb (){ int devCount = 0 ; devCount = ftdid2xx . createDeviceInfoList ( this ); if ( devCount <= 0 ) { Toast . makeText ( this , \"\u30c7\u30d0\u30a4\u30b9\u304c\u767a\u898b\u3067\u304d\u307e\u305b\u3093\u3002\" + Integer . toString ( devCount ), Toast . LENGTH_LONG ) . show (); Log . i ( TAG , \"\u30c7\u30d0\u30a4\u30b9\u304c\u767a\u898b\u3067\u304d\u307e\u3057\u305b\u3093\u3067\u3057\u305f\u3002\" ); return ; } else { Toast . makeText ( this , \"\" + devCount + \"\u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\" , Toast . LENGTH_LONG ) . show (); Log . i ( TAG , \"\" + devCount + \"\u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\" ); } if ( null == ftDev ) { ftDev = ftdid2xx . openByIndex ( mContext , 0 ); } else { synchronized ( ftDev ) { ftDev = ftdid2xx . openByIndex ( mContext , 0 ); } } // ftDev . setBitMode (( byte ) 0 , D2xxManager . FT_BITMODE_RESET ); ftDev . setBaudRate ( 9600 ); ftDev . setDataCharacteristics ( D2xxManager . FT_DATA_BITS_8 , D2xxManager . FT_STOP_BITS_1 , D2xxManager . FT_PARITY_NONE ); ftDev . setFlowControl ( D2xxManager . FT_FLOW_NONE , ( byte ) 0x0b , ( byte ) 0x0d ); ftDev . purge (( byte ) ( D2xxManager . FT_PURGE_TX | D2xxManager . FT_PURGE_RX )); ftDev . restartInTask (); readData = new byte [ readLength ]; readDataToText = new char [ readLength ]; mReadThread = new ReadThread ( mHandler ); mReadThread . start (); isReading = true ; } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu ; this adds items to the action bar if it is present . getMenuInflater () . inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here . The action bar will // automatically handle clicks on the Home / Up button , so long // as you specify a parent activity in AndroidManifest . xml . int id = item . getItemId (); // noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } public void SendMessage ( String msg ) { if ( ftDev == null ){ return ; } synchronized ( ftDev ) { if ( ftDev . isOpen () == false ) { Log . e ( \"j2xx\" , \"SendMessage: device not open\" ); return ; } ftDev . setLatencyTimer (( byte ) 16 ); if ( msg != null ) { byte [] OutData = msg . getBytes (); ftDev . write ( OutData , msg . length ()); } } } private class ReadThread extends Thread { Handler mHandler ; ReadThread ( Handler h ){ mHandler = h ; this . setPriority ( Thread . MIN_PRIORITY ); } @Override public void run () { int i ; while ( true == isReading ) { try { Thread . sleep ( 50 ); } catch ( InterruptedException e ) { } synchronized ( ftDev ) { iavailable = ftDev . getQueueStatus (); if ( iavailable > 0 ) { if ( iavailable > readLength ){ iavailable = readLength ; } ftDev . read ( readData , iavailable ); String mData = new String ( readData ); Message msg = mHandler . obtainMessage (); msg . obj = mData ; mHandler . sendMessage ( msg ); } } } } } /** * \u63cf\u753b\u51e6\u7406\u306f Handler\u3067\u304a\u3053\u306a\u3046 */ Handler mHandler = new Handler () { @Override public void handleMessage ( Message msg ) { String mData = ( String ) msg . obj ; mInputValue . setText ( mData ); } }; BroadcastReceiver mUsbReceiver = new BroadcastReceiver () { public void onReceive ( Context context , Intent intent ) { String action = intent . getAction (); if ( UsbManager . ACTION_USB_DEVICE_ATTACHED . equals ( action )) { // never come here ( when attached , go to onNewIntent ) openUsb (); } else if ( UsbManager . ACTION_USB_DEVICE_DETACHED . equals ( action )) { if ( ftDev != null ) { ftDev . close (); isReading = false ; } } } }; } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:orientation= \"vertical\" > <TextView android:id= \"@+id/inputValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/outputButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Button\" android:layout_gravity= \"center_horizontal\" /> </LinearLayout> PC\u3068Android\u7aef\u672b\u3092\u63a5\u7d9a\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u3057\u3001Android\u7aef\u672b\u5074\u306b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u524d\u56de\u3068\u540c\u69d8\u306b\u3001Arduino\u5074\u306f\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u8868\u793a\u3057\u305f\u72b6\u614b\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002 PC\u3068Arduino\u3001Arduino\u304b\u3089Android\u7aef\u672b\u306b\u305d\u308c\u305e\u308c\u30b3\u30fc\u30c9\u3067\u63a5\u7d9a\u3057\u307e\u3059\u3002 \u63a5\u7d9a\u304c\u3067\u304d\u307e\u3057\u305f\u3089\u3001Android\u7aef\u672b\u306e\u30a2\u30d7\u30ea\u4e00\u89a7\u3088\u308a\u3001\u4eca\u56de\u4f5c\u6210\u3057\u305f\u300cUsbHostPrint\u300d\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 \u8d77\u52d5\u3057\u307e\u3057\u305f\u3089\u753b\u9762\u4e0a\u90e8\u306b\u3042\u308a\u307e\u3059\u300cButton\u300d\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 Android\u5074\u306e\u30a2\u30d7\u30ea\u306b\u3066\u521d\u671f\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u300cinit\u300d\u306e\u5f8c\u308d\u306b\u3001\u300c1\u300d\u304c\u300cButton\u300d\u3092\u62bc\u3057\u305f\u56de\u6570\u5206\u51fa\u529b\u3055\u308c\u307e\u3057\u305f\u3002 \u6b21\u306bArduino\u306eInput\u90e8\u5206\u306b\u5024\u3092\u3044\u308c\u3066\u3001\u9001\u4fe1\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306e\u30a2\u30d7\u30ea\u753b\u9762\u306e\u5de6\u4e0a\u306b\u3001Arduino\u304b\u3089\u9001\u4fe1\u3057\u305f\u6587\u5b57\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","title":"\u30c6\u30ad\u30b9\u30c8\u53d7\u4fe1"},{"location":"article3-3/#_1","text":"\u6b21\u306fArduino\u304b\u3089Android\u3078\u30c6\u30ad\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002","title":"\u30c6\u30ad\u30b9\u30c8\u53d7\u4fe1"},{"location":"article3-3/#arduino","text":"\u56de\u8def\u306f\u524d\u56de\u3068\u540c\u69d8\u306a\u306e\u3067\u3001\u30b9\u30b1\u30c3\u30c1\u306e\u307f\u5909\u66f4\u3057\u307e\u3059\u3002","title":"Arduino\u5074\u306e\u8a2d\u5b9a"},{"location":"article3-3/#arduino-uno","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <SoftwareSerial.h> //android\u3067\u4f7f\u7528\u3059\u308b\u30d4\u30f3\u3092\u6307\u5b9a SoftwareSerial android ( 2 , 3 ); void setup (){ //android\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 9600 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 19200 ); Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ Serial . write ( android . read ()); } if ( Serial . available ()){ android . write ( Serial . read ()); } }","title":"Arduino UNO"},{"location":"article3-3/#arduino-mega","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 void setup () { // android\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a Serial1 . begin ( 9600 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 19200 ); Serial . write ( \"init\" ); } void loop () { if ( Serial1 . available ()) { Serial . write ( Serial1 . read ()); } if ( Serial . available ()) { Serial1 . write ( Serial . read ()); } }","title":"Arduino Mega"},{"location":"article3-3/#android","text":"\u4ee5\u4e0b\u306e\u305d\u308c\u305e\u308c\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u9752\u306e\u7b87\u6240\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u306a\u304a\u3001xml\u3092\u5909\u66f4\u5f8c\u306b\u4fdd\u5b58\u3057\u3066\u3044\u306a\u3044\u72b6\u614b\u3067\u306f\u3001MainActivity.java\u306e\u30a8\u30e9\u30fc\u304c\u6d88\u3048\u307e\u305b\u3093\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002","title":"Android\u5074\u306e\u8a2d\u5b9a"},{"location":"article3-3/#mainactivityjava","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 package gclue . com . myusbhost ; import android.content.BroadcastReceiver ; import android.content.Context ; import android.content.Intent ; import android.hardware.usb.UsbManager ; import android.os.Bundle ; import android.os.Handler ; import android.os.Message ; import android.support.v7.app.ActionBarActivity ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import android.widget.Toast ; import com.ftdi.j2xx.D2xxManager ; import com.ftdi.j2xx.FT_Device ; public class MainActivity extends ActionBarActivity { private FT_Device ftDev = null ; private static Context mContext ; private D2xxManager ftdid2xx ; private static final String TAG = \"USB\" ; private boolean isReading = false ; private ReadThread mReadThread ; private int iavailable = 0 ; private static final int readLength = 512 ; byte [] readData ; char [] readDataToText ; private TextView mInputValue ; private Button mOutputButton ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); try { ftdid2xx = D2xxManager . getInstance ( this ); } catch ( D2xxManager . D2xxException ex ) { Log . e ( TAG , ex . toString ()); } mContext = this . getBaseContext (); openUsb (); mInputValue = ( TextView ) findViewById ( R . id . inputValue ); // \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089 USB\u306b\u5024\u3092\u9001\u308a\u8fbc\u3080 mOutputButton = ( Button ) findViewById ( R . id . outputButton ); mOutputButton . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View v ) { SendMessage ( \"1\" ); } }); } public void openUsb (){ int devCount = 0 ; devCount = ftdid2xx . createDeviceInfoList ( this ); if ( devCount <= 0 ) { Toast . makeText ( this , \"\u30c7\u30d0\u30a4\u30b9\u304c\u767a\u898b\u3067\u304d\u307e\u305b\u3093\u3002\" + Integer . toString ( devCount ), Toast . LENGTH_LONG ) . show (); Log . i ( TAG , \"\u30c7\u30d0\u30a4\u30b9\u304c\u767a\u898b\u3067\u304d\u307e\u3057\u305b\u3093\u3067\u3057\u305f\u3002\" ); return ; } else { Toast . makeText ( this , \"\" + devCount + \"\u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\" , Toast . LENGTH_LONG ) . show (); Log . i ( TAG , \"\" + devCount + \"\u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\" ); } if ( null == ftDev ) { ftDev = ftdid2xx . openByIndex ( mContext , 0 ); } else { synchronized ( ftDev ) { ftDev = ftdid2xx . openByIndex ( mContext , 0 ); } } // ftDev . setBitMode (( byte ) 0 , D2xxManager . FT_BITMODE_RESET ); ftDev . setBaudRate ( 9600 ); ftDev . setDataCharacteristics ( D2xxManager . FT_DATA_BITS_8 , D2xxManager . FT_STOP_BITS_1 , D2xxManager . FT_PARITY_NONE ); ftDev . setFlowControl ( D2xxManager . FT_FLOW_NONE , ( byte ) 0x0b , ( byte ) 0x0d ); ftDev . purge (( byte ) ( D2xxManager . FT_PURGE_TX | D2xxManager . FT_PURGE_RX )); ftDev . restartInTask (); readData = new byte [ readLength ]; readDataToText = new char [ readLength ]; mReadThread = new ReadThread ( mHandler ); mReadThread . start (); isReading = true ; } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu ; this adds items to the action bar if it is present . getMenuInflater () . inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here . The action bar will // automatically handle clicks on the Home / Up button , so long // as you specify a parent activity in AndroidManifest . xml . int id = item . getItemId (); // noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } public void SendMessage ( String msg ) { if ( ftDev == null ){ return ; } synchronized ( ftDev ) { if ( ftDev . isOpen () == false ) { Log . e ( \"j2xx\" , \"SendMessage: device not open\" ); return ; } ftDev . setLatencyTimer (( byte ) 16 ); if ( msg != null ) { byte [] OutData = msg . getBytes (); ftDev . write ( OutData , msg . length ()); } } } private class ReadThread extends Thread { Handler mHandler ; ReadThread ( Handler h ){ mHandler = h ; this . setPriority ( Thread . MIN_PRIORITY ); } @Override public void run () { int i ; while ( true == isReading ) { try { Thread . sleep ( 50 ); } catch ( InterruptedException e ) { } synchronized ( ftDev ) { iavailable = ftDev . getQueueStatus (); if ( iavailable > 0 ) { if ( iavailable > readLength ){ iavailable = readLength ; } ftDev . read ( readData , iavailable ); String mData = new String ( readData ); Message msg = mHandler . obtainMessage (); msg . obj = mData ; mHandler . sendMessage ( msg ); } } } } } /** * \u63cf\u753b\u51e6\u7406\u306f Handler\u3067\u304a\u3053\u306a\u3046 */ Handler mHandler = new Handler () { @Override public void handleMessage ( Message msg ) { String mData = ( String ) msg . obj ; mInputValue . setText ( mData ); } }; BroadcastReceiver mUsbReceiver = new BroadcastReceiver () { public void onReceive ( Context context , Intent intent ) { String action = intent . getAction (); if ( UsbManager . ACTION_USB_DEVICE_ATTACHED . equals ( action )) { // never come here ( when attached , go to onNewIntent ) openUsb (); } else if ( UsbManager . ACTION_USB_DEVICE_DETACHED . equals ( action )) { if ( ftDev != null ) { ftDev . close (); isReading = false ; } } } }; }","title":"MainActivity.java"},{"location":"article3-3/#activity_mainxml","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:orientation= \"vertical\" > <TextView android:id= \"@+id/inputValue\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" /> <Button android:id= \"@+id/outputButton\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Button\" android:layout_gravity= \"center_horizontal\" /> </LinearLayout> PC\u3068Android\u7aef\u672b\u3092\u63a5\u7d9a\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u3057\u3001Android\u7aef\u672b\u5074\u306b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u524d\u56de\u3068\u540c\u69d8\u306b\u3001Arduino\u5074\u306f\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u8868\u793a\u3057\u305f\u72b6\u614b\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002 PC\u3068Arduino\u3001Arduino\u304b\u3089Android\u7aef\u672b\u306b\u305d\u308c\u305e\u308c\u30b3\u30fc\u30c9\u3067\u63a5\u7d9a\u3057\u307e\u3059\u3002 \u63a5\u7d9a\u304c\u3067\u304d\u307e\u3057\u305f\u3089\u3001Android\u7aef\u672b\u306e\u30a2\u30d7\u30ea\u4e00\u89a7\u3088\u308a\u3001\u4eca\u56de\u4f5c\u6210\u3057\u305f\u300cUsbHostPrint\u300d\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 \u8d77\u52d5\u3057\u307e\u3057\u305f\u3089\u753b\u9762\u4e0a\u90e8\u306b\u3042\u308a\u307e\u3059\u300cButton\u300d\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 Android\u5074\u306e\u30a2\u30d7\u30ea\u306b\u3066\u521d\u671f\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u300cinit\u300d\u306e\u5f8c\u308d\u306b\u3001\u300c1\u300d\u304c\u300cButton\u300d\u3092\u62bc\u3057\u305f\u56de\u6570\u5206\u51fa\u529b\u3055\u308c\u307e\u3057\u305f\u3002 \u6b21\u306bArduino\u306eInput\u90e8\u5206\u306b\u5024\u3092\u3044\u308c\u3066\u3001\u9001\u4fe1\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002 \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306e\u30a2\u30d7\u30ea\u753b\u9762\u306e\u5de6\u4e0a\u306b\u3001Arduino\u304b\u3089\u9001\u4fe1\u3057\u305f\u6587\u5b57\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002","title":"activity_main.xml"},{"location":"article3-4/","text":"Android\u304b\u3089LED\u5236\u5fa1 \u6700\u5f8c\u306b\u3001\u30dc\u30bf\u30f3\u306b\u3088\u308aLED\u306e\u70b9\u706f\u3001\u6d88\u706f\u3092\u5236\u5fa1\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 USB\u30b7\u30ea\u30a2\u30eb\u30a2\u30c0\u30d7\u30bf\u306f\u5909\u66f4\u305b\u305a\u3001LED\u3092\u70b9\u706f\u3055\u305b\u308b\u56de\u8def\u306e\u8ffd\u52a0\u306b\u306a\u308a\u307e\u3059\u3002 LED\u306f\u30d7\u30e9\u30b9\u30de\u30a4\u30ca\u30b9\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002 13\u756a\u30d4\u30f3\u5074(\u4e0b\u306e\u56f3\u3067\u5de6\u5074)\u306b\u3001LED\u306e\u8db3\u306e\u9577\u3044\u65b9\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002 \u6b21\u306b\u30b9\u30b1\u30c3\u30c1\u3092\u5165\u529b\u3057\u307e\u3059\u3002 \u5148\u307b\u3069\u306e\u30b9\u30b1\u30c3\u30c1\u306b\u9752\u3067\u8a18\u8ff0\u3057\u305f\u7b87\u6240\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 Arduino\u5074\u306e\u8a2d\u5b9a Arduino UNO \u56de\u8def (Arduino Uno) \u30b9\u30b1\u30c3\u30c1 (Arduino Uno) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 #include <SoftwareSerial.h> //android\u3067\u4f7f\u7528\u3059\u308b\u30d4\u30f3\u3092\u6307\u5b9a SoftwareSerial android ( 2 , 3 ); int led = 13 ; char get_serial = 0 ; void setup (){ //android\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 9600 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 19200 ); pinMode ( led , OUTPUT ); // led\u30d4\u30f3\u3092\u51fa\u529b\u7528\u306b\u8a2d\u5b9a Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ get_serial = android . read (); Serial . write ( get_serial ); if ( get_serial == '1' ){ digitalWrite ( led , HIGH ); //led\u70b9\u706f } else { digitalWrite ( led , LOW ); //led\u6d88\u706f } } if ( Serial . available ()){ android . write ( Serial . read ()); } } ``` ### Arduino Mega #### \u56de\u8def\u3000(Arduino Mega) ! []( usb4 - 02. jpg ) #### \u30b9\u30b1\u30c3\u30c1\u3000(Arduino Mega) include int led = 13; char get_serial = 0; void setup(){ //android\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android.begin(9600); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial.begin(19200); pinMode(led,OUTPUT); // led\u30d4\u30f3\u3092\u51fa\u529b\u7528\u306b\u8a2d\u5b9a Serial.write(\"init\"); } void loop(){ if(Serial1.available()){ get_serial = Serial1.read(); 1 2 3 4 5 6 7 Serial . write ( get_serial ); if ( get_serial == '1' ) { digitalWrite ( led , HIGH ); // led\u70b9\u706f } else { digitalWrite ( led , LOW ); // led\u6d88\u706f } } if(Serial.available()){ android.write(Serial.read()); } } 1 2 3 4 5 ## Android\u5074\u306e\u8a2d\u5b9a \u4eca\u56de\u306f\u300c MainActivity . java \u300d\u3068\u300c main_activity . xml \u300d\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002 #### MainActivity . java package gclue.com.myusbhost; import android.content.BroadcastReceiver; import android.content.Context; import android.content.Intent; import android.hardware.usb.UsbManager; import android.os.Bundle; import android.os.Handler; import android.os.Message; import android.support.v7.app.ActionBarActivity; import android.util.Log; import android.view.Menu; import android.view.MenuItem; import android.view.View; import android.widget.Button; import android.widget.TextView; import android.widget.Toast; import com.ftdi.j2xx.D2xxManager; import com.ftdi.j2xx.FT_Device; public class MainActivity extends ActionBarActivity {private FT_Device ftDev = null ; private static Context mContext ; private D2xxManager ftdid2xx ; private static final String TAG = \"USB\" ; private boolean isReading = false ; private ReadThread mReadThread ; private int iavailable = 0 ; private static final int readLength = 512 ; byte [] readData ; char [] readDataToText ; private TextView mInputValue ; private Button mLedOnButton ; // ON\u30dc\u30bf\u30f3 private Button mLedOffButton ; // OFF\u30dc\u30bf\u30f3 @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); try { ftdid2xx = D2xxManager . getInstance ( this ); } catch ( D2xxManager . D2xxException ex ) { Log . e ( TAG , ex . toString ()); } mContext = this . getBaseContext (); openUsb (); mInputValue = ( TextView ) findViewById ( R . id . inputValue ); // \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089USB\u306b\u5024\u3092\u9001\u308a\u8fbc\u3080 ( LED ON ) mLedOnButton = ( Button ) findViewById ( R . id . ledOnButton ); mLedOnButton . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View v ) { SendMessage ( \"1\" ); } } ); // \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089USB\u306b\u5024\u3092\u9001\u308a\u8fbc\u3080 ( LED OFF ) mLedOffButton = ( Button ) findViewById ( R . id . ledOffButton ); mLedOffButton . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View v ) { SendMessage ( \"0\" ); } } ); } public void openUsb () { int devCount = 0 ; devCount = ftdid2xx . createDeviceInfoList ( this ); if ( devCount <= 0 ) { Toast . makeText ( this , \"\u30c7\u30d0\u30a4\u30b9\u304c\u767a\u898b\u3067\u304d\u307e\u305b\u3093\u3002\" + Integer . toString ( devCount ), Toast . LENGTH_LONG ). show (); Log . i ( TAG , \"\u30c7\u30d0\u30a4\u30b9\u304c\u767a\u898b\u3067\u304d\u307e\u3057\u305b\u3093\u3067\u3057\u305f\u3002\" ); return ; } else { Toast . makeText ( this , \"\" + devCount + \"\u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\" , Toast . LENGTH_LONG ). show (); Log . i ( TAG , \"\" + devCount + \"\u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\" ); } if ( null == ftDev ) { ftDev = ftdid2xx . openByIndex ( mContext , 0 ); } else { synchronized ( ftDev ) { ftDev = ftdid2xx . openByIndex ( mContext , 0 ); } } // ftDev . setBitMode (( byte ) 0 , D2xxManager . FT_BITMODE_RESET ); ftDev . setBaudRate ( 9600 ); ftDev . setDataCharacteristics ( D2xxManager . FT_DATA_BITS_8 , D2xxManager . FT_STOP_BITS_1 , D2xxManager . FT_PARITY_NONE ); ftDev . setFlowControl ( D2xxManager . FT_FLOW_NONE , ( byte ) 0x0b , ( byte ) 0x0d ); ftDev . purge (( byte ) ( D2xxManager . FT_PURGE_TX | D2xxManager . FT_PURGE_RX )); ftDev . restartInTask (); readData = new byte [ readLength ] ; readDataToText = new char [ readLength ] ; mReadThread = new ReadThread ( mHandler ); mReadThread . start (); isReading = true ; } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu ; this adds items to the action bar if it is present . getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here . The action bar will // automatically handle clicks on the Home / Up button , so long // as you specify a parent activity in AndroidManifest . xml . int id = item . getItemId (); // noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } public void SendMessage ( String msg ) { if ( ftDev == null ) { return ; } synchronized ( ftDev ) { if ( ftDev . isOpen () == false ) { Log . e ( \"j2xx\" , \"SendMessage: device not open\" ); return ; } ftDev . setLatencyTimer (( byte ) 16 ); if ( msg != null ) { byte [] OutData = msg . getBytes (); ftDev . write ( OutData , msg . length ()); } } } private class ReadThread extends Thread { Handler mHandler ; ReadThread ( Handler h ) { mHandler = h ; this . setPriority ( Thread . MIN_PRIORITY ); } @Override public void run () { int i ; while ( true == isReading ) { try { Thread . sleep ( 50 ); } catch ( InterruptedException e ) { } synchronized ( ftDev ) { iavailable = ftDev . getQueueStatus (); if ( iavailable > 0 ) { if ( iavailable > readLength ) { iavailable = readLength ; } ftDev . read ( readData , iavailable ); String mData = new String ( readData ); Message msg = mHandler . obtainMessage (); msg . obj = mData ; mHandler . sendMessage ( msg ); } } } } } /** * \u63cf\u753b\u51e6\u7406\u306fHandler\u3067\u304a\u3053\u306a\u3046 */ Handler mHandler = new Handler () { @Override public void handleMessage ( Message msg ) { String mData = ( String ) msg . obj ; mInputValue . setText ( mData ); } } ; BroadcastReceiver mUsbReceiver = new BroadcastReceiver () { public void onReceive ( Context context , Intent intent ) { String action = intent . getAction (); if ( UsbManager . ACTION_USB_DEVICE_ATTACHED . equals ( action )) { // never come here ( when attached , go to onNewIntent ) openUsb (); } else if ( UsbManager . ACTION_USB_DEVICE_DETACHED . equals ( action )) { if ( ftDev != null ) { ftDev . close (); isReading = false ; } } } } ; } 1 #### activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 < TextView android : id = \"@+id/inputValue\" android : layout_width = \"fill_parent\" android : layout_height = \"wrap_content\" /> < Button android : id = \"@+id/ledOnButton\" android : layout_width = \"wrap_content\" android : layout_height = \"wrap_content\" android : text = \"ON\" android : layout_gravity = \"center_horizontal\" /> < Button android : id = \"@+id/ledOffButton\" android : layout_width = \"wrap_content\" android : layout_height = \"wrap_content\" android : text = \"OFF\" android : layout_gravity = \"center_horizontal\" /> ``` PC\u3068Android\u7aef\u672b\u3092\u63a5\u7d9a\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u3057\u3001Android\u7aef\u672b\u5074\u306b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u4eca\u56de\u3082Arduino\u5074\u306f\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u8868\u793a\u3057\u305f\u72b6\u614b\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002 Android\u5074\u306e\u300cON\u300d\u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 LED\u304c\u70b9\u706f\u3057\u307e\u3057\u305f\u3002 OFF\u3092\u62bc\u3057\u3066\u6d88\u3048\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002","title":"Android\u304b\u3089LED\u5236\u5fa1"},{"location":"article3-4/#androidled","text":"\u6700\u5f8c\u306b\u3001\u30dc\u30bf\u30f3\u306b\u3088\u308aLED\u306e\u70b9\u706f\u3001\u6d88\u706f\u3092\u5236\u5fa1\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 USB\u30b7\u30ea\u30a2\u30eb\u30a2\u30c0\u30d7\u30bf\u306f\u5909\u66f4\u305b\u305a\u3001LED\u3092\u70b9\u706f\u3055\u305b\u308b\u56de\u8def\u306e\u8ffd\u52a0\u306b\u306a\u308a\u307e\u3059\u3002 LED\u306f\u30d7\u30e9\u30b9\u30de\u30a4\u30ca\u30b9\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002 13\u756a\u30d4\u30f3\u5074(\u4e0b\u306e\u56f3\u3067\u5de6\u5074)\u306b\u3001LED\u306e\u8db3\u306e\u9577\u3044\u65b9\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002 \u6b21\u306b\u30b9\u30b1\u30c3\u30c1\u3092\u5165\u529b\u3057\u307e\u3059\u3002 \u5148\u307b\u3069\u306e\u30b9\u30b1\u30c3\u30c1\u306b\u9752\u3067\u8a18\u8ff0\u3057\u305f\u7b87\u6240\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002","title":"Android\u304b\u3089LED\u5236\u5fa1"},{"location":"article3-4/#arduino","text":"","title":"Arduino\u5074\u306e\u8a2d\u5b9a"},{"location":"article3-4/#arduino-uno","text":"","title":"Arduino UNO"},{"location":"article3-4/#arduino-uno_1","text":"","title":"\u56de\u8def (Arduino Uno)"},{"location":"article3-4/#arduino-uno_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 #include <SoftwareSerial.h> //android\u3067\u4f7f\u7528\u3059\u308b\u30d4\u30f3\u3092\u6307\u5b9a SoftwareSerial android ( 2 , 3 ); int led = 13 ; char get_serial = 0 ; void setup (){ //android\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android . begin ( 9600 ); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial . begin ( 19200 ); pinMode ( led , OUTPUT ); // led\u30d4\u30f3\u3092\u51fa\u529b\u7528\u306b\u8a2d\u5b9a Serial . write ( \"init\" ); } void loop (){ if ( android . available ()){ get_serial = android . read (); Serial . write ( get_serial ); if ( get_serial == '1' ){ digitalWrite ( led , HIGH ); //led\u70b9\u706f } else { digitalWrite ( led , LOW ); //led\u6d88\u706f } } if ( Serial . available ()){ android . write ( Serial . read ()); } } ``` ### Arduino Mega #### \u56de\u8def\u3000(Arduino Mega) ! []( usb4 - 02. jpg ) #### \u30b9\u30b1\u30c3\u30c1\u3000(Arduino Mega)","title":"\u30b9\u30b1\u30c3\u30c1 (Arduino Uno)"},{"location":"article3-4/#include","text":"int led = 13; char get_serial = 0; void setup(){ //android\u7528\u306e\u30b7\u30ea\u30a2\u30eb\u306e\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a android.begin(9600); // arduino\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u7528 Serial.begin(19200); pinMode(led,OUTPUT); // led\u30d4\u30f3\u3092\u51fa\u529b\u7528\u306b\u8a2d\u5b9a Serial.write(\"init\"); } void loop(){ if(Serial1.available()){ get_serial = Serial1.read(); 1 2 3 4 5 6 7 Serial . write ( get_serial ); if ( get_serial == '1' ) { digitalWrite ( led , HIGH ); // led\u70b9\u706f } else { digitalWrite ( led , LOW ); // led\u6d88\u706f } } if(Serial.available()){ android.write(Serial.read()); } } 1 2 3 4 5 ## Android\u5074\u306e\u8a2d\u5b9a \u4eca\u56de\u306f\u300c MainActivity . java \u300d\u3068\u300c main_activity . xml \u300d\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002 #### MainActivity . java package gclue.com.myusbhost; import android.content.BroadcastReceiver; import android.content.Context; import android.content.Intent; import android.hardware.usb.UsbManager; import android.os.Bundle; import android.os.Handler; import android.os.Message; import android.support.v7.app.ActionBarActivity; import android.util.Log; import android.view.Menu; import android.view.MenuItem; import android.view.View; import android.widget.Button; import android.widget.TextView; import android.widget.Toast; import com.ftdi.j2xx.D2xxManager; import com.ftdi.j2xx.FT_Device; public class MainActivity extends ActionBarActivity {private FT_Device ftDev = null ; private static Context mContext ; private D2xxManager ftdid2xx ; private static final String TAG = \"USB\" ; private boolean isReading = false ; private ReadThread mReadThread ; private int iavailable = 0 ; private static final int readLength = 512 ; byte [] readData ; char [] readDataToText ; private TextView mInputValue ; private Button mLedOnButton ; // ON\u30dc\u30bf\u30f3 private Button mLedOffButton ; // OFF\u30dc\u30bf\u30f3 @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); try { ftdid2xx = D2xxManager . getInstance ( this ); } catch ( D2xxManager . D2xxException ex ) { Log . e ( TAG , ex . toString ()); } mContext = this . getBaseContext (); openUsb (); mInputValue = ( TextView ) findViewById ( R . id . inputValue ); // \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089USB\u306b\u5024\u3092\u9001\u308a\u8fbc\u3080 ( LED ON ) mLedOnButton = ( Button ) findViewById ( R . id . ledOnButton ); mLedOnButton . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View v ) { SendMessage ( \"1\" ); } } ); // \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089USB\u306b\u5024\u3092\u9001\u308a\u8fbc\u3080 ( LED OFF ) mLedOffButton = ( Button ) findViewById ( R . id . ledOffButton ); mLedOffButton . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View v ) { SendMessage ( \"0\" ); } } ); } public void openUsb () { int devCount = 0 ; devCount = ftdid2xx . createDeviceInfoList ( this ); if ( devCount <= 0 ) { Toast . makeText ( this , \"\u30c7\u30d0\u30a4\u30b9\u304c\u767a\u898b\u3067\u304d\u307e\u305b\u3093\u3002\" + Integer . toString ( devCount ), Toast . LENGTH_LONG ). show (); Log . i ( TAG , \"\u30c7\u30d0\u30a4\u30b9\u304c\u767a\u898b\u3067\u304d\u307e\u3057\u305b\u3093\u3067\u3057\u305f\u3002\" ); return ; } else { Toast . makeText ( this , \"\" + devCount + \"\u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\" , Toast . LENGTH_LONG ). show (); Log . i ( TAG , \"\" + devCount + \"\u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\" ); } if ( null == ftDev ) { ftDev = ftdid2xx . openByIndex ( mContext , 0 ); } else { synchronized ( ftDev ) { ftDev = ftdid2xx . openByIndex ( mContext , 0 ); } } // ftDev . setBitMode (( byte ) 0 , D2xxManager . FT_BITMODE_RESET ); ftDev . setBaudRate ( 9600 ); ftDev . setDataCharacteristics ( D2xxManager . FT_DATA_BITS_8 , D2xxManager . FT_STOP_BITS_1 , D2xxManager . FT_PARITY_NONE ); ftDev . setFlowControl ( D2xxManager . FT_FLOW_NONE , ( byte ) 0x0b , ( byte ) 0x0d ); ftDev . purge (( byte ) ( D2xxManager . FT_PURGE_TX | D2xxManager . FT_PURGE_RX )); ftDev . restartInTask (); readData = new byte [ readLength ] ; readDataToText = new char [ readLength ] ; mReadThread = new ReadThread ( mHandler ); mReadThread . start (); isReading = true ; } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu ; this adds items to the action bar if it is present . getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here . The action bar will // automatically handle clicks on the Home / Up button , so long // as you specify a parent activity in AndroidManifest . xml . int id = item . getItemId (); // noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } public void SendMessage ( String msg ) { if ( ftDev == null ) { return ; } synchronized ( ftDev ) { if ( ftDev . isOpen () == false ) { Log . e ( \"j2xx\" , \"SendMessage: device not open\" ); return ; } ftDev . setLatencyTimer (( byte ) 16 ); if ( msg != null ) { byte [] OutData = msg . getBytes (); ftDev . write ( OutData , msg . length ()); } } } private class ReadThread extends Thread { Handler mHandler ; ReadThread ( Handler h ) { mHandler = h ; this . setPriority ( Thread . MIN_PRIORITY ); } @Override public void run () { int i ; while ( true == isReading ) { try { Thread . sleep ( 50 ); } catch ( InterruptedException e ) { } synchronized ( ftDev ) { iavailable = ftDev . getQueueStatus (); if ( iavailable > 0 ) { if ( iavailable > readLength ) { iavailable = readLength ; } ftDev . read ( readData , iavailable ); String mData = new String ( readData ); Message msg = mHandler . obtainMessage (); msg . obj = mData ; mHandler . sendMessage ( msg ); } } } } } /** * \u63cf\u753b\u51e6\u7406\u306fHandler\u3067\u304a\u3053\u306a\u3046 */ Handler mHandler = new Handler () { @Override public void handleMessage ( Message msg ) { String mData = ( String ) msg . obj ; mInputValue . setText ( mData ); } } ; BroadcastReceiver mUsbReceiver = new BroadcastReceiver () { public void onReceive ( Context context , Intent intent ) { String action = intent . getAction (); if ( UsbManager . ACTION_USB_DEVICE_ATTACHED . equals ( action )) { // never come here ( when attached , go to onNewIntent ) openUsb (); } else if ( UsbManager . ACTION_USB_DEVICE_DETACHED . equals ( action )) { if ( ftDev != null ) { ftDev . close (); isReading = false ; } } } } ; } 1 #### activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 < TextView android : id = \"@+id/inputValue\" android : layout_width = \"fill_parent\" android : layout_height = \"wrap_content\" /> < Button android : id = \"@+id/ledOnButton\" android : layout_width = \"wrap_content\" android : layout_height = \"wrap_content\" android : text = \"ON\" android : layout_gravity = \"center_horizontal\" /> < Button android : id = \"@+id/ledOffButton\" android : layout_width = \"wrap_content\" android : layout_height = \"wrap_content\" android : text = \"OFF\" android : layout_gravity = \"center_horizontal\" /> ``` PC\u3068Android\u7aef\u672b\u3092\u63a5\u7d9a\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u3057\u3001Android\u7aef\u672b\u5074\u306b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u4eca\u56de\u3082Arduino\u5074\u306f\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u8868\u793a\u3057\u305f\u72b6\u614b\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002 Android\u5074\u306e\u300cON\u300d\u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 LED\u304c\u70b9\u706f\u3057\u307e\u3057\u305f\u3002 OFF\u3092\u62bc\u3057\u3066\u6d88\u3048\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002","title":"include "},{"location":"camera01/","text":"Camera\u7528\u306e\u571f\u53f0\u306e\u4f5c\u6210 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.Window ; import android.view.WindowManager ; public class MainActivity extends Activity { /** LOGCAT\u7528\u306eTAG. */ private static final String TAG = \"CAMERA_ACTIVITY\" ; /** Camera\u7528\u306eSurfaceView. */ private static CameraView mCameraView ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); getWindow (). addFlags ( WindowManager . LayoutParams . FLAG_FULLSCREEN ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); mCameraView = new CameraView ( this ); setContentView ( mCameraView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } Title\u30d0\u30fc\u3092\u5ec3\u6b62\u3057\u3001\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u3059\u308b 1 2 getWindow().addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN); requestWindowFeature(Window.FEATURE_NO_TITLE); CameraView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 package utsunomiya.gclue.com.camerasample ; import android.content.Context ; import android.util.Log ; import android.view.SurfaceHolder ; import android.view.SurfaceView ; class CameraView extends SurfaceView implements SurfaceHolder . Callback { /** LOGCAT\u7528\u306eTAG. */ private static final String TAG = \"CAMERA_VIEW\" ; CameraView ( Context context ) { super ( context ); getHolder (). addCallback ( this ); } @Override protected void onLayout ( boolean changed , int l , int t , int r , int b ) { Log . d ( TAG , \"onLayout l:\" + l + \"t:\" + t + \"r:\" + r + \"b:\" + b ); } @Override public void surfaceCreated ( SurfaceHolder holder ) { Log . d ( TAG , \"surfaceCreated\" ); } @Override public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { Log . d ( TAG , \"surfaceChanged format:\" + format + \"width:\" + width + \"height:\" + height ); } @Override public void surfaceDestroyed ( SurfaceHolder holder ) { Log . d ( TAG , \"surfaceDestroyed\" ); } } SurfaceHolder.Callback\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u3067\u3001SurfaceView\u304c\u751f\u6210\u3055\u308c\u305f\u6642\u3001\u7834\u68c4\u3055\u308c\u305f\u6642\u3001\u72b6\u614b\u304c\u304b\u308f\u3063\u305f\u6642\u306b\u51e6\u7406\u3092\u8ffd\u52a0\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u30e1\u30bd\u30c3\u30c9\u540d \u6982\u8981 surfaceChanged() SurfaceView\u306b\u5909\u5316\u304c\u3042\u3063\u305f\u969b\u306b\u547c\u3070\u308c\u308b surfaceCreated() SurfaceView\u304c\u751f\u6210\u3055\u308c\u305f\u969b\u306b\u547c\u3070\u308c\u308b surfaceDestroyed() SurfaceView\u304c\u7834\u68c4\u3055\u308c\u305f\u969b\u306b\u547c\u3070\u308c\u308b","title":"Camera\u7528\u306e\u571f\u53f0\u306e\u4f5c\u6210"},{"location":"camera01/#camera","text":"","title":"Camera\u7528\u306e\u571f\u53f0\u306e\u4f5c\u6210"},{"location":"camera01/#mainactivityjava","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.Window ; import android.view.WindowManager ; public class MainActivity extends Activity { /** LOGCAT\u7528\u306eTAG. */ private static final String TAG = \"CAMERA_ACTIVITY\" ; /** Camera\u7528\u306eSurfaceView. */ private static CameraView mCameraView ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); getWindow (). addFlags ( WindowManager . LayoutParams . FLAG_FULLSCREEN ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); mCameraView = new CameraView ( this ); setContentView ( mCameraView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } Title\u30d0\u30fc\u3092\u5ec3\u6b62\u3057\u3001\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u3059\u308b 1 2 getWindow().addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN); requestWindowFeature(Window.FEATURE_NO_TITLE);","title":"MainActivity.java"},{"location":"camera01/#cameraviewjava","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 package utsunomiya.gclue.com.camerasample ; import android.content.Context ; import android.util.Log ; import android.view.SurfaceHolder ; import android.view.SurfaceView ; class CameraView extends SurfaceView implements SurfaceHolder . Callback { /** LOGCAT\u7528\u306eTAG. */ private static final String TAG = \"CAMERA_VIEW\" ; CameraView ( Context context ) { super ( context ); getHolder (). addCallback ( this ); } @Override protected void onLayout ( boolean changed , int l , int t , int r , int b ) { Log . d ( TAG , \"onLayout l:\" + l + \"t:\" + t + \"r:\" + r + \"b:\" + b ); } @Override public void surfaceCreated ( SurfaceHolder holder ) { Log . d ( TAG , \"surfaceCreated\" ); } @Override public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { Log . d ( TAG , \"surfaceChanged format:\" + format + \"width:\" + width + \"height:\" + height ); } @Override public void surfaceDestroyed ( SurfaceHolder holder ) { Log . d ( TAG , \"surfaceDestroyed\" ); } } SurfaceHolder.Callback\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u3067\u3001SurfaceView\u304c\u751f\u6210\u3055\u308c\u305f\u6642\u3001\u7834\u68c4\u3055\u308c\u305f\u6642\u3001\u72b6\u614b\u304c\u304b\u308f\u3063\u305f\u6642\u306b\u51e6\u7406\u3092\u8ffd\u52a0\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u30e1\u30bd\u30c3\u30c9\u540d \u6982\u8981 surfaceChanged() SurfaceView\u306b\u5909\u5316\u304c\u3042\u3063\u305f\u969b\u306b\u547c\u3070\u308c\u308b surfaceCreated() SurfaceView\u304c\u751f\u6210\u3055\u308c\u305f\u969b\u306b\u547c\u3070\u308c\u308b surfaceDestroyed() SurfaceView\u304c\u7834\u68c4\u3055\u308c\u305f\u969b\u306b\u547c\u3070\u308c\u308b","title":"CameraView.java"},{"location":"camera02/","text":"Camera\u306e\u7d44\u307f\u8fbc\u307f AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.camerasample\" > <uses-permission android:name= \"android.permission.CAMERA\" /> <uses-feature android:name= \"android.hardware.camera\" /> <uses-feature android:name= \"android.hardware.camera.autofocus\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:screenOrientation= \"landscape\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> Uses-permission\u3068Uses-feature\u306e\u9805\u76ee\u8ffd\u52a0 1 2 3 <uses-permission android:name=\"android.permission.CAMERA\" /> <uses-feature android:name=\"android.hardware.camera\" /> <uses-feature android:name=\"android.hardware.camera.autofocus\" /> screenOrientation\u306e\u9805\u76ee\u8ffd\u52a0 1 2 3 4 <activity android:name=\".MainActivity\" android:screenOrientation=\"landscape\" android:label=\"@string/app_name\" > MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.Window ; import android.view.WindowManager ; public class MainActivity extends Activity { /** LOGCAT\u7528\u306eTAG. */ private static final String TAG = \"CAMERA_ACTIVITY\" ; /** Camera\u7528\u306eSurfaceView. */ private static CameraView mCameraView ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); getWindow (). addFlags ( WindowManager . LayoutParams . FLAG_FULLSCREEN ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); mCameraView = new CameraView ( this ); setContentView ( mCameraView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } Title\u30d0\u30fc\u3092\u5ec3\u6b62\u3057\u3001\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u3059\u308b 1 2 getWindow().addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN); requestWindowFeature(Window.FEATURE_NO_TITLE); CameraView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 package utsunomiya.gclue.com.camerasample ; import android.content.Context ; import android.hardware.Camera ; import android.util.Log ; import android.view.SurfaceHolder ; import android.view.SurfaceView ; class CameraView extends SurfaceView implements SurfaceHolder . Callback { /** LOGCAT\u7528\u306eTAG. */ private static final String TAG = \"CAMERA_VIEW\" ; /** Camera */ private Camera mCamera ; CameraView ( Context context ) { super ( context ); getHolder (). addCallback ( this ); } @Override protected void onLayout ( boolean changed , int l , int t , int r , int b ) { Log . d ( TAG , \"onLayout l:\" + l + \"t:\" + t + \"r:\" + r + \"b:\" + b ); } @Override public void surfaceCreated ( SurfaceHolder holder ) { Log . d ( TAG , \"surfaceCreated\" ); mCamera = Camera . open (); try { mCamera . setPreviewDisplay ( holder ); } catch ( Exception e ){ } } @Override public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { Log . d ( TAG , \"surfaceChanged format:\" + format + \"width:\" + width + \"height:\" + height ); Camera . Parameters mParams = mCamera . getParameters (); mCamera . setParameters ( mParams ); mCamera . startPreview (); } @Override public void surfaceDestroyed ( SurfaceHolder holder ) { Log . d ( TAG , \"surfaceDestroyed\" ); } } Camera\u3092\u30aa\u30fc\u30d7\u30f3 1 2 3 4 5 6 7 8 9 public void surfaceCreated ( SurfaceHolder holder ) { Log . d ( TAG , \"surfaceCreated\" ); mCamera = Camera . open (); try { mCamera . setPreviewDisplay ( holder ); } catch ( Exception e ) { } } Preview\u3092\u8868\u793a 1 2 3 4 5 6 7 public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { Log.d(TAG, \"surfaceChanged format : \"+format+\" width : \"+width+\" height : \" + height ); Camera.Parameters mParams = mCamera.getParameters() ; mCamera.setParameters(mParams) ; mCamera.startPreview() ; }","title":"Camera\u306e\u7d44\u307f\u8fbc\u307f"},{"location":"camera02/#camera","text":"","title":"Camera\u306e\u7d44\u307f\u8fbc\u307f"},{"location":"camera02/#androidmanifestxml","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.camerasample\" > <uses-permission android:name= \"android.permission.CAMERA\" /> <uses-feature android:name= \"android.hardware.camera\" /> <uses-feature android:name= \"android.hardware.camera.autofocus\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:screenOrientation= \"landscape\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> Uses-permission\u3068Uses-feature\u306e\u9805\u76ee\u8ffd\u52a0 1 2 3 <uses-permission android:name=\"android.permission.CAMERA\" /> <uses-feature android:name=\"android.hardware.camera\" /> <uses-feature android:name=\"android.hardware.camera.autofocus\" /> screenOrientation\u306e\u9805\u76ee\u8ffd\u52a0 1 2 3 4 <activity android:name=\".MainActivity\" android:screenOrientation=\"landscape\" android:label=\"@string/app_name\" >","title":"AndroidManifest.xml"},{"location":"camera02/#mainactivityjava","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.Window ; import android.view.WindowManager ; public class MainActivity extends Activity { /** LOGCAT\u7528\u306eTAG. */ private static final String TAG = \"CAMERA_ACTIVITY\" ; /** Camera\u7528\u306eSurfaceView. */ private static CameraView mCameraView ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); getWindow (). addFlags ( WindowManager . LayoutParams . FLAG_FULLSCREEN ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); mCameraView = new CameraView ( this ); setContentView ( mCameraView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } Title\u30d0\u30fc\u3092\u5ec3\u6b62\u3057\u3001\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u3059\u308b 1 2 getWindow().addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN); requestWindowFeature(Window.FEATURE_NO_TITLE);","title":"MainActivity.java"},{"location":"camera02/#cameraviewjava","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 package utsunomiya.gclue.com.camerasample ; import android.content.Context ; import android.hardware.Camera ; import android.util.Log ; import android.view.SurfaceHolder ; import android.view.SurfaceView ; class CameraView extends SurfaceView implements SurfaceHolder . Callback { /** LOGCAT\u7528\u306eTAG. */ private static final String TAG = \"CAMERA_VIEW\" ; /** Camera */ private Camera mCamera ; CameraView ( Context context ) { super ( context ); getHolder (). addCallback ( this ); } @Override protected void onLayout ( boolean changed , int l , int t , int r , int b ) { Log . d ( TAG , \"onLayout l:\" + l + \"t:\" + t + \"r:\" + r + \"b:\" + b ); } @Override public void surfaceCreated ( SurfaceHolder holder ) { Log . d ( TAG , \"surfaceCreated\" ); mCamera = Camera . open (); try { mCamera . setPreviewDisplay ( holder ); } catch ( Exception e ){ } } @Override public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { Log . d ( TAG , \"surfaceChanged format:\" + format + \"width:\" + width + \"height:\" + height ); Camera . Parameters mParams = mCamera . getParameters (); mCamera . setParameters ( mParams ); mCamera . startPreview (); } @Override public void surfaceDestroyed ( SurfaceHolder holder ) { Log . d ( TAG , \"surfaceDestroyed\" ); } } Camera\u3092\u30aa\u30fc\u30d7\u30f3 1 2 3 4 5 6 7 8 9 public void surfaceCreated ( SurfaceHolder holder ) { Log . d ( TAG , \"surfaceCreated\" ); mCamera = Camera . open (); try { mCamera . setPreviewDisplay ( holder ); } catch ( Exception e ) { } } Preview\u3092\u8868\u793a 1 2 3 4 5 6 7 public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { Log.d(TAG, \"surfaceChanged format : \"+format+\" width : \"+width+\" height : \" + height ); Camera.Parameters mParams = mCamera.getParameters() ; mCamera.setParameters(mParams) ; mCamera.startPreview() ; }","title":"CameraView.java"},{"location":"camera03/","text":"Camera\u3078\u306e\u30aa\u30fc\u30d0\u30fc\u30ec\u30a4 Camera\u306bView\u3092Overlay\u3057\u3066\u307f\u307e\u3059\u3002 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.ViewGroup ; import android.view.Window ; import android.view.WindowManager ; public class MainActivity extends Activity { /** LOGCAT\u7528\u306eTAG. */ private static final String TAG = \"CAMERA_ACTIVITY\" ; /** Camera\u7528\u306eSurfaceView. */ private static CameraView mCameraView ; /** Overlay\u3059\u308bView. */ private static MyView mView ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); getWindow (). addFlags ( WindowManager . LayoutParams . FLAG_FULLSCREEN ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); mCameraView = new CameraView ( this ); setContentView ( mCameraView ); mView = new MyView ( this ); addContentView ( mView , new ViewGroup . LayoutParams ( ViewGroup . LayoutParams . WRAP_CONTENT , ViewGroup . LayoutParams . WRAP_CONTENT )); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 package utsunomiya.gclue.com.camerasample ; /** * Created by sasakiakira on 15/10/30. */ import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Paint ; import android.view.MotionEvent ; import android.view.View ; class MyView extends View { private int x ; private int y ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf * * @param context */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406 */ protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); // \u9577\u65b9\u5f62\u3092\u63cf\u753b. canvas . drawRect ( x , y , x + 100 , y + 100 , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8 */ public boolean onTouchEvent ( MotionEvent event ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); return true ; } } \u52a0\u901f\u5ea6\u306e\u5024\u3092Overlay MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 package utsunomiya.gclue.com.camerasample ; /** * Created by sasakiakira on 15/10/30. */ import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Paint ; import android.view.MotionEvent ; import android.view.View ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import java.util.List ; class MyView extends View implements SensorEventListener { /** \u30bf\u30c3\u30c1\u3057\u305fX\u5ea7\u6a19. */ private int x ; /** \u30bf\u30c3\u30c1\u3057\u305fY\u5ea7\u6a19. */ private int y ; /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SNESOR\" ; /** \u52a0\u901f\u5ea6X. */ private Float acceleroX ; /** \u52a0\u901f\u5ea6Y. */ private Float acceleroY ; /** \u52a0\u901f\u5ea6Z. */ private Float acceleroZ ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // SensorManager mSensorManager = ( SensorManager ) context . getSystemService ( Context . SENSOR_SERVICE ); // \u52a0\u901f\u5ea6\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > mSensors = mSensorManager . getSensorList ( Sensor . TYPE_ACCELEROMETER ); if ( mSensors . size () > 0 ) { Sensor sensor = mSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } /** * \u63cf\u753b\u51e6\u7406. */ protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); mPaint . setTextSize ( 50 ); // \u9577\u65b9\u5f62\u3092\u63cf\u753b. canvas . drawRect ( x , y , x + 100 , y + 100 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"acceleroX:\" + acceleroX , 150 , 50 , mPaint ); canvas . drawText ( \"acceleroY:\" + acceleroY , 150 , 110 , mPaint ); canvas . drawText ( \"acceleroZ:\" + acceleroZ , 150 , 170 , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ public boolean onTouchEvent ( MotionEvent event ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97. x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); return true ; } @Override public void onSensorChanged ( SensorEvent event ) { if ( event . sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { acceleroX = event . values [ 0 ] ; acceleroY = event . values [ 1 ] ; acceleroZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } } 9\u8ef8\u3092\u8868\u793a\u3059\u308b MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 package utsunomiya.gclue.com.camerasample ; /** * Created by sasakiakira on 15/10/30. */ import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Paint ; import android.view.MotionEvent ; import android.view.View ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import java.util.List ; class MyView extends View implements SensorEventListener { /** \u30bf\u30c3\u30c1\u3057\u305fX\u5ea7\u6a19. */ private int x ; /** \u30bf\u30c3\u30c1\u3057\u305fY\u5ea7\u6a19. */ private int y ; /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SNESOR\" ; /** \u52a0\u901f\u5ea6X. */ private Float acceleroX ; /** \u52a0\u901f\u5ea6Y. */ private Float acceleroY ; /** \u52a0\u901f\u5ea6Z. */ private Float acceleroZ ; /** \u30b8\u30e3\u30a4\u30edX. */ private Float gyroX ; /** \u30b8\u30e3\u30a4\u30edY. */ private Float gyroY ; /** \u30b8\u30e3\u30a4\u30edZ. */ private Float gyroZ ; /** \u52a0\u901f\u5ea6X. */ private Float vectX ; /** \u52a0\u901f\u5ea6Y. */ private Float vectY ; /** \u52a0\u901f\u5ea6Z. */ private Float vectZ ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // SensorManager mSensorManager = ( SensorManager ) context . getSystemService ( Context . SENSOR_SERVICE ); // \u52a0\u901f\u5ea6\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > mSensors = mSensorManager . getSensorList ( Sensor . TYPE_ALL ); for ( int i = 0 ; i < mSensors . size (); i ++ ) { Sensor sensor = mSensors . get ( i ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } /** * \u63cf\u753b\u51e6\u7406. */ protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); mPaint . setTextSize ( 50 ); // \u9577\u65b9\u5f62\u3092\u63cf\u753b. canvas . drawRect ( x , y , x + 100 , y + 100 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"acceleroX:\" + acceleroX , 150 , 50 , mPaint ); canvas . drawText ( \"acceleroY:\" + acceleroY , 150 , 110 , mPaint ); canvas . drawText ( \"acceleroZ:\" + acceleroZ , 150 , 170 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"gyroX:\" + gyroX , 150 , 250 , mPaint ); canvas . drawText ( \"gyroY:\" + gyroY , 150 , 310 , mPaint ); canvas . drawText ( \"gyroZ:\" + gyroZ , 150 , 370 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"vectX:\" + vectX , 150 , 450 , mPaint ); canvas . drawText ( \"vectY:\" + vectY , 150 , 510 , mPaint ); canvas . drawText ( \"vectZ:\" + vectZ , 150 , 570 , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ public boolean onTouchEvent ( MotionEvent event ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97. x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); return true ; } @Override public void onSensorChanged ( SensorEvent event ) { if ( event . sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { acceleroX = event . values [ 0 ] ; acceleroY = event . values [ 1 ] ; acceleroZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } else if ( event . sensor . getType () == Sensor . TYPE_GYROSCOPE ) { gyroX = event . values [ 0 ] ; gyroY = event . values [ 1 ] ; gyroZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } else if ( event . sensor . getType () == Sensor . TYPE_ROTATION_VECTOR ) { vectX = event . values [ 0 ] ; vectY = event . values [ 1 ] ; vectZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"Camera\u3078\u306e\u30aa\u30fc\u30d0\u30fc\u30ec\u30a4"},{"location":"camera03/#camera","text":"Camera\u306bView\u3092Overlay\u3057\u3066\u307f\u307e\u3059\u3002 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.ViewGroup ; import android.view.Window ; import android.view.WindowManager ; public class MainActivity extends Activity { /** LOGCAT\u7528\u306eTAG. */ private static final String TAG = \"CAMERA_ACTIVITY\" ; /** Camera\u7528\u306eSurfaceView. */ private static CameraView mCameraView ; /** Overlay\u3059\u308bView. */ private static MyView mView ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); getWindow (). addFlags ( WindowManager . LayoutParams . FLAG_FULLSCREEN ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); mCameraView = new CameraView ( this ); setContentView ( mCameraView ); mView = new MyView ( this ); addContentView ( mView , new ViewGroup . LayoutParams ( ViewGroup . LayoutParams . WRAP_CONTENT , ViewGroup . LayoutParams . WRAP_CONTENT )); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 package utsunomiya.gclue.com.camerasample ; /** * Created by sasakiakira on 15/10/30. */ import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Paint ; import android.view.MotionEvent ; import android.view.View ; class MyView extends View { private int x ; private int y ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf * * @param context */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406 */ protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); // \u9577\u65b9\u5f62\u3092\u63cf\u753b. canvas . drawRect ( x , y , x + 100 , y + 100 , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8 */ public boolean onTouchEvent ( MotionEvent event ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); return true ; } }","title":"Camera\u3078\u306e\u30aa\u30fc\u30d0\u30fc\u30ec\u30a4"},{"location":"camera03/#overlay","text":"MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 package utsunomiya.gclue.com.camerasample ; /** * Created by sasakiakira on 15/10/30. */ import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Paint ; import android.view.MotionEvent ; import android.view.View ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import java.util.List ; class MyView extends View implements SensorEventListener { /** \u30bf\u30c3\u30c1\u3057\u305fX\u5ea7\u6a19. */ private int x ; /** \u30bf\u30c3\u30c1\u3057\u305fY\u5ea7\u6a19. */ private int y ; /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SNESOR\" ; /** \u52a0\u901f\u5ea6X. */ private Float acceleroX ; /** \u52a0\u901f\u5ea6Y. */ private Float acceleroY ; /** \u52a0\u901f\u5ea6Z. */ private Float acceleroZ ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // SensorManager mSensorManager = ( SensorManager ) context . getSystemService ( Context . SENSOR_SERVICE ); // \u52a0\u901f\u5ea6\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > mSensors = mSensorManager . getSensorList ( Sensor . TYPE_ACCELEROMETER ); if ( mSensors . size () > 0 ) { Sensor sensor = mSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } /** * \u63cf\u753b\u51e6\u7406. */ protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); mPaint . setTextSize ( 50 ); // \u9577\u65b9\u5f62\u3092\u63cf\u753b. canvas . drawRect ( x , y , x + 100 , y + 100 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"acceleroX:\" + acceleroX , 150 , 50 , mPaint ); canvas . drawText ( \"acceleroY:\" + acceleroY , 150 , 110 , mPaint ); canvas . drawText ( \"acceleroZ:\" + acceleroZ , 150 , 170 , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ public boolean onTouchEvent ( MotionEvent event ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97. x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); return true ; } @Override public void onSensorChanged ( SensorEvent event ) { if ( event . sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { acceleroX = event . values [ 0 ] ; acceleroY = event . values [ 1 ] ; acceleroZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"\u52a0\u901f\u5ea6\u306e\u5024\u3092Overlay"},{"location":"camera03/#9","text":"MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 package utsunomiya.gclue.com.camerasample ; /** * Created by sasakiakira on 15/10/30. */ import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Paint ; import android.view.MotionEvent ; import android.view.View ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import java.util.List ; class MyView extends View implements SensorEventListener { /** \u30bf\u30c3\u30c1\u3057\u305fX\u5ea7\u6a19. */ private int x ; /** \u30bf\u30c3\u30c1\u3057\u305fY\u5ea7\u6a19. */ private int y ; /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SNESOR\" ; /** \u52a0\u901f\u5ea6X. */ private Float acceleroX ; /** \u52a0\u901f\u5ea6Y. */ private Float acceleroY ; /** \u52a0\u901f\u5ea6Z. */ private Float acceleroZ ; /** \u30b8\u30e3\u30a4\u30edX. */ private Float gyroX ; /** \u30b8\u30e3\u30a4\u30edY. */ private Float gyroY ; /** \u30b8\u30e3\u30a4\u30edZ. */ private Float gyroZ ; /** \u52a0\u901f\u5ea6X. */ private Float vectX ; /** \u52a0\u901f\u5ea6Y. */ private Float vectY ; /** \u52a0\u901f\u5ea6Z. */ private Float vectZ ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // SensorManager mSensorManager = ( SensorManager ) context . getSystemService ( Context . SENSOR_SERVICE ); // \u52a0\u901f\u5ea6\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > mSensors = mSensorManager . getSensorList ( Sensor . TYPE_ALL ); for ( int i = 0 ; i < mSensors . size (); i ++ ) { Sensor sensor = mSensors . get ( i ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } /** * \u63cf\u753b\u51e6\u7406. */ protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); mPaint . setTextSize ( 50 ); // \u9577\u65b9\u5f62\u3092\u63cf\u753b. canvas . drawRect ( x , y , x + 100 , y + 100 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"acceleroX:\" + acceleroX , 150 , 50 , mPaint ); canvas . drawText ( \"acceleroY:\" + acceleroY , 150 , 110 , mPaint ); canvas . drawText ( \"acceleroZ:\" + acceleroZ , 150 , 170 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"gyroX:\" + gyroX , 150 , 250 , mPaint ); canvas . drawText ( \"gyroY:\" + gyroY , 150 , 310 , mPaint ); canvas . drawText ( \"gyroZ:\" + gyroZ , 150 , 370 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"vectX:\" + vectX , 150 , 450 , mPaint ); canvas . drawText ( \"vectY:\" + vectY , 150 , 510 , mPaint ); canvas . drawText ( \"vectZ:\" + vectZ , 150 , 570 , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ public boolean onTouchEvent ( MotionEvent event ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97. x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); return true ; } @Override public void onSensorChanged ( SensorEvent event ) { if ( event . sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { acceleroX = event . values [ 0 ] ; acceleroY = event . values [ 1 ] ; acceleroZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } else if ( event . sensor . getType () == Sensor . TYPE_GYROSCOPE ) { gyroX = event . values [ 0 ] ; gyroY = event . values [ 1 ] ; gyroZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } else if ( event . sensor . getType () == Sensor . TYPE_ROTATION_VECTOR ) { vectX = event . values [ 0 ] ; vectY = event . values [ 1 ] ; vectZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"9\u8ef8\u3092\u8868\u793a\u3059\u308b"},{"location":"camera04/","text":"Camera\u3068GPS AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.camerasample\" > <uses-permission android:name= \"android.permission.CAMERA\" /> <uses-feature android:name= \"android.hardware.camera\" /> <uses-feature android:name= \"android.hardware.camera.autofocus\" /> <uses-permission android:name= \"android.permission.ACCESS_FINE_LOCATION\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:screenOrientation= \"landscape\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> MyView.javapackage utsunomiya.gclue.com.camerasample ; /** * Created by sasakiakira on 15/10/30. */ import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Paint ; import android.location.Location ; import android.location.LocationManager ; import android.location.LocationListener ; import android.os.Bundle ; import android.util.Log ; import android.view.MotionEvent ; import android.view.View ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import java.util.List ; class MyView extends View implements SensorEventListener , LocationListener { /** \u30bf\u30c3\u30c1\u3057\u305fX\u5ea7\u6a19. */ private int x ; /** \u30bf\u30c3\u30c1\u3057\u305fY\u5ea7\u6a19. */ private int y ; /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SNESOR\" ; /** \u52a0\u901f\u5ea6X. */ private Float acceleroX ; /** \u52a0\u901f\u5ea6Y. */ private Float acceleroY ; /** \u52a0\u901f\u5ea6Z. */ private Float acceleroZ ; /** \u30b8\u30e3\u30a4\u30edX. */ private Float gyroX ; /** \u30b8\u30e3\u30a4\u30edY. */ private Float gyroY ; /** \u30b8\u30e3\u30a4\u30edZ. */ private Float gyroZ ; /** \u52a0\u901f\u5ea6X. */ private Float vectX ; /** \u52a0\u901f\u5ea6Y. */ private Float vectY ; /** \u52a0\u901f\u5ea6Z. */ private Float vectZ ; /** GPS. */ private LocationManager mLocationManager ; /** \u7def\u5ea6. */ private double lat ; /** \u7d4c\u5ea6. */ private double lon ; /** \u8ddd\u96e2. */ private double distance ; /** \u65b9\u4f4d. */ private double direction ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // SensorManager mSensorManager = ( SensorManager ) context . getSystemService ( Context . SENSOR_SERVICE ); // \u52a0\u901f\u5ea6\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > mSensors = mSensorManager . getSensorList ( Sensor . TYPE_ALL ); for ( int i = 0 ; i < mSensors . size (); i ++ ) { Sensor sensor = mSensors . get ( i ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } // GPS\u306e\u53d6\u5f97. mLocationManager = ( LocationManager ) context . getSystemService ( Context . LOCATION_SERVICE ); mLocationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 1000 , 50 , this ); } /** * \u63cf\u753b\u51e6\u7406. */ protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); mPaint . setTextSize ( 50 ); // \u9577\u65b9\u5f62\u3092\u63cf\u753b. canvas . drawRect ( x , y , x + 100 , y + 100 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"acceleroX:\" + acceleroX , 150 , 50 , mPaint ); canvas . drawText ( \"acceleroY:\" + acceleroY , 150 , 110 , mPaint ); canvas . drawText ( \"acceleroZ:\" + acceleroZ , 150 , 170 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"gyroX:\" + gyroX , 150 , 250 , mPaint ); canvas . drawText ( \"gyroY:\" + gyroY , 150 , 310 , mPaint ); canvas . drawText ( \"gyroZ:\" + gyroZ , 150 , 370 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"vectX:\" + vectX , 150 , 450 , mPaint ); canvas . drawText ( \"vectY:\" + vectY , 150 , 510 , mPaint ); canvas . drawText ( \"vectZ:\" + vectZ , 150 , 570 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"lat:\" + lat , 150 , 650 , mPaint ); canvas . drawText ( \"lon:\" + lon , 150 , 710 , mPaint ); canvas . drawText ( \"distance:\" + distance , 150 , 770 , mPaint ); canvas . drawText ( \"direction:\" + direction , 150 , 830 , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ public boolean onTouchEvent ( MotionEvent event ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97. x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); return true ; } @Override public void onSensorChanged ( SensorEvent event ) { if ( event . sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { acceleroX = event . values [ 0 ] ; acceleroY = event . values [ 1 ] ; acceleroZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } else if ( event . sensor . getType () == Sensor . TYPE_GYROSCOPE ) { gyroX = event . values [ 0 ] ; gyroY = event . values [ 1 ] ; gyroZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } else if ( event . sensor . getType () == Sensor . TYPE_ROTATION_VECTOR ) { vectX = event . values [ 0 ] ; vectY = event . values [ 1 ] ; vectZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } @Override public void onLocationChanged ( Location location ) { lat = location . getLatitude (); lon = location . getLongitude (); Location fujisanLocation = new Location ( \"fujisan\" ); fujisanLocation . setLatitude ( 35.360744 ); fujisanLocation . setLongitude ( 138.727810 ); distance = location . distanceTo ( fujisanLocation ); direction = location . bearingTo ( fujisanLocation ); } @Override public void onStatusChanged ( String provider , int status , Bundle extras ) { } @Override public void onProviderEnabled ( String provider ) { } @Override public void onProviderDisabled ( String provider ) { } }","title":"Camera\u3068GPS"},{"location":"camera04/#cameragps","text":"AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.camerasample\" > <uses-permission android:name= \"android.permission.CAMERA\" /> <uses-feature android:name= \"android.hardware.camera\" /> <uses-feature android:name= \"android.hardware.camera.autofocus\" /> <uses-permission android:name= \"android.permission.ACCESS_FINE_LOCATION\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:screenOrientation= \"landscape\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 package utsunomiya.gclue.com.camerasample ; /** * Created by sasakiakira on 15/10/30. */ import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Paint ; import android.location.Location ; import android.location.LocationManager ; import android.location.LocationListener ; import android.os.Bundle ; import android.util.Log ; import android.view.MotionEvent ; import android.view.View ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import java.util.List ; class MyView extends View implements SensorEventListener , LocationListener { /** \u30bf\u30c3\u30c1\u3057\u305fX\u5ea7\u6a19. */ private int x ; /** \u30bf\u30c3\u30c1\u3057\u305fY\u5ea7\u6a19. */ private int y ; /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SNESOR\" ; /** \u52a0\u901f\u5ea6X. */ private Float acceleroX ; /** \u52a0\u901f\u5ea6Y. */ private Float acceleroY ; /** \u52a0\u901f\u5ea6Z. */ private Float acceleroZ ; /** \u30b8\u30e3\u30a4\u30edX. */ private Float gyroX ; /** \u30b8\u30e3\u30a4\u30edY. */ private Float gyroY ; /** \u30b8\u30e3\u30a4\u30edZ. */ private Float gyroZ ; /** \u52a0\u901f\u5ea6X. */ private Float vectX ; /** \u52a0\u901f\u5ea6Y. */ private Float vectY ; /** \u52a0\u901f\u5ea6Z. */ private Float vectZ ; /** GPS. */ private LocationManager mLocationManager ; /** \u7def\u5ea6. */ private double lat ; /** \u7d4c\u5ea6. */ private double lon ; /** \u8ddd\u96e2. */ private double distance ; /** \u65b9\u4f4d. */ private double direction ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // SensorManager mSensorManager = ( SensorManager ) context . getSystemService ( Context . SENSOR_SERVICE ); // \u52a0\u901f\u5ea6\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > mSensors = mSensorManager . getSensorList ( Sensor . TYPE_ALL ); for ( int i = 0 ; i < mSensors . size (); i ++ ) { Sensor sensor = mSensors . get ( i ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } // GPS\u306e\u53d6\u5f97. mLocationManager = ( LocationManager ) context . getSystemService ( Context . LOCATION_SERVICE ); mLocationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 1000 , 50 , this ); } /** * \u63cf\u753b\u51e6\u7406. */ protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); mPaint . setTextSize ( 50 ); // \u9577\u65b9\u5f62\u3092\u63cf\u753b. canvas . drawRect ( x , y , x + 100 , y + 100 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"acceleroX:\" + acceleroX , 150 , 50 , mPaint ); canvas . drawText ( \"acceleroY:\" + acceleroY , 150 , 110 , mPaint ); canvas . drawText ( \"acceleroZ:\" + acceleroZ , 150 , 170 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"gyroX:\" + gyroX , 150 , 250 , mPaint ); canvas . drawText ( \"gyroY:\" + gyroY , 150 , 310 , mPaint ); canvas . drawText ( \"gyroZ:\" + gyroZ , 150 , 370 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"vectX:\" + vectX , 150 , 450 , mPaint ); canvas . drawText ( \"vectY:\" + vectY , 150 , 510 , mPaint ); canvas . drawText ( \"vectZ:\" + vectZ , 150 , 570 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"lat:\" + lat , 150 , 650 , mPaint ); canvas . drawText ( \"lon:\" + lon , 150 , 710 , mPaint ); canvas . drawText ( \"distance:\" + distance , 150 , 770 , mPaint ); canvas . drawText ( \"direction:\" + direction , 150 , 830 , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ public boolean onTouchEvent ( MotionEvent event ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97. x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); return true ; } @Override public void onSensorChanged ( SensorEvent event ) { if ( event . sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { acceleroX = event . values [ 0 ] ; acceleroY = event . values [ 1 ] ; acceleroZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } else if ( event . sensor . getType () == Sensor . TYPE_GYROSCOPE ) { gyroX = event . values [ 0 ] ; gyroY = event . values [ 1 ] ; gyroZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } else if ( event . sensor . getType () == Sensor . TYPE_ROTATION_VECTOR ) { vectX = event . values [ 0 ] ; vectY = event . values [ 1 ] ; vectZ = event . values [ 2 ] ; // \u518d\u63cf\u753b\u306e\u6307\u793a. invalidate (); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } @Override public void onLocationChanged ( Location location ) { lat = location . getLatitude (); lon = location . getLongitude (); Location fujisanLocation = new Location ( \"fujisan\" ); fujisanLocation . setLatitude ( 35.360744 ); fujisanLocation . setLongitude ( 138.727810 ); distance = location . distanceTo ( fujisanLocation ); direction = location . bearingTo ( fujisanLocation ); } @Override public void onStatusChanged ( String provider , int status , Bundle extras ) { } @Override public void onProviderEnabled ( String provider ) { } @Override public void onProviderDisabled ( String provider ) { } }","title":"Camera\u3068GPS"},{"location":"camera05/","text":"\u7aef\u672b\u306e\u65b9\u89d2\u306e\u8a08\u7b97 MainActivity.javapackage utsunomiya.gclue.com.camerasample ; /** * Created by sasakiakira on 15/10/30. */ import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Paint ; import android.location.Location ; import android.location.LocationManager ; import android.location.LocationListener ; import android.os.Bundle ; import android.util.Log ; import android.view.MotionEvent ; import android.view.View ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import java.util.List ; class MyView extends View implements SensorEventListener , LocationListener { /** \u30bf\u30c3\u30c1\u3057\u305fX\u5ea7\u6a19. */ private int x ; /** \u30bf\u30c3\u30c1\u3057\u305fY\u5ea7\u6a19. */ private int y ; /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SNESOR\" ; /** \u65b9\u4f4dX. */ private Float rotX ; /** \u65b9\u4f4dY. */ private Float rotY ; /** \u65b9\u4f4dZ. */ private Float rotZ ; /** GPS. */ private LocationManager mLocationManager ; /** \u7def\u5ea6. */ private double lat ; /** \u7d4c\u5ea6. */ private double lon ; /** \u8ddd\u96e2. */ private double distance ; /** \u65b9\u4f4d. */ private double direction ; /** \u91cd\u529b. */ private float [] mGravity ; /** \u78c1\u5834. */ private float [] mMagnetic ; /** \u91cd\u529b\u30d5\u30e9\u30b0. */ private Boolean flagGravity = false ; /** \u78c1\u5834\u30d5\u30e9\u30b0. */ private Boolean flagMagnetic = false ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context */ public MyView ( Context context ) { super ( context ); // SensorManager mSensorManager = ( SensorManager ) context . getSystemService ( Context . SENSOR_SERVICE ); // \u52a0\u901f\u5ea6\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > mSensors = mSensorManager . getSensorList ( Sensor . TYPE_ALL ); for ( int i = 0 ; i < mSensors . size (); i ++ ) { Sensor sensor = mSensors . get ( i ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } // GPS\u306e\u53d6\u5f97. mLocationManager = ( LocationManager ) context . getSystemService ( Context . LOCATION_SERVICE ); mLocationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 1000 , 50 , this ); } /** * \u63cf\u753b\u51e6\u7406. */ protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); mPaint . setTextSize ( 50 ); // \u9577\u65b9\u5f62\u3092\u63cf\u753b. canvas . drawRect ( x , y , x + 100 , y + 100 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"rotX:\" + rotX , 150 , 50 , mPaint ); canvas . drawText ( \"rotY:\" + rotY , 150 , 110 , mPaint ); canvas . drawText ( \"rotZ:\" + rotZ , 150 , 170 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"lat:\" + lat , 150 , 650 , mPaint ); canvas . drawText ( \"lon:\" + lon , 150 , 710 , mPaint ); canvas . drawText ( \"distance:\" + distance , 150 , 770 , mPaint ); canvas . drawText ( \"direction:\" + direction , 150 , 830 , mPaint ); } @Override public void onSensorChanged ( SensorEvent event ) { if ( event . sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { mGravity = event . values . clone (); flagGravity = true ; } else if ( event . sensor . getType () == Sensor . TYPE_MAGNETIC_FIELD ) { mMagnetic = event . values . clone (); flagMagnetic = true ; } if ( flagGravity && flagMagnetic ) { flagGravity = false ; flagMagnetic = false ; // \u89d2\u5ea6\u3092\u8a08\u7b97 float [] matrixI = new float [ 9 ] ; float [] matrixR = new float [ 9 ] ; SensorManager . getRotationMatrix ( matrixI , null , mGravity , mMagnetic ); SensorManager . remapCoordinateSystem ( matrixI , SensorManager . AXIS_X , SensorManager . AXIS_Z , matrixR ); float [] martixRot = new float [ 3 ] ; SensorManager . getOrientation ( matrixR , martixRot ); for ( int i = 0 ; i < martixRot . length ; i ++ ) { Double degrees = ( martixRot [ i ] * 180 ) / Math . PI ; martixRot [ i ] = degrees . floatValue (); } rotX = martixRot [ 0 ] ; rotY = martixRot [ 1 ] ; rotZ = martixRot [ 2 ] ; invalidate (); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } @Override public void onLocationChanged ( Location location ) { lat = location . getLatitude (); lon = location . getLongitude (); Location fujisanLocation = new Location ( \"fujisan\" ); fujisanLocation . setLatitude ( 35.360744 ); fujisanLocation . setLongitude ( 138.727810 ); distance = location . distanceTo ( fujisanLocation ); direction = location . bearingTo ( fujisanLocation ); } @Override public void onStatusChanged ( String provider , int status , Bundle extras ) { } @Override public void onProviderEnabled ( String provider ) { } @Override public void onProviderDisabled ( String provider ) { } }","title":"\u7aef\u672b\u306e\u65b9\u89d2\u306e\u8a08\u7b97"},{"location":"camera05/#_1","text":"MainActivity.javapackage utsunomiya.gclue.com.camerasample ; /** * Created by sasakiakira on 15/10/30. */ import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Paint ; import android.location.Location ; import android.location.LocationManager ; import android.location.LocationListener ; import android.os.Bundle ; import android.util.Log ; import android.view.MotionEvent ; import android.view.View ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import java.util.List ; class MyView extends View implements SensorEventListener , LocationListener { /** \u30bf\u30c3\u30c1\u3057\u305fX\u5ea7\u6a19. */ private int x ; /** \u30bf\u30c3\u30c1\u3057\u305fY\u5ea7\u6a19. */ private int y ; /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SNESOR\" ; /** \u65b9\u4f4dX. */ private Float rotX ; /** \u65b9\u4f4dY. */ private Float rotY ; /** \u65b9\u4f4dZ. */ private Float rotZ ; /** GPS. */ private LocationManager mLocationManager ; /** \u7def\u5ea6. */ private double lat ; /** \u7d4c\u5ea6. */ private double lon ; /** \u8ddd\u96e2. */ private double distance ; /** \u65b9\u4f4d. */ private double direction ; /** \u91cd\u529b. */ private float [] mGravity ; /** \u78c1\u5834. */ private float [] mMagnetic ; /** \u91cd\u529b\u30d5\u30e9\u30b0. */ private Boolean flagGravity = false ; /** \u78c1\u5834\u30d5\u30e9\u30b0. */ private Boolean flagMagnetic = false ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context */ public MyView ( Context context ) { super ( context ); // SensorManager mSensorManager = ( SensorManager ) context . getSystemService ( Context . SENSOR_SERVICE ); // \u52a0\u901f\u5ea6\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > mSensors = mSensorManager . getSensorList ( Sensor . TYPE_ALL ); for ( int i = 0 ; i < mSensors . size (); i ++ ) { Sensor sensor = mSensors . get ( i ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } // GPS\u306e\u53d6\u5f97. mLocationManager = ( LocationManager ) context . getSystemService ( Context . LOCATION_SERVICE ); mLocationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 1000 , 50 , this ); } /** * \u63cf\u753b\u51e6\u7406. */ protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); mPaint . setTextSize ( 50 ); // \u9577\u65b9\u5f62\u3092\u63cf\u753b. canvas . drawRect ( x , y , x + 100 , y + 100 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"rotX:\" + rotX , 150 , 50 , mPaint ); canvas . drawText ( \"rotY:\" + rotY , 150 , 110 , mPaint ); canvas . drawText ( \"rotZ:\" + rotZ , 150 , 170 , mPaint ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"lat:\" + lat , 150 , 650 , mPaint ); canvas . drawText ( \"lon:\" + lon , 150 , 710 , mPaint ); canvas . drawText ( \"distance:\" + distance , 150 , 770 , mPaint ); canvas . drawText ( \"direction:\" + direction , 150 , 830 , mPaint ); } @Override public void onSensorChanged ( SensorEvent event ) { if ( event . sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { mGravity = event . values . clone (); flagGravity = true ; } else if ( event . sensor . getType () == Sensor . TYPE_MAGNETIC_FIELD ) { mMagnetic = event . values . clone (); flagMagnetic = true ; } if ( flagGravity && flagMagnetic ) { flagGravity = false ; flagMagnetic = false ; // \u89d2\u5ea6\u3092\u8a08\u7b97 float [] matrixI = new float [ 9 ] ; float [] matrixR = new float [ 9 ] ; SensorManager . getRotationMatrix ( matrixI , null , mGravity , mMagnetic ); SensorManager . remapCoordinateSystem ( matrixI , SensorManager . AXIS_X , SensorManager . AXIS_Z , matrixR ); float [] martixRot = new float [ 3 ] ; SensorManager . getOrientation ( matrixR , martixRot ); for ( int i = 0 ; i < martixRot . length ; i ++ ) { Double degrees = ( martixRot [ i ] * 180 ) / Math . PI ; martixRot [ i ] = degrees . floatValue (); } rotX = martixRot [ 0 ] ; rotY = martixRot [ 1 ] ; rotZ = martixRot [ 2 ] ; invalidate (); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } @Override public void onLocationChanged ( Location location ) { lat = location . getLatitude (); lon = location . getLongitude (); Location fujisanLocation = new Location ( \"fujisan\" ); fujisanLocation . setLatitude ( 35.360744 ); fujisanLocation . setLongitude ( 138.727810 ); distance = location . distanceTo ( fujisanLocation ); direction = location . bearingTo ( fujisanLocation ); } @Override public void onStatusChanged ( String provider , int status , Bundle extras ) { } @Override public void onProviderEnabled ( String provider ) { } @Override public void onProviderDisabled ( String provider ) { } }","title":"\u7aef\u672b\u306e\u65b9\u89d2\u306e\u8a08\u7b97"},{"location":"camera201/","text":"TextureView\u306e\u4f5c\u6210 Camera2\u3067\u306f\u3001\u30d9\u30fc\u30b9\u306eView\u306f\u3001TextureView\u3092\u7528\u3044\u307e\u3059\u3002 \u307e\u305a\u3001TextureView\u306e\u571f\u53f0\u3092\u4f5c\u308a\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u3092\u767b\u9332\u3057\u307e\u3059\u3002 TextureView\u306b\u3001SurfaceTexture\u30ea\u30b9\u30ca\u30fc\u3092\u767b\u9332\u3059\u308b\u3068\u3001onSurfaceTextureAvailable,onSurfaceTextureSizeChanged,onSurfaceTextureDestroyed,onSurfaceTextureUpdated \u306b\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u305f\u6b73\u306b\u3001\u30a4\u30d9\u30f3\u30c8\u304c\u98db\u3093\u3067\u304f\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u30e1\u30bd\u30c3\u30c9\u540d \u30bf\u30a4\u30df\u30f3\u30b0 onSurfaceTextureAvailable SurfaceTexture\u304c\u5229\u7528\u53ef\u80fd\u306b\u306a\u3063\u305f\u6642 onSurfaceTextureSizeChanged SurfaceTexture\u306e\u30b5\u30a4\u30ba\u304c\u5909\u66f4\u3055\u308c\u305f\u6642 onSurfaceTextureDestroyed SurfaceTexture\u304c\u7834\u68c4\u3055\u308c\u305f\u6642 onSurfaceTextureUpdated SurfaceTexture\u304c\u66f4\u65b0\u3055\u308c\u305f\u6642 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.graphics.SurfaceTexture ; import android.os.Bundle ; import android.util.Log ; import android.view.TextureView ; public class MainActivity extends Activity implements TextureView . SurfaceTextureListener { /** TextureView */ private TextureView mTextureView ; /** SurfaceTexture */ private SurfaceTexture mSurfaceTexture ; /** Log\u7528\u306eTag */ private static final String TAG = \"CAMERA\" ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextureView\u3092activity_main\u304b\u3089\u53d6\u308a\u8fbc\u307f mTextureView = ( TextureView ) findViewById ( R . id . camera_texture_view ); // TextureView\u306e\u30ea\u30b9\u30bf\u30fc\u3092\u8a2d\u5b9a mTextureView . setSurfaceTextureListener ( this ); // SurfaceTexture\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97 mSurfaceTexture = mTextureView . getSurfaceTexture (); } @Override public void onSurfaceTextureAvailable ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureAvailable\" ); } @Override public void onSurfaceTextureSizeChanged ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureSizeChanged\" ); } @Override public boolean onSurfaceTextureDestroyed ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureDestroyed\" ); return false ; } @Override public void onSurfaceTextureUpdated ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureUpdated\" ); } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" > <FrameLayout android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" > <TextureView android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:id= \"@+id/camera_texture_view\" /> </FrameLayout> </LinearLayout> AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.camerasample\" > <uses-permission android:name= \"android.permission.CAMERA\" /> <uses-feature android:name= \"android.hardware.camera\" /> <uses-feature android:name= \"android.hardware.camera.autofocus\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"TextureView\u306e\u4f5c\u6210"},{"location":"camera201/#textureview","text":"Camera2\u3067\u306f\u3001\u30d9\u30fc\u30b9\u306eView\u306f\u3001TextureView\u3092\u7528\u3044\u307e\u3059\u3002 \u307e\u305a\u3001TextureView\u306e\u571f\u53f0\u3092\u4f5c\u308a\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u3092\u767b\u9332\u3057\u307e\u3059\u3002 TextureView\u306b\u3001SurfaceTexture\u30ea\u30b9\u30ca\u30fc\u3092\u767b\u9332\u3059\u308b\u3068\u3001onSurfaceTextureAvailable,onSurfaceTextureSizeChanged,onSurfaceTextureDestroyed,onSurfaceTextureUpdated \u306b\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u305f\u6b73\u306b\u3001\u30a4\u30d9\u30f3\u30c8\u304c\u98db\u3093\u3067\u304f\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u30e1\u30bd\u30c3\u30c9\u540d \u30bf\u30a4\u30df\u30f3\u30b0 onSurfaceTextureAvailable SurfaceTexture\u304c\u5229\u7528\u53ef\u80fd\u306b\u306a\u3063\u305f\u6642 onSurfaceTextureSizeChanged SurfaceTexture\u306e\u30b5\u30a4\u30ba\u304c\u5909\u66f4\u3055\u308c\u305f\u6642 onSurfaceTextureDestroyed SurfaceTexture\u304c\u7834\u68c4\u3055\u308c\u305f\u6642 onSurfaceTextureUpdated SurfaceTexture\u304c\u66f4\u65b0\u3055\u308c\u305f\u6642 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.graphics.SurfaceTexture ; import android.os.Bundle ; import android.util.Log ; import android.view.TextureView ; public class MainActivity extends Activity implements TextureView . SurfaceTextureListener { /** TextureView */ private TextureView mTextureView ; /** SurfaceTexture */ private SurfaceTexture mSurfaceTexture ; /** Log\u7528\u306eTag */ private static final String TAG = \"CAMERA\" ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextureView\u3092activity_main\u304b\u3089\u53d6\u308a\u8fbc\u307f mTextureView = ( TextureView ) findViewById ( R . id . camera_texture_view ); // TextureView\u306e\u30ea\u30b9\u30bf\u30fc\u3092\u8a2d\u5b9a mTextureView . setSurfaceTextureListener ( this ); // SurfaceTexture\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97 mSurfaceTexture = mTextureView . getSurfaceTexture (); } @Override public void onSurfaceTextureAvailable ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureAvailable\" ); } @Override public void onSurfaceTextureSizeChanged ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureSizeChanged\" ); } @Override public boolean onSurfaceTextureDestroyed ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureDestroyed\" ); return false ; } @Override public void onSurfaceTextureUpdated ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureUpdated\" ); } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" > <FrameLayout android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" > <TextureView android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:id= \"@+id/camera_texture_view\" /> </FrameLayout> </LinearLayout> AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.camerasample\" > <uses-permission android:name= \"android.permission.CAMERA\" /> <uses-feature android:name= \"android.hardware.camera\" /> <uses-feature android:name= \"android.hardware.camera.autofocus\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"TextureView\u306e\u4f5c\u6210"},{"location":"camera202/","text":"CameraManager Camera\u306e\u53d6\u5f97 Camera2\u3067\u306f\u3001CameraManager\u3092\u7528\u3044\u3066Camera\u3092Open\u3057\u307e\u3059\u3002 \u307e\u305a\u3001\u6700\u521d\u306bCameraManager\u3092\u7528\u3044\u3066\u3001\u30ab\u30e1\u30e9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002Camera\u306b\u306f\u3001\u30d5\u30ed\u30f3\u30c8\u30ab\u30e1\u30e9\u3084\u30d0\u30c3\u30af\u30ab\u30e1\u30e9\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3001\u30d0\u30c3\u30af\u30ab\u30e1\u30e9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.content.Context ; import android.graphics.SurfaceTexture ; import android.os.Bundle ; import android.util.Log ; import android.util.Size ; import android.view.Surface ; import android.view.TextureView ; import android.hardware.camera2.* ; import android.hardware.camera2.CameraCharacteristics ; public class MainActivity extends Activity implements TextureView . SurfaceTextureListener { /** TextureView */ private TextureView mTextureView ; /** SurfaceTexture */ private SurfaceTexture mSurfaceTexture ; /** Surface */ private Surface mSurface ; /** Log\u7528\u306eTag */ private static final String TAG = \"CAMERA\" ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextureView\u3092activity_main\u304b\u3089\u53d6\u308a\u8fbc\u307f mTextureView = ( TextureView ) findViewById ( R . id . camera_texture_view ); // TextureView\u306e\u30ea\u30b9\u30bf\u30fc\u3092\u8a2d\u5b9a mTextureView . setSurfaceTextureListener ( this ); // SurfaceTexture\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97 mSurfaceTexture = mTextureView . getSurfaceTexture (); } @Override public void onSurfaceTextureAvailable ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureAvailable\" ); mSurfaceTexture = surface ; mSurface = new Surface ( mSurfaceTexture ); try { CameraManager manager = ( CameraManager ) getSystemService ( Context . CAMERA_SERVICE ); for ( String cameraId : manager . getCameraIdList ()){ Log . i ( TAG , \"cameraId:\" + cameraId ); // \u53d6\u5f97\u3057\u305fCameraId\u304b\u3089\u30ad\u30e3\u30e9\u30b9\u30bf\u30ea\u30b9\u30c1\u30af\u30b9\u3092\u53d6\u5f97 CameraCharacteristics characteristics = manager . getCameraCharacteristics ( cameraId ); // Front\u30ab\u30e1\u30e9\u306e\u5834\u5408 if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_FRONT ) { Log . i ( TAG , \"FrontCamera\" ); } // Back\u30ab\u30e1\u30e9\u306e\u5834\u5408 else if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_BACK ) { Log . i ( TAG , \"BackCamera\" ); } } } catch ( Exception e ) { Log . i ( TAG , \"Error:\" + e ); } } @Override public void onSurfaceTextureSizeChanged ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureSizeChanged\" ); } @Override public boolean onSurfaceTextureDestroyed ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureDestroyed\" ); return false ; } @Override public void onSurfaceTextureUpdated ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureUpdated\" ); } } \u30b5\u30a4\u30ba\u306e\u53d6\u5f97 \u30d0\u30c3\u30af\u30ab\u30e1\u30e9\u3092\u53d6\u5f97\u3057\u305f\u3089\u3001\u4eca\u5ea6\u306f\u3001\u5229\u7528\u53ef\u80fd\u306a\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.content.Context ; import android.graphics.SurfaceTexture ; import android.os.Bundle ; import android.util.Log ; import android.util.Size ; import android.view.Surface ; import android.view.TextureView ; import android.hardware.camera2.* ; import android.hardware.camera2.params.StreamConfigurationMap ; import android.hardware.camera2.CameraCharacteristics ; public class MainActivity extends Activity implements TextureView . SurfaceTextureListener { /** * TextureView */ private TextureView mTextureView ; /** * SurfaceTexture */ private SurfaceTexture mSurfaceTexture ; /** * Surface */ private Surface mSurface ; /** * CameraSize */ private Size mCameraSize ; /** * Log\u7528\u306eTag */ private static final String TAG = \"CAMERA\" ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextureView\u3092activity_main\u304b\u3089\u53d6\u308a\u8fbc\u307f mTextureView = ( TextureView ) findViewById ( R . id . camera_texture_view ); // TextureView\u306e\u30ea\u30b9\u30bf\u30fc\u3092\u8a2d\u5b9a mTextureView . setSurfaceTextureListener ( this ); // SurfaceTexture\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97 mSurfaceTexture = mTextureView . getSurfaceTexture (); } @Override public void onSurfaceTextureAvailable ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureAvailable\" ); mSurfaceTexture = surface ; mSurface = new Surface ( mSurfaceTexture ); try { CameraManager manager = ( CameraManager ) getSystemService ( Context . CAMERA_SERVICE ); for ( String cameraId : manager . getCameraIdList ()){ Log . i ( TAG , \"cameraId:\" + cameraId ); // \u53d6\u5f97\u3057\u305fCameraId\u304b\u3089\u30ad\u30e3\u30e9\u30b9\u30bf\u30ea\u30b9\u30c1\u30af\u30b9\u3092\u53d6\u5f97 CameraCharacteristics characteristics = manager . getCameraCharacteristics ( cameraId ); // Front\u30ab\u30e1\u30e9\u306e\u5834\u5408 if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_FRONT ) { Log . i ( TAG , \"FrontCamera\" ); // Map\u3092\u53d6\u5f97 StreamConfigurationMap map = characteristics . get ( CameraCharacteristics . SCALER_STREAM_CONFIGURATION_MAP ); // \u30b5\u30a4\u30ba\u306e\u4e00\u89a7\u3092\u53d6\u5f97 Size [] mOutputSize = map . getOutputSizes ( SurfaceTexture . class ); for ( int i = 0 ; i < mOutputSize . length ; i ++ ) { Log . i ( TAG , \"size[\" + i + \"]\" + mOutputSize [ i ] . toString ()); } // \u30ab\u30e1\u30e9\u30b5\u30a4\u30ba0\u756a\u76ee\u3092Global\u306a\u95a2\u6570\u306b\u683c\u7d0d mCameraSize = map . getOutputSizes ( SurfaceTexture . class ) [ 0 ] ; } // Back\u30ab\u30e1\u30e9\u306e\u5834\u5408 else if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_BACK ) { Log . i ( TAG , \"BackCamera\" ); } } } catch ( Exception e ) { Log . i ( TAG , \"Error:\" + e ); } } @Override public void onSurfaceTextureSizeChanged ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureSizeChanged\" ); } @Override public boolean onSurfaceTextureDestroyed ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureDestroyed\" ); return false ; } @Override public void onSurfaceTextureUpdated ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureUpdated\" ); } } \u914d\u5217\u306e\u756a\u53f7 Nexus5 Nexus6 Nexus9 0 1280x960 1 1280x768 2 1280x720 3 1024x768 4 800x600 5 800x480 6 720x480 7 640x480 8 352x288 9 320x240 10 176x144","title":"CameraManager"},{"location":"camera202/#cameramanager","text":"","title":"CameraManager"},{"location":"camera202/#camera","text":"Camera2\u3067\u306f\u3001CameraManager\u3092\u7528\u3044\u3066Camera\u3092Open\u3057\u307e\u3059\u3002 \u307e\u305a\u3001\u6700\u521d\u306bCameraManager\u3092\u7528\u3044\u3066\u3001\u30ab\u30e1\u30e9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002Camera\u306b\u306f\u3001\u30d5\u30ed\u30f3\u30c8\u30ab\u30e1\u30e9\u3084\u30d0\u30c3\u30af\u30ab\u30e1\u30e9\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3001\u30d0\u30c3\u30af\u30ab\u30e1\u30e9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.content.Context ; import android.graphics.SurfaceTexture ; import android.os.Bundle ; import android.util.Log ; import android.util.Size ; import android.view.Surface ; import android.view.TextureView ; import android.hardware.camera2.* ; import android.hardware.camera2.CameraCharacteristics ; public class MainActivity extends Activity implements TextureView . SurfaceTextureListener { /** TextureView */ private TextureView mTextureView ; /** SurfaceTexture */ private SurfaceTexture mSurfaceTexture ; /** Surface */ private Surface mSurface ; /** Log\u7528\u306eTag */ private static final String TAG = \"CAMERA\" ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextureView\u3092activity_main\u304b\u3089\u53d6\u308a\u8fbc\u307f mTextureView = ( TextureView ) findViewById ( R . id . camera_texture_view ); // TextureView\u306e\u30ea\u30b9\u30bf\u30fc\u3092\u8a2d\u5b9a mTextureView . setSurfaceTextureListener ( this ); // SurfaceTexture\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97 mSurfaceTexture = mTextureView . getSurfaceTexture (); } @Override public void onSurfaceTextureAvailable ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureAvailable\" ); mSurfaceTexture = surface ; mSurface = new Surface ( mSurfaceTexture ); try { CameraManager manager = ( CameraManager ) getSystemService ( Context . CAMERA_SERVICE ); for ( String cameraId : manager . getCameraIdList ()){ Log . i ( TAG , \"cameraId:\" + cameraId ); // \u53d6\u5f97\u3057\u305fCameraId\u304b\u3089\u30ad\u30e3\u30e9\u30b9\u30bf\u30ea\u30b9\u30c1\u30af\u30b9\u3092\u53d6\u5f97 CameraCharacteristics characteristics = manager . getCameraCharacteristics ( cameraId ); // Front\u30ab\u30e1\u30e9\u306e\u5834\u5408 if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_FRONT ) { Log . i ( TAG , \"FrontCamera\" ); } // Back\u30ab\u30e1\u30e9\u306e\u5834\u5408 else if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_BACK ) { Log . i ( TAG , \"BackCamera\" ); } } } catch ( Exception e ) { Log . i ( TAG , \"Error:\" + e ); } } @Override public void onSurfaceTextureSizeChanged ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureSizeChanged\" ); } @Override public boolean onSurfaceTextureDestroyed ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureDestroyed\" ); return false ; } @Override public void onSurfaceTextureUpdated ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureUpdated\" ); } }","title":"Camera\u306e\u53d6\u5f97"},{"location":"camera202/#_1","text":"\u30d0\u30c3\u30af\u30ab\u30e1\u30e9\u3092\u53d6\u5f97\u3057\u305f\u3089\u3001\u4eca\u5ea6\u306f\u3001\u5229\u7528\u53ef\u80fd\u306a\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.content.Context ; import android.graphics.SurfaceTexture ; import android.os.Bundle ; import android.util.Log ; import android.util.Size ; import android.view.Surface ; import android.view.TextureView ; import android.hardware.camera2.* ; import android.hardware.camera2.params.StreamConfigurationMap ; import android.hardware.camera2.CameraCharacteristics ; public class MainActivity extends Activity implements TextureView . SurfaceTextureListener { /** * TextureView */ private TextureView mTextureView ; /** * SurfaceTexture */ private SurfaceTexture mSurfaceTexture ; /** * Surface */ private Surface mSurface ; /** * CameraSize */ private Size mCameraSize ; /** * Log\u7528\u306eTag */ private static final String TAG = \"CAMERA\" ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextureView\u3092activity_main\u304b\u3089\u53d6\u308a\u8fbc\u307f mTextureView = ( TextureView ) findViewById ( R . id . camera_texture_view ); // TextureView\u306e\u30ea\u30b9\u30bf\u30fc\u3092\u8a2d\u5b9a mTextureView . setSurfaceTextureListener ( this ); // SurfaceTexture\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97 mSurfaceTexture = mTextureView . getSurfaceTexture (); } @Override public void onSurfaceTextureAvailable ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureAvailable\" ); mSurfaceTexture = surface ; mSurface = new Surface ( mSurfaceTexture ); try { CameraManager manager = ( CameraManager ) getSystemService ( Context . CAMERA_SERVICE ); for ( String cameraId : manager . getCameraIdList ()){ Log . i ( TAG , \"cameraId:\" + cameraId ); // \u53d6\u5f97\u3057\u305fCameraId\u304b\u3089\u30ad\u30e3\u30e9\u30b9\u30bf\u30ea\u30b9\u30c1\u30af\u30b9\u3092\u53d6\u5f97 CameraCharacteristics characteristics = manager . getCameraCharacteristics ( cameraId ); // Front\u30ab\u30e1\u30e9\u306e\u5834\u5408 if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_FRONT ) { Log . i ( TAG , \"FrontCamera\" ); // Map\u3092\u53d6\u5f97 StreamConfigurationMap map = characteristics . get ( CameraCharacteristics . SCALER_STREAM_CONFIGURATION_MAP ); // \u30b5\u30a4\u30ba\u306e\u4e00\u89a7\u3092\u53d6\u5f97 Size [] mOutputSize = map . getOutputSizes ( SurfaceTexture . class ); for ( int i = 0 ; i < mOutputSize . length ; i ++ ) { Log . i ( TAG , \"size[\" + i + \"]\" + mOutputSize [ i ] . toString ()); } // \u30ab\u30e1\u30e9\u30b5\u30a4\u30ba0\u756a\u76ee\u3092Global\u306a\u95a2\u6570\u306b\u683c\u7d0d mCameraSize = map . getOutputSizes ( SurfaceTexture . class ) [ 0 ] ; } // Back\u30ab\u30e1\u30e9\u306e\u5834\u5408 else if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_BACK ) { Log . i ( TAG , \"BackCamera\" ); } } } catch ( Exception e ) { Log . i ( TAG , \"Error:\" + e ); } } @Override public void onSurfaceTextureSizeChanged ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureSizeChanged\" ); } @Override public boolean onSurfaceTextureDestroyed ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureDestroyed\" ); return false ; } @Override public void onSurfaceTextureUpdated ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureUpdated\" ); } } \u914d\u5217\u306e\u756a\u53f7 Nexus5 Nexus6 Nexus9 0 1280x960 1 1280x768 2 1280x720 3 1024x768 4 800x600 5 800x480 6 720x480 7 640x480 8 352x288 9 320x240 10 176x144","title":"\u30b5\u30a4\u30ba\u306e\u53d6\u5f97"},{"location":"camera203/","text":"Camera\u3092\u30aa\u30fc\u30d7\u30f3 Camera\u306eOpen StateCallback\u306e\u5909\u6570\u3092\u5b9a\u7fa9\u3057\u3001Camera\u3092Open\u3057\u307e\u3059\u3002StateCallback\u306eonOpen()\u3067\u53d6\u5f97\u3067\u304d\u308bdevice\u3092\u7528\u3044\u3066\u3001\u30ab\u30e1\u30e9\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.content.Context ; import android.graphics.SurfaceTexture ; import android.os.Bundle ; import android.util.Log ; import android.util.Size ; import android.view.Surface ; import android.view.TextureView ; import android.hardware.camera2.* ; import android.hardware.camera2.params.StreamConfigurationMap ; import android.hardware.camera2.CameraCharacteristics ; public class MainActivity extends Activity implements TextureView . SurfaceTextureListener { /** * TextureView */ private TextureView mTextureView ; /** * SurfaceTexture */ private SurfaceTexture mSurfaceTexture ; /** * Surface */ private Surface mSurface ; /** * CameraSize */ private Size mCameraSize ; /** * Log\u7528\u306eTag */ private static final String TAG = \"CAMERA\" ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextureView\u3092activity_main\u304b\u3089\u53d6\u308a\u8fbc\u307f mTextureView = ( TextureView ) findViewById ( R . id . camera_texture_view ); // TextureView\u306e\u30ea\u30b9\u30bf\u30fc\u3092\u8a2d\u5b9a mTextureView . setSurfaceTextureListener ( this ); // SurfaceTexture\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97 mSurfaceTexture = mTextureView . getSurfaceTexture (); } // CameraDevice\u306eStateCallback CameraDevice . StateCallback mDeviceCallback = new CameraDevice . StateCallback () { @Override public void onDisconnected ( CameraDevice device ){ Log . i ( TAG , \"onDisconnected\" ); } @Override public void onError ( CameraDevice device , int error ){ Log . i ( TAG , \"onError\" ); } @Override public void onOpened ( CameraDevice device ){ Log . i ( TAG , \"onOpened\" ); } }; @Override public void onSurfaceTextureAvailable ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureAvailable\" ); mSurfaceTexture = surface ; mSurface = new Surface ( mSurfaceTexture ); try { CameraManager manager = ( CameraManager ) getSystemService ( Context . CAMERA_SERVICE ); for ( String cameraId : manager . getCameraIdList ()){ Log . i ( TAG , \"cameraId:\" + cameraId ); // \u53d6\u5f97\u3057\u305fCameraId\u304b\u3089\u30ad\u30e3\u30e9\u30b9\u30bf\u30ea\u30b9\u30c1\u30af\u30b9\u3092\u53d6\u5f97 CameraCharacteristics characteristics = manager . getCameraCharacteristics ( cameraId ); // Front\u30ab\u30e1\u30e9\u306e\u5834\u5408 if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_FRONT ) { Log . i ( TAG , \"FrontCamera\" ); // Map\u3092\u53d6\u5f97 StreamConfigurationMap map = characteristics . get ( CameraCharacteristics . SCALER_STREAM_CONFIGURATION_MAP ); // \u30b5\u30a4\u30ba\u306e\u4e00\u89a7\u3092\u53d6\u5f97 Size [] mOutputSize = map . getOutputSizes ( SurfaceTexture . class ); for ( int i = 0 ; i < mOutputSize . length ; i ++ ) { Log . i ( TAG , \"size[\" + i + \"]\" + mOutputSize [ i ] . toString ()); } // \u30ab\u30e1\u30e9\u30b5\u30a4\u30ba0\u756a\u76ee\u3092Global\u306a\u95a2\u6570\u306b\u683c\u7d0d mCameraSize = map . getOutputSizes ( SurfaceTexture . class ) [ 0 ] ; // \u30ab\u30e1\u30e9\u3092\u30aa\u30fc\u30d7\u30f3 manager . openCamera ( cameraId , mDeviceCallback , null ); } // Back\u30ab\u30e1\u30e9\u306e\u5834\u5408 else if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_BACK ) { Log . i ( TAG , \"BackCamera\" ); } } } catch ( Exception e ) { Log . i ( TAG , \"Error:\" + e ); } } @Override public void onSurfaceTextureSizeChanged ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureSizeChanged\" ); } @Override public boolean onSurfaceTextureDestroyed ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureDestroyed\" ); return false ; } @Override public void onSurfaceTextureUpdated ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureUpdated\" ); } } CaptureSession\u306e\u751f\u6210 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.content.Context ; import android.graphics.SurfaceTexture ; import android.os.Bundle ; import android.util.Log ; import android.util.Size ; import android.view.Surface ; import android.view.TextureView ; import android.hardware.camera2.* ; import android.hardware.camera2.params.StreamConfigurationMap ; import android.hardware.camera2.CameraCharacteristics ; import java.util.Arrays ; public class MainActivity extends Activity implements TextureView . SurfaceTextureListener { /** * TextureView */ private TextureView mTextureView ; /** * SurfaceTexture */ private SurfaceTexture mSurfaceTexture ; /** * Surface */ private Surface mSurface ; /** * CameraSize */ private Size mCameraSize ; /** * CameraDevice */ private CameraDevice mCameraDevice ; /** * CaptureRequestBuilder */ private CaptureRequest . Builder mCaptureRequestBuilder ; /** * Log\u7528\u306eTag */ private static final String TAG = \"CAMERA\" ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextureView\u3092activity_main\u304b\u3089\u53d6\u308a\u8fbc\u307f mTextureView = ( TextureView ) findViewById ( R . id . camera_texture_view ); // TextureView\u306e\u30ea\u30b9\u30bf\u30fc\u3092\u8a2d\u5b9a mTextureView . setSurfaceTextureListener ( this ); // SurfaceTexture\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97 mSurfaceTexture = mTextureView . getSurfaceTexture (); } // CameraDevice\u306eStateCallback CameraDevice . StateCallback mDeviceCallback = new CameraDevice . StateCallback () { @Override public void onDisconnected ( CameraDevice device ){ Log . i ( TAG , \"onDisconnected\" ); } @Override public void onError ( CameraDevice device , int error ){ Log . i ( TAG , \"onError\" ); } @Override public void onOpened ( CameraDevice device ){ Log . i ( TAG , \"onOpened\" ); // CaptureRequest\u306e\u751f\u6210 try { mCaptureRequestBuilder = mCameraDevice . createCaptureRequest ( CameraDevice . TEMPLATE_PREVIEW ); } catch ( CameraAccessException e ) { e . printStackTrace (); } // Request\u306b\u53d6\u5f97\u3057\u305fSurface\u3092\u8a2d\u5b9a mCaptureRequestBuilder . addTarget ( mSurface ); // SurfaceTexture\u306b\u30b5\u30a4\u30ba\u3092\u8a2d\u5b9a mSurfaceTexture . setDefaultBufferSize ( mCameraSize . getWidth (), mCameraSize . getHeight ()); // CaptureSession\u306e\u751f\u6210 try { mCameraDevice . createCaptureSession ( Arrays . asList ( mSurface ), mCaptureSessionCallback , null ); } catch ( CameraAccessException e ) { e . printStackTrace (); } } }; // CameraCaptureSession\u306eStateCallback CameraCaptureSession . StateCallback mCaptureSessionCallback = new CameraCaptureSession . StateCallback () { @Override public void onConfigured ( CameraCaptureSession session ){ Log . i ( TAG , \"onConfigured\" ); } @Override public void onConfigureFailed ( CameraCaptureSession session ){ Log . i ( TAG , \"onConfigureFailed\" ); } }; @Override public void onSurfaceTextureAvailable ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureAvailable\" ); mSurfaceTexture = surface ; mSurface = new Surface ( mSurfaceTexture ); try { CameraManager manager = ( CameraManager ) getSystemService ( Context . CAMERA_SERVICE ); for ( String cameraId : manager . getCameraIdList ()){ Log . i ( TAG , \"cameraId:\" + cameraId ); // \u53d6\u5f97\u3057\u305fCameraId\u304b\u3089\u30ad\u30e3\u30e9\u30b9\u30bf\u30ea\u30b9\u30c1\u30af\u30b9\u3092\u53d6\u5f97 CameraCharacteristics characteristics = manager . getCameraCharacteristics ( cameraId ); // Front\u30ab\u30e1\u30e9\u306e\u5834\u5408 if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_FRONT ) { Log . i ( TAG , \"FrontCamera\" ); // Map\u3092\u53d6\u5f97 StreamConfigurationMap map = characteristics . get ( CameraCharacteristics . SCALER_STREAM_CONFIGURATION_MAP ); // \u30b5\u30a4\u30ba\u306e\u4e00\u89a7\u3092\u53d6\u5f97 Size [] mOutputSize = map . getOutputSizes ( SurfaceTexture . class ); for ( int i = 0 ; i < mOutputSize . length ; i ++ ) { Log . i ( TAG , \"size[\" + i + \"]\" + mOutputSize [ i ] . toString ()); } // \u30ab\u30e1\u30e9\u30b5\u30a4\u30ba0\u756a\u76ee\u3092Global\u306a\u95a2\u6570\u306b\u683c\u7d0d mCameraSize = map . getOutputSizes ( SurfaceTexture . class ) [ 0 ] ; // \u30ab\u30e1\u30e9\u3092\u30aa\u30fc\u30d7\u30f3 manager . openCamera ( cameraId , mDeviceCallback , null ); } // Back\u30ab\u30e1\u30e9\u306e\u5834\u5408 else if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_BACK ) { Log . i ( TAG , \"BackCamera\" ); } } } catch ( Exception e ) { Log . i ( TAG , \"Error:\" + e ); } } @Override public void onSurfaceTextureSizeChanged ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureSizeChanged\" ); } @Override public boolean onSurfaceTextureDestroyed ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureDestroyed\" ); return false ; } @Override public void onSurfaceTextureUpdated ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureUpdated\" ); } } RepestSession\u306e\u751f\u6210 MainActivity.javapackage utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.content.Context ; import android.graphics.SurfaceTexture ; import android.os.Bundle ; import android.util.Log ; import android.util.Size ; import android.view.Surface ; import android.view.TextureView ; import android.hardware.camera2.* ; import android.hardware.camera2.params.StreamConfigurationMap ; import android.hardware.camera2.CameraCharacteristics ; import java.util.Arrays ; public class MainActivity extends Activity implements TextureView . SurfaceTextureListener { /** * TextureView */ private TextureView mTextureView ; /** * SurfaceTexture */ private SurfaceTexture mSurfaceTexture ; /** * Surface */ private Surface mSurface ; /** * CameraSize */ private Size mCameraSize ; /** * CameraDevice */ private CameraDevice mCameraDevice ; /** * CaptureRequestBuilder */ private CaptureRequest . Builder mCaptureRequestBuilder ; /** * Log\u7528\u306eTag */ private static final String TAG = \"CAMERA\" ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextureView\u3092activity_main\u304b\u3089\u53d6\u308a\u8fbc\u307f mTextureView = ( TextureView ) findViewById ( R . id . camera_texture_view ); // TextureView\u306e\u30ea\u30b9\u30bf\u30fc\u3092\u8a2d\u5b9a mTextureView . setSurfaceTextureListener ( this ); // SurfaceTexture\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97 mSurfaceTexture = mTextureView . getSurfaceTexture (); } // CameraDevice\u306eStateCallback CameraDevice . StateCallback mDeviceCallback = new CameraDevice . StateCallback () { @Override public void onDisconnected ( CameraDevice device ){ Log . i ( TAG , \"onDisconnected\" ); } @Override public void onError ( CameraDevice device , int error ){ Log . i ( TAG , \"onError\" ); } @Override public void onOpened ( CameraDevice device ){ Log . i ( TAG , \"onOpened\" ); // Global\u306a\u5024\u306b(onPause\u6642\u306bclose\u3059\u308b\u305f\u3081) mCameraDevice = device ; // CaptureRequest\u306e\u751f\u6210 try { mCaptureRequestBuilder = mCameraDevice . createCaptureRequest ( CameraDevice . TEMPLATE_PREVIEW ); } catch ( CameraAccessException e ) { e . printStackTrace (); } // Request\u306b\u53d6\u5f97\u3057\u305fSurface\u3092\u8a2d\u5b9a mCaptureRequestBuilder . addTarget ( mSurface ); // SurfaceTexture\u306b\u30b5\u30a4\u30ba\u3092\u8a2d\u5b9a mSurfaceTexture . setDefaultBufferSize ( mCameraSize . getWidth (), mCameraSize . getHeight ()); // CaptureSession\u306e\u751f\u6210 try { mCameraDevice . createCaptureSession ( Arrays . asList ( mSurface ), mCaptureSessionCallback , null ); } catch ( CameraAccessException e ) { e . printStackTrace (); } } }; // CameraCaptureSession\u306eStateCallback CameraCaptureSession . StateCallback mCaptureSessionCallback = new CameraCaptureSession . StateCallback () { @Override public void onConfigured ( CameraCaptureSession session ){ Log . i ( TAG , \"onConfigured\" ); try { session . setRepeatingRequest ( mCaptureRequestBuilder . build (), mCaptureCallback , null ); } catch ( CameraAccessException e ) { e . printStackTrace (); } } @Override public void onConfigureFailed ( CameraCaptureSession session ) { Log . i ( TAG , \"onConfigureFailed\" ); } }; // CaptureSession\u306eCallback CameraCaptureSession . CaptureCallback mCaptureCallback = new CameraCaptureSession . CaptureCallback () { @Override public void onCaptureCompleted ( CameraCaptureSession session , CaptureRequest request , TotalCaptureResult result ) { Log . i ( TAG , \"onCaptureCompleted\" ); } }; @Override public void onSurfaceTextureAvailable ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureAvailable\" ); mSurfaceTexture = surface ; mSurface = new Surface ( mSurfaceTexture ); try { CameraManager manager = ( CameraManager ) getSystemService ( Context . CAMERA_SERVICE ); for ( String cameraId : manager . getCameraIdList ()){ Log . i ( TAG , \"cameraId:\" + cameraId ); // \u53d6\u5f97\u3057\u305fCameraId\u304b\u3089\u30ad\u30e3\u30e9\u30b9\u30bf\u30ea\u30b9\u30c1\u30af\u30b9\u3092\u53d6\u5f97 CameraCharacteristics characteristics = manager . getCameraCharacteristics ( cameraId ); // Front\u30ab\u30e1\u30e9\u306e\u5834\u5408 if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_FRONT ) { Log . i ( TAG , \"FrontCamera\" ); // Map\u3092\u53d6\u5f97 StreamConfigurationMap map = characteristics . get ( CameraCharacteristics . SCALER_STREAM_CONFIGURATION_MAP ); // \u30b5\u30a4\u30ba\u306e\u4e00\u89a7\u3092\u53d6\u5f97 Size [] mOutputSize = map . getOutputSizes ( SurfaceTexture . class ); for ( int i = 0 ; i < mOutputSize . length ; i ++ ) { Log . i ( TAG , \"size[\" + i + \"]\" + mOutputSize [ i ] . toString ()); } // \u30ab\u30e1\u30e9\u30b5\u30a4\u30ba0\u756a\u76ee\u3092Global\u306a\u95a2\u6570\u306b\u683c\u7d0d mCameraSize = map . getOutputSizes ( SurfaceTexture . class ) [ 0 ] ; // \u30ab\u30e1\u30e9\u3092\u30aa\u30fc\u30d7\u30f3 manager . openCamera ( cameraId , mDeviceCallback , null ); } // Back\u30ab\u30e1\u30e9\u306e\u5834\u5408 else if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_BACK ) { Log . i ( TAG , \"BackCamera\" ); } } } catch ( Exception e ) { Log . i ( TAG , \"Error:\" + e ); } } @Override public void onSurfaceTextureSizeChanged ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureSizeChanged\" ); } @Override public boolean onSurfaceTextureDestroyed ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureDestroyed\" ); return false ; } @Override public void onSurfaceTextureUpdated ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureUpdated\" ); } @Override protected void onPause () { super . onPause (); if ( mCameraDevice == null ) { return ; } mCameraDevice . close (); } }","title":"Camera\u3092\u30aa\u30fc\u30d7\u30f3"},{"location":"camera203/#camera","text":"","title":"Camera\u3092\u30aa\u30fc\u30d7\u30f3"},{"location":"camera203/#cameraopen","text":"StateCallback\u306e\u5909\u6570\u3092\u5b9a\u7fa9\u3057\u3001Camera\u3092Open\u3057\u307e\u3059\u3002StateCallback\u306eonOpen()\u3067\u53d6\u5f97\u3067\u304d\u308bdevice\u3092\u7528\u3044\u3066\u3001\u30ab\u30e1\u30e9\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.content.Context ; import android.graphics.SurfaceTexture ; import android.os.Bundle ; import android.util.Log ; import android.util.Size ; import android.view.Surface ; import android.view.TextureView ; import android.hardware.camera2.* ; import android.hardware.camera2.params.StreamConfigurationMap ; import android.hardware.camera2.CameraCharacteristics ; public class MainActivity extends Activity implements TextureView . SurfaceTextureListener { /** * TextureView */ private TextureView mTextureView ; /** * SurfaceTexture */ private SurfaceTexture mSurfaceTexture ; /** * Surface */ private Surface mSurface ; /** * CameraSize */ private Size mCameraSize ; /** * Log\u7528\u306eTag */ private static final String TAG = \"CAMERA\" ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextureView\u3092activity_main\u304b\u3089\u53d6\u308a\u8fbc\u307f mTextureView = ( TextureView ) findViewById ( R . id . camera_texture_view ); // TextureView\u306e\u30ea\u30b9\u30bf\u30fc\u3092\u8a2d\u5b9a mTextureView . setSurfaceTextureListener ( this ); // SurfaceTexture\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97 mSurfaceTexture = mTextureView . getSurfaceTexture (); } // CameraDevice\u306eStateCallback CameraDevice . StateCallback mDeviceCallback = new CameraDevice . StateCallback () { @Override public void onDisconnected ( CameraDevice device ){ Log . i ( TAG , \"onDisconnected\" ); } @Override public void onError ( CameraDevice device , int error ){ Log . i ( TAG , \"onError\" ); } @Override public void onOpened ( CameraDevice device ){ Log . i ( TAG , \"onOpened\" ); } }; @Override public void onSurfaceTextureAvailable ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureAvailable\" ); mSurfaceTexture = surface ; mSurface = new Surface ( mSurfaceTexture ); try { CameraManager manager = ( CameraManager ) getSystemService ( Context . CAMERA_SERVICE ); for ( String cameraId : manager . getCameraIdList ()){ Log . i ( TAG , \"cameraId:\" + cameraId ); // \u53d6\u5f97\u3057\u305fCameraId\u304b\u3089\u30ad\u30e3\u30e9\u30b9\u30bf\u30ea\u30b9\u30c1\u30af\u30b9\u3092\u53d6\u5f97 CameraCharacteristics characteristics = manager . getCameraCharacteristics ( cameraId ); // Front\u30ab\u30e1\u30e9\u306e\u5834\u5408 if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_FRONT ) { Log . i ( TAG , \"FrontCamera\" ); // Map\u3092\u53d6\u5f97 StreamConfigurationMap map = characteristics . get ( CameraCharacteristics . SCALER_STREAM_CONFIGURATION_MAP ); // \u30b5\u30a4\u30ba\u306e\u4e00\u89a7\u3092\u53d6\u5f97 Size [] mOutputSize = map . getOutputSizes ( SurfaceTexture . class ); for ( int i = 0 ; i < mOutputSize . length ; i ++ ) { Log . i ( TAG , \"size[\" + i + \"]\" + mOutputSize [ i ] . toString ()); } // \u30ab\u30e1\u30e9\u30b5\u30a4\u30ba0\u756a\u76ee\u3092Global\u306a\u95a2\u6570\u306b\u683c\u7d0d mCameraSize = map . getOutputSizes ( SurfaceTexture . class ) [ 0 ] ; // \u30ab\u30e1\u30e9\u3092\u30aa\u30fc\u30d7\u30f3 manager . openCamera ( cameraId , mDeviceCallback , null ); } // Back\u30ab\u30e1\u30e9\u306e\u5834\u5408 else if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_BACK ) { Log . i ( TAG , \"BackCamera\" ); } } } catch ( Exception e ) { Log . i ( TAG , \"Error:\" + e ); } } @Override public void onSurfaceTextureSizeChanged ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureSizeChanged\" ); } @Override public boolean onSurfaceTextureDestroyed ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureDestroyed\" ); return false ; } @Override public void onSurfaceTextureUpdated ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureUpdated\" ); } }","title":"Camera\u306eOpen"},{"location":"camera203/#capturesession","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 package utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.content.Context ; import android.graphics.SurfaceTexture ; import android.os.Bundle ; import android.util.Log ; import android.util.Size ; import android.view.Surface ; import android.view.TextureView ; import android.hardware.camera2.* ; import android.hardware.camera2.params.StreamConfigurationMap ; import android.hardware.camera2.CameraCharacteristics ; import java.util.Arrays ; public class MainActivity extends Activity implements TextureView . SurfaceTextureListener { /** * TextureView */ private TextureView mTextureView ; /** * SurfaceTexture */ private SurfaceTexture mSurfaceTexture ; /** * Surface */ private Surface mSurface ; /** * CameraSize */ private Size mCameraSize ; /** * CameraDevice */ private CameraDevice mCameraDevice ; /** * CaptureRequestBuilder */ private CaptureRequest . Builder mCaptureRequestBuilder ; /** * Log\u7528\u306eTag */ private static final String TAG = \"CAMERA\" ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextureView\u3092activity_main\u304b\u3089\u53d6\u308a\u8fbc\u307f mTextureView = ( TextureView ) findViewById ( R . id . camera_texture_view ); // TextureView\u306e\u30ea\u30b9\u30bf\u30fc\u3092\u8a2d\u5b9a mTextureView . setSurfaceTextureListener ( this ); // SurfaceTexture\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97 mSurfaceTexture = mTextureView . getSurfaceTexture (); } // CameraDevice\u306eStateCallback CameraDevice . StateCallback mDeviceCallback = new CameraDevice . StateCallback () { @Override public void onDisconnected ( CameraDevice device ){ Log . i ( TAG , \"onDisconnected\" ); } @Override public void onError ( CameraDevice device , int error ){ Log . i ( TAG , \"onError\" ); } @Override public void onOpened ( CameraDevice device ){ Log . i ( TAG , \"onOpened\" ); // CaptureRequest\u306e\u751f\u6210 try { mCaptureRequestBuilder = mCameraDevice . createCaptureRequest ( CameraDevice . TEMPLATE_PREVIEW ); } catch ( CameraAccessException e ) { e . printStackTrace (); } // Request\u306b\u53d6\u5f97\u3057\u305fSurface\u3092\u8a2d\u5b9a mCaptureRequestBuilder . addTarget ( mSurface ); // SurfaceTexture\u306b\u30b5\u30a4\u30ba\u3092\u8a2d\u5b9a mSurfaceTexture . setDefaultBufferSize ( mCameraSize . getWidth (), mCameraSize . getHeight ()); // CaptureSession\u306e\u751f\u6210 try { mCameraDevice . createCaptureSession ( Arrays . asList ( mSurface ), mCaptureSessionCallback , null ); } catch ( CameraAccessException e ) { e . printStackTrace (); } } }; // CameraCaptureSession\u306eStateCallback CameraCaptureSession . StateCallback mCaptureSessionCallback = new CameraCaptureSession . StateCallback () { @Override public void onConfigured ( CameraCaptureSession session ){ Log . i ( TAG , \"onConfigured\" ); } @Override public void onConfigureFailed ( CameraCaptureSession session ){ Log . i ( TAG , \"onConfigureFailed\" ); } }; @Override public void onSurfaceTextureAvailable ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureAvailable\" ); mSurfaceTexture = surface ; mSurface = new Surface ( mSurfaceTexture ); try { CameraManager manager = ( CameraManager ) getSystemService ( Context . CAMERA_SERVICE ); for ( String cameraId : manager . getCameraIdList ()){ Log . i ( TAG , \"cameraId:\" + cameraId ); // \u53d6\u5f97\u3057\u305fCameraId\u304b\u3089\u30ad\u30e3\u30e9\u30b9\u30bf\u30ea\u30b9\u30c1\u30af\u30b9\u3092\u53d6\u5f97 CameraCharacteristics characteristics = manager . getCameraCharacteristics ( cameraId ); // Front\u30ab\u30e1\u30e9\u306e\u5834\u5408 if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_FRONT ) { Log . i ( TAG , \"FrontCamera\" ); // Map\u3092\u53d6\u5f97 StreamConfigurationMap map = characteristics . get ( CameraCharacteristics . SCALER_STREAM_CONFIGURATION_MAP ); // \u30b5\u30a4\u30ba\u306e\u4e00\u89a7\u3092\u53d6\u5f97 Size [] mOutputSize = map . getOutputSizes ( SurfaceTexture . class ); for ( int i = 0 ; i < mOutputSize . length ; i ++ ) { Log . i ( TAG , \"size[\" + i + \"]\" + mOutputSize [ i ] . toString ()); } // \u30ab\u30e1\u30e9\u30b5\u30a4\u30ba0\u756a\u76ee\u3092Global\u306a\u95a2\u6570\u306b\u683c\u7d0d mCameraSize = map . getOutputSizes ( SurfaceTexture . class ) [ 0 ] ; // \u30ab\u30e1\u30e9\u3092\u30aa\u30fc\u30d7\u30f3 manager . openCamera ( cameraId , mDeviceCallback , null ); } // Back\u30ab\u30e1\u30e9\u306e\u5834\u5408 else if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_BACK ) { Log . i ( TAG , \"BackCamera\" ); } } } catch ( Exception e ) { Log . i ( TAG , \"Error:\" + e ); } } @Override public void onSurfaceTextureSizeChanged ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureSizeChanged\" ); } @Override public boolean onSurfaceTextureDestroyed ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureDestroyed\" ); return false ; } @Override public void onSurfaceTextureUpdated ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureUpdated\" ); } }","title":"CaptureSession\u306e\u751f\u6210"},{"location":"camera203/#repestsession","text":"MainActivity.javapackage utsunomiya.gclue.com.camerasample ; import android.app.Activity ; import android.content.Context ; import android.graphics.SurfaceTexture ; import android.os.Bundle ; import android.util.Log ; import android.util.Size ; import android.view.Surface ; import android.view.TextureView ; import android.hardware.camera2.* ; import android.hardware.camera2.params.StreamConfigurationMap ; import android.hardware.camera2.CameraCharacteristics ; import java.util.Arrays ; public class MainActivity extends Activity implements TextureView . SurfaceTextureListener { /** * TextureView */ private TextureView mTextureView ; /** * SurfaceTexture */ private SurfaceTexture mSurfaceTexture ; /** * Surface */ private Surface mSurface ; /** * CameraSize */ private Size mCameraSize ; /** * CameraDevice */ private CameraDevice mCameraDevice ; /** * CaptureRequestBuilder */ private CaptureRequest . Builder mCaptureRequestBuilder ; /** * Log\u7528\u306eTag */ private static final String TAG = \"CAMERA\" ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextureView\u3092activity_main\u304b\u3089\u53d6\u308a\u8fbc\u307f mTextureView = ( TextureView ) findViewById ( R . id . camera_texture_view ); // TextureView\u306e\u30ea\u30b9\u30bf\u30fc\u3092\u8a2d\u5b9a mTextureView . setSurfaceTextureListener ( this ); // SurfaceTexture\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97 mSurfaceTexture = mTextureView . getSurfaceTexture (); } // CameraDevice\u306eStateCallback CameraDevice . StateCallback mDeviceCallback = new CameraDevice . StateCallback () { @Override public void onDisconnected ( CameraDevice device ){ Log . i ( TAG , \"onDisconnected\" ); } @Override public void onError ( CameraDevice device , int error ){ Log . i ( TAG , \"onError\" ); } @Override public void onOpened ( CameraDevice device ){ Log . i ( TAG , \"onOpened\" ); // Global\u306a\u5024\u306b(onPause\u6642\u306bclose\u3059\u308b\u305f\u3081) mCameraDevice = device ; // CaptureRequest\u306e\u751f\u6210 try { mCaptureRequestBuilder = mCameraDevice . createCaptureRequest ( CameraDevice . TEMPLATE_PREVIEW ); } catch ( CameraAccessException e ) { e . printStackTrace (); } // Request\u306b\u53d6\u5f97\u3057\u305fSurface\u3092\u8a2d\u5b9a mCaptureRequestBuilder . addTarget ( mSurface ); // SurfaceTexture\u306b\u30b5\u30a4\u30ba\u3092\u8a2d\u5b9a mSurfaceTexture . setDefaultBufferSize ( mCameraSize . getWidth (), mCameraSize . getHeight ()); // CaptureSession\u306e\u751f\u6210 try { mCameraDevice . createCaptureSession ( Arrays . asList ( mSurface ), mCaptureSessionCallback , null ); } catch ( CameraAccessException e ) { e . printStackTrace (); } } }; // CameraCaptureSession\u306eStateCallback CameraCaptureSession . StateCallback mCaptureSessionCallback = new CameraCaptureSession . StateCallback () { @Override public void onConfigured ( CameraCaptureSession session ){ Log . i ( TAG , \"onConfigured\" ); try { session . setRepeatingRequest ( mCaptureRequestBuilder . build (), mCaptureCallback , null ); } catch ( CameraAccessException e ) { e . printStackTrace (); } } @Override public void onConfigureFailed ( CameraCaptureSession session ) { Log . i ( TAG , \"onConfigureFailed\" ); } }; // CaptureSession\u306eCallback CameraCaptureSession . CaptureCallback mCaptureCallback = new CameraCaptureSession . CaptureCallback () { @Override public void onCaptureCompleted ( CameraCaptureSession session , CaptureRequest request , TotalCaptureResult result ) { Log . i ( TAG , \"onCaptureCompleted\" ); } }; @Override public void onSurfaceTextureAvailable ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureAvailable\" ); mSurfaceTexture = surface ; mSurface = new Surface ( mSurfaceTexture ); try { CameraManager manager = ( CameraManager ) getSystemService ( Context . CAMERA_SERVICE ); for ( String cameraId : manager . getCameraIdList ()){ Log . i ( TAG , \"cameraId:\" + cameraId ); // \u53d6\u5f97\u3057\u305fCameraId\u304b\u3089\u30ad\u30e3\u30e9\u30b9\u30bf\u30ea\u30b9\u30c1\u30af\u30b9\u3092\u53d6\u5f97 CameraCharacteristics characteristics = manager . getCameraCharacteristics ( cameraId ); // Front\u30ab\u30e1\u30e9\u306e\u5834\u5408 if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_FRONT ) { Log . i ( TAG , \"FrontCamera\" ); // Map\u3092\u53d6\u5f97 StreamConfigurationMap map = characteristics . get ( CameraCharacteristics . SCALER_STREAM_CONFIGURATION_MAP ); // \u30b5\u30a4\u30ba\u306e\u4e00\u89a7\u3092\u53d6\u5f97 Size [] mOutputSize = map . getOutputSizes ( SurfaceTexture . class ); for ( int i = 0 ; i < mOutputSize . length ; i ++ ) { Log . i ( TAG , \"size[\" + i + \"]\" + mOutputSize [ i ] . toString ()); } // \u30ab\u30e1\u30e9\u30b5\u30a4\u30ba0\u756a\u76ee\u3092Global\u306a\u95a2\u6570\u306b\u683c\u7d0d mCameraSize = map . getOutputSizes ( SurfaceTexture . class ) [ 0 ] ; // \u30ab\u30e1\u30e9\u3092\u30aa\u30fc\u30d7\u30f3 manager . openCamera ( cameraId , mDeviceCallback , null ); } // Back\u30ab\u30e1\u30e9\u306e\u5834\u5408 else if ( characteristics . get ( CameraCharacteristics . LENS_FACING ) == CameraCharacteristics . LENS_FACING_BACK ) { Log . i ( TAG , \"BackCamera\" ); } } } catch ( Exception e ) { Log . i ( TAG , \"Error:\" + e ); } } @Override public void onSurfaceTextureSizeChanged ( SurfaceTexture surface , int width , int height ) { Log . i ( TAG , \"onSurfaceTextureSizeChanged\" ); } @Override public boolean onSurfaceTextureDestroyed ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureDestroyed\" ); return false ; } @Override public void onSurfaceTextureUpdated ( SurfaceTexture surface ) { Log . i ( TAG , \"onSurfaceTextureUpdated\" ); } @Override protected void onPause () { super . onPause (); if ( mCameraDevice == null ) { return ; } mCameraDevice . close (); } }","title":"RepestSession\u306e\u751f\u6210"},{"location":"intent00/","text":"Intent \u6697\u9ed9\u7684Intent \u30ab\u30e1\u30e9\u64cd\u4f5c \u30d3\u30c7\u30aa\u64cd\u4f5c Intent\u3092\u4f5c\u6210\u3059\u308b","title":"Intent"},{"location":"intent00/#intent","text":"\u6697\u9ed9\u7684Intent \u30ab\u30e1\u30e9\u64cd\u4f5c \u30d3\u30c7\u30aa\u64cd\u4f5c Intent\u3092\u4f5c\u6210\u3059\u308b","title":"Intent"},{"location":"intent01/","text":"\u6697\u793a\u7684Intent \u6697\u793a\u7684Intent\u3067\u306f\u3001\u4e0b\u8a18\u306e4\u9805\u76ee\u3092\u6307\u5b9a\u3059\u308b\u4e8b\u3067\u3001\u305d\u308c\u306b\u95a2\u9023\u3059\u308bActivity\u3092\u8d77\u52d5\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 ACTION CATEGORY DATA TYPE MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.Intent ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButton . setOnClickListener ( this ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )){ Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_MAIN ); startActivity ( testIntent ); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> </RelativeLayout> Intent.ACTION_VIEW MainActivity.java 1 2 3 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); startActivity ( testIntent ); ACTION_DIAL MainActivity.java 1 2 3 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_DIAL ); startActivity ( testIntent ); Action\u3068Category\u3092\u6307\u5b9a MainActivity.java 1 2 3 4 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_MAIN ); testIntent . addCategory ( Intent . CATEGORY_DEFAULT ); startActivity ( testIntent ); Action\u3068Category\u3092\u6307\u5b9a MainActivity.java 1 2 3 4 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_MAIN ); testIntent . addCategory ( Intent . CATEGORY_LAUNCHER ); startActivity ( testIntent ); ACTION\u3068DATA\u3092\u6307\u5b9a Browser\u3092\u8d77\u52d5 MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); Uri uri = Uri . parse ( \"http://www.gclue.com/\" ); testIntent . setData ( uri ); startActivity ( testIntent ); Map\u3092\u8d77\u52d5(\u7def\u5ea6/\u7d4c\u5ea6) MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); Uri uri = Uri . parse ( \"geo:35.658625,139.745415\" ); testIntent . setData ( uri ); startActivity ( testIntent ); Map\u3092\u8d77\u52d5(\u691c\u7d22\u30ef\u30fc\u30c9) MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); Uri uri = Uri . parse ( \"geo:0,0?q=sendai\" ); testIntent . setData ( uri ); startActivity ( testIntent ); \u524a\u9664 \u81ea\u5206\u81ea\u8eab\u3092\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u6307\u5b9a\u3057\u3066\u524a\u9664\u3059\u308b MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_DELETE ); Uri uri = Uri . fromParts ( \"package\" , \"utsunomiya.gclue.com.intentsample\" , null ); testIntent . setData ( uri ); startActivity ( testIntent ); \u96fb\u8a71\u3092\u304b\u3051\u308b MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_DIAL ); Uri uri = Uri . parse ( \"tel:11111111111111\" ); testIntent . setData ( uri ); startActivity ( testIntent ); \u30e1\u30fc\u30eb\u3092\u9001\u308b MainActivity.java 1 2 3 4 5 6 7 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_SENDTO ); Uri uri = Uri . parse ( \"mailto:test@gclue.jp\" ); testIntent . setData ( uri ); testIntent . putExtra ( Intent . EXTRA_SUBJECT , \"Subject\" ); testIntent . putExtra ( Intent . EXTRA_TEXT , \"Text of main\" ); startActivity ( testIntent ); \u691c\u7d22\u306e\u6a5f\u80fd\u3092\u3082\u3063\u305f\u30a2\u30d7\u30ea\u3092\u63a2\u3059 MainActivity.java 1 2 3 4 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_SEARCH ); testIntent . putExtra ( \"query\" , \"Android\" ); startActivity ( testIntent ); \u6587\u5b57\u5217\u3092\u4ed6\u306e\u30a2\u30d7\u30ea\u306b\u6e21\u3059 MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_SEND ); testIntent . setType ( \"text/plain\" ); testIntent . putExtra ( Intent . EXTRA_TEXT , \"Data sending\" ); startActivity ( testIntent ); Reference http://developer.android.com/intl/ja/reference/android/content/Intent.html","title":"\u6697\u793a\u7684Intent"},{"location":"intent01/#intent","text":"\u6697\u793a\u7684Intent\u3067\u306f\u3001\u4e0b\u8a18\u306e4\u9805\u76ee\u3092\u6307\u5b9a\u3059\u308b\u4e8b\u3067\u3001\u305d\u308c\u306b\u95a2\u9023\u3059\u308bActivity\u3092\u8d77\u52d5\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 ACTION CATEGORY DATA TYPE MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.Intent ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButton . setOnClickListener ( this ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )){ Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_MAIN ); startActivity ( testIntent ); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> </RelativeLayout>","title":"\u6697\u793a\u7684Intent"},{"location":"intent01/#intentaction_view","text":"MainActivity.java 1 2 3 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); startActivity ( testIntent );","title":"Intent.ACTION_VIEW"},{"location":"intent01/#action_dial","text":"MainActivity.java 1 2 3 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_DIAL ); startActivity ( testIntent );","title":"ACTION_DIAL"},{"location":"intent01/#actioncategory","text":"MainActivity.java 1 2 3 4 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_MAIN ); testIntent . addCategory ( Intent . CATEGORY_DEFAULT ); startActivity ( testIntent );","title":"Action\u3068Category\u3092\u6307\u5b9a"},{"location":"intent01/#actioncategory_1","text":"MainActivity.java 1 2 3 4 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_MAIN ); testIntent . addCategory ( Intent . CATEGORY_LAUNCHER ); startActivity ( testIntent );","title":"Action\u3068Category\u3092\u6307\u5b9a"},{"location":"intent01/#actiondata","text":"","title":"ACTION\u3068DATA\u3092\u6307\u5b9a"},{"location":"intent01/#browser","text":"MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); Uri uri = Uri . parse ( \"http://www.gclue.com/\" ); testIntent . setData ( uri ); startActivity ( testIntent );","title":"Browser\u3092\u8d77\u52d5"},{"location":"intent01/#map","text":"MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); Uri uri = Uri . parse ( \"geo:35.658625,139.745415\" ); testIntent . setData ( uri ); startActivity ( testIntent );","title":"Map\u3092\u8d77\u52d5(\u7def\u5ea6/\u7d4c\u5ea6)"},{"location":"intent01/#map_1","text":"MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); Uri uri = Uri . parse ( \"geo:0,0?q=sendai\" ); testIntent . setData ( uri ); startActivity ( testIntent );","title":"Map\u3092\u8d77\u52d5(\u691c\u7d22\u30ef\u30fc\u30c9)"},{"location":"intent01/#_1","text":"\u81ea\u5206\u81ea\u8eab\u3092\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u6307\u5b9a\u3057\u3066\u524a\u9664\u3059\u308b MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_DELETE ); Uri uri = Uri . fromParts ( \"package\" , \"utsunomiya.gclue.com.intentsample\" , null ); testIntent . setData ( uri ); startActivity ( testIntent );","title":"\u524a\u9664"},{"location":"intent01/#_2","text":"MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_DIAL ); Uri uri = Uri . parse ( \"tel:11111111111111\" ); testIntent . setData ( uri ); startActivity ( testIntent );","title":"\u96fb\u8a71\u3092\u304b\u3051\u308b"},{"location":"intent01/#_3","text":"MainActivity.java 1 2 3 4 5 6 7 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_SENDTO ); Uri uri = Uri . parse ( \"mailto:test@gclue.jp\" ); testIntent . setData ( uri ); testIntent . putExtra ( Intent . EXTRA_SUBJECT , \"Subject\" ); testIntent . putExtra ( Intent . EXTRA_TEXT , \"Text of main\" ); startActivity ( testIntent );","title":"\u30e1\u30fc\u30eb\u3092\u9001\u308b"},{"location":"intent01/#_4","text":"MainActivity.java 1 2 3 4 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_SEARCH ); testIntent . putExtra ( \"query\" , \"Android\" ); startActivity ( testIntent );","title":"\u691c\u7d22\u306e\u6a5f\u80fd\u3092\u3082\u3063\u305f\u30a2\u30d7\u30ea\u3092\u63a2\u3059"},{"location":"intent01/#_5","text":"MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_SEND ); testIntent . setType ( \"text/plain\" ); testIntent . putExtra ( Intent . EXTRA_TEXT , \"Data sending\" ); startActivity ( testIntent );","title":"\u6587\u5b57\u5217\u3092\u4ed6\u306e\u30a2\u30d7\u30ea\u306b\u6e21\u3059"},{"location":"intent01/#reference","text":"http://developer.android.com/intl/ja/reference/android/content/Intent.html","title":"Reference"},{"location":"intent03/","text":"Intent\u3067\u30ab\u30e1\u30e9\u3092\u64cd\u4f5c AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.ContentResolver ; import android.content.ContentValues ; import android.content.Intent ; import android.graphics.Bitmap ; import android.net.Uri ; import android.os.Bundle ; import android.os.Environment ; import android.provider.MediaStore ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.ImageView ; import android.widget.Toast ; import java.io.File ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; /** ImageView */ private ImageView mImageView ; /** \u5199\u771f\u64ae\u5f71\u6642\u306eRquestCode(\u4efb\u610f\u306e\u5024). */ static final int REQUEST_IMAGE_CAPTURE = 1 ; /** TAG. */ private final String TAG = \"INTENT\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButton . setOnClickListener ( this ); // xml\u304b\u3089ImageView\u3092\u53d6\u308a\u8fbc\u3080 mImageView = ( ImageView ) findViewById ( R . id . imageView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )){ // Action\u540d ACTION_IMAGE_CAPTURE\u306e\u30a4\u30f3\u30c6\u30f3\u30c8\u3092\u767a\u884c Intent takePictureIntent = new Intent ( MediaStore . ACTION_IMAGE_CAPTURE ); if ( takePictureIntent . resolveActivity ( getPackageManager ()) != null ) { startActivityForResult ( takePictureIntent , REQUEST_IMAGE_CAPTURE ); } } } @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { // requestCode\u304cREQUEST_IMAGE_CAPTURE\u306a\u3089\u753b\u9762\u306b\u8cbc\u308a\u4ed8\u3051\u308b if ( requestCode == REQUEST_IMAGE_CAPTURE && resultCode == RESULT_OK ) { Bundle extras = data . getExtras (); Bitmap imageBitmap = ( Bitmap ) extras . get ( \"data\" ); mImageView . setImageBitmap ( imageBitmap ); } } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> <ImageView android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:id= \"@+id/imageView\" /> </RelativeLayout>","title":"Intent\u3067\u30ab\u30e1\u30e9\u3092\u64cd\u4f5c"},{"location":"intent03/#intent","text":"AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.ContentResolver ; import android.content.ContentValues ; import android.content.Intent ; import android.graphics.Bitmap ; import android.net.Uri ; import android.os.Bundle ; import android.os.Environment ; import android.provider.MediaStore ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.ImageView ; import android.widget.Toast ; import java.io.File ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; /** ImageView */ private ImageView mImageView ; /** \u5199\u771f\u64ae\u5f71\u6642\u306eRquestCode(\u4efb\u610f\u306e\u5024). */ static final int REQUEST_IMAGE_CAPTURE = 1 ; /** TAG. */ private final String TAG = \"INTENT\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButton . setOnClickListener ( this ); // xml\u304b\u3089ImageView\u3092\u53d6\u308a\u8fbc\u3080 mImageView = ( ImageView ) findViewById ( R . id . imageView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )){ // Action\u540d ACTION_IMAGE_CAPTURE\u306e\u30a4\u30f3\u30c6\u30f3\u30c8\u3092\u767a\u884c Intent takePictureIntent = new Intent ( MediaStore . ACTION_IMAGE_CAPTURE ); if ( takePictureIntent . resolveActivity ( getPackageManager ()) != null ) { startActivityForResult ( takePictureIntent , REQUEST_IMAGE_CAPTURE ); } } } @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { // requestCode\u304cREQUEST_IMAGE_CAPTURE\u306a\u3089\u753b\u9762\u306b\u8cbc\u308a\u4ed8\u3051\u308b if ( requestCode == REQUEST_IMAGE_CAPTURE && resultCode == RESULT_OK ) { Bundle extras = data . getExtras (); Bitmap imageBitmap = ( Bitmap ) extras . get ( \"data\" ); mImageView . setImageBitmap ( imageBitmap ); } } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> <ImageView android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:id= \"@+id/imageView\" /> </RelativeLayout>","title":"Intent\u3067\u30ab\u30e1\u30e9\u3092\u64cd\u4f5c"},{"location":"intent04/","text":"Intent\u3067\u30d3\u30c7\u30aa\u3092\u64cd\u4f5c AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 < RelativeLayout xmlns : android = \"http://schemas.android.com/apk/res/android\" xmlns : tools = \"http://schemas.android.com/tools\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" android : paddingLeft = \"@dimen/activity_horizontal_margin\" android : paddingRight = \"@dimen/activity_horizontal_margin\" android : paddingTop = \"@dimen/activity_vertical_margin\" android : paddingBottom = \"@dimen/activity_vertical_margin\" tools : context = \".MainActivity\" > < Button android : layout_width = \"wrap_content\" android : layout_height = \"wrap_content\" android : text = \"Intent Sample\" android : id = \"@+id/button\" android : layout_alignParentTop = \"true\" android : layout_alignParentStart = \"true\" /> < Button android : layout_width = \"wrap_content\" android : layout_height = \"wrap_content\" android : text = \"Play\" android : id = \"@+id/buttonPlay\" android : layout_alignParentTop = \"true\" android : layout_toEndOf = \"@+id/button\" /> < VideoView android : layout_width = \"fill_parent\" android : layout_height = \"fill_parent\" android : id = \"@+id/videoView\" /> </ RelativeLayout > MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.ContentResolver ; import android.content.ContentValues ; import android.content.Intent ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.net.Uri ; import android.os.Bundle ; import android.os.Environment ; import android.provider.MediaStore ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.ImageView ; import android.widget.Toast ; import android.widget.VideoView ; import java.io.File ; import java.io.IOException ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; /** ButtonPlay. */ private Button mButtonPlay ; /** VideoView */ private VideoView mVideoView ; /** \u5199\u771f\u64ae\u5f71\u6642\u306eRquestCode(\u4efb\u610f\u306e\u5024). */ static final int REQUEST_VIDEO_CAPTURE = 1 ; /** TAG. */ private final String TAG = \"INTENT\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButton . setOnClickListener ( this ); mButtonPlay . setOnClickListener ( this ); // xml\u304b\u3089ImageView\u3092\u53d6\u308a\u8fbc\u3080 mVideoView = ( VideoView ) findViewById ( R . id . videoView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )) { Intent takeVideoIntent = new Intent ( MediaStore . ACTION_VIDEO_CAPTURE ); if ( takeVideoIntent . resolveActivity ( getPackageManager ()) != null ) { startActivityForResult ( takeVideoIntent , REQUEST_VIDEO_CAPTURE ); } } else if ( v . equals ( mButtonPlay )) { mVideoView . start (); } } @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { if ( requestCode == REQUEST_VIDEO_CAPTURE && resultCode == RESULT_OK ) { Uri mVideoUri = data . getData (); mVideoView . setVideoURI ( mVideoUri ); mVideoView . setVisibility ( View . VISIBLE ); } } }","title":"Intent\u3067\u30d3\u30c7\u30aa\u3092\u64cd\u4f5c"},{"location":"intent04/#intent","text":"AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 < RelativeLayout xmlns : android = \"http://schemas.android.com/apk/res/android\" xmlns : tools = \"http://schemas.android.com/tools\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" android : paddingLeft = \"@dimen/activity_horizontal_margin\" android : paddingRight = \"@dimen/activity_horizontal_margin\" android : paddingTop = \"@dimen/activity_vertical_margin\" android : paddingBottom = \"@dimen/activity_vertical_margin\" tools : context = \".MainActivity\" > < Button android : layout_width = \"wrap_content\" android : layout_height = \"wrap_content\" android : text = \"Intent Sample\" android : id = \"@+id/button\" android : layout_alignParentTop = \"true\" android : layout_alignParentStart = \"true\" /> < Button android : layout_width = \"wrap_content\" android : layout_height = \"wrap_content\" android : text = \"Play\" android : id = \"@+id/buttonPlay\" android : layout_alignParentTop = \"true\" android : layout_toEndOf = \"@+id/button\" /> < VideoView android : layout_width = \"fill_parent\" android : layout_height = \"fill_parent\" android : id = \"@+id/videoView\" /> </ RelativeLayout > MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.ContentResolver ; import android.content.ContentValues ; import android.content.Intent ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.net.Uri ; import android.os.Bundle ; import android.os.Environment ; import android.provider.MediaStore ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.ImageView ; import android.widget.Toast ; import android.widget.VideoView ; import java.io.File ; import java.io.IOException ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; /** ButtonPlay. */ private Button mButtonPlay ; /** VideoView */ private VideoView mVideoView ; /** \u5199\u771f\u64ae\u5f71\u6642\u306eRquestCode(\u4efb\u610f\u306e\u5024). */ static final int REQUEST_VIDEO_CAPTURE = 1 ; /** TAG. */ private final String TAG = \"INTENT\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButton . setOnClickListener ( this ); mButtonPlay . setOnClickListener ( this ); // xml\u304b\u3089ImageView\u3092\u53d6\u308a\u8fbc\u3080 mVideoView = ( VideoView ) findViewById ( R . id . videoView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )) { Intent takeVideoIntent = new Intent ( MediaStore . ACTION_VIDEO_CAPTURE ); if ( takeVideoIntent . resolveActivity ( getPackageManager ()) != null ) { startActivityForResult ( takeVideoIntent , REQUEST_VIDEO_CAPTURE ); } } else if ( v . equals ( mButtonPlay )) { mVideoView . start (); } } @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { if ( requestCode == REQUEST_VIDEO_CAPTURE && resultCode == RESULT_OK ) { Uri mVideoUri = data . getData (); mVideoView . setVideoURI ( mVideoUri ); mVideoView . setVisibility ( View . VISIBLE ); } } }","title":"Intent\u3067\u30d3\u30c7\u30aa\u3092\u64cd\u4f5c"},{"location":"intent05/","text":"Intent\u3092\u4f5c\u6210\u3059\u308b Intent\u3092\u547c\u3073\u51fa\u3059\u624b\u6bb5 \u660e\u793a\u7684\u306aIntent\u8d77\u52d5 \u6697\u9ed9\u7684\u306aIntent\u8d77\u52d5 \u304c\u3042\u308a\u307e\u3059\u3002\u660e\u793a\u7684\u306aIntent\u8d77\u52d5\u3067\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3068\u30af\u30e9\u30b9\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u660e\u793a\u7684\u306aIntent\u3067\u306f\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u660e\u793a\u7684 1 2 3 Intent selectIntent = new Intent (); selectIntent . setClassName ( \"com.example.intentcooperationsample\" , \"com.example.intentcooperationsample.MyActivity\" ); startActivityForResult ( selectIntent , 1 ); \u6697\u9ed9\u7684 1 2 3 Uri uri = Uri . parse ( \"http://www.gclue.com/\" ); Intent browserIntent = new Intent ( Intent . ACTION_VIEW , uri ); startActivity ( browserIntent ); AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> Intenr-filter\u30bf\u30b0\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u304b\u3051\u308b 1 2 3 4 5 <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> \u547c\u3073\u51fa\u3057\u6642\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9 \u547c\u3073\u51fa\u3057\u5074 Intent\u306e\u8a18\u8ff0 1 2 Intent mIntent = new Intent(); mIntent.setAction(\"\u30a2\u30af\u30b7\u30e7\u30f3\u540d\"); Activity\u3092\u547c\u3073\u51fa\u3059 - startActivity(\u30a4\u30f3\u30c6\u30f3\u30c8) - startActivityForResult(\u30a4\u30f3\u30c6\u30f3\u30c8) Service\u3092\u547c\u3073\u51fa\u3059 - startService(\u30a4\u30f3\u30c6\u30f3\u30c8) Broadcast - sendBroadcast(\u30a4\u30f3\u30c6\u30f3\u30c8) \u53d7\u4fe1\u5074Activity\u3092\u4f5c\u6210\u3059\u308b IntentActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.Intent ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; public class IntentActivity extends Activity implements View . OnClickListener { /** \u623b\u308b\u30dc\u30bf\u30f3. */ private Button mButtonBack ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . intent_activity ); mButtonBack = ( Button ) findViewById ( R . id . buttonBack ); mButtonBack . setOnClickListener ( this ); } @Override public void onClick ( View v ) { if ( v . equals ( mButtonBack )){ Intent myIntent = new Intent (); myIntent . putExtra ( \"RESULT\" , \"result of Intent\" ); setResult ( 1 , myIntent ); this . finish (); } } } intent_activity.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Back\" android:id= \"@+id/buttonBack\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> </RelativeLayout> \u9001\u4fe1\u5074 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.ContentResolver ; import android.content.ContentValues ; import android.content.Intent ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.net.Uri ; import android.os.Bundle ; import android.os.Environment ; import android.provider.MediaStore ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.ImageView ; import android.widget.Toast ; import android.widget.VideoView ; import java.io.File ; import java.io.IOException ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; /** \u30a4\u30f3\u30c6\u30f3\u30c8\u547c\u3073\u51fa\u3057\u6642\u306eRquestCode(\u4efb\u610f\u306e\u5024). */ static final int REQUEST_INTENT_SAMPLE = 1 ; /** TAG. */ private final String TAG = \"INTENT\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButton . setOnClickListener ( this ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )) { Intent mIntent = new Intent (); mIntent . putExtra ( \"MYVALUE\" , \"Value of mine\" ); mIntent . setClassName ( \"utsunomiya.gclue.com.intentsample\" , \"utsunomiya.gclue.com.intentsample.IntentActivity\" ); startActivityForResult ( mIntent , REQUEST_INTENT_SAMPLE ); } } @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { if ( requestCode == REQUEST_INTENT_SAMPLE && resultCode == RESULT_OK ) { String result = data . getStringExtra ( \"RESULT\" ); Toast . makeText ( this , \"Result:\" + result , Toast . LENGTH_LONG ). show (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> </RelativeLayout> AndroidManifest\u306e\u8a2d\u5b9a AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <activity android:name= \".IntentActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.DEFAULT\" /> </intent-filter> </activity> </application> </manifest>","title":"Intent\u3092\u4f5c\u6210\u3059\u308b"},{"location":"intent05/#intent","text":"Intent\u3092\u547c\u3073\u51fa\u3059\u624b\u6bb5 \u660e\u793a\u7684\u306aIntent\u8d77\u52d5 \u6697\u9ed9\u7684\u306aIntent\u8d77\u52d5 \u304c\u3042\u308a\u307e\u3059\u3002\u660e\u793a\u7684\u306aIntent\u8d77\u52d5\u3067\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3068\u30af\u30e9\u30b9\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u660e\u793a\u7684\u306aIntent\u3067\u306f\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u660e\u793a\u7684 1 2 3 Intent selectIntent = new Intent (); selectIntent . setClassName ( \"com.example.intentcooperationsample\" , \"com.example.intentcooperationsample.MyActivity\" ); startActivityForResult ( selectIntent , 1 ); \u6697\u9ed9\u7684 1 2 3 Uri uri = Uri . parse ( \"http://www.gclue.com/\" ); Intent browserIntent = new Intent ( Intent . ACTION_VIEW , uri ); startActivity ( browserIntent ); AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> Intenr-filter\u30bf\u30b0\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u304b\u3051\u308b 1 2 3 4 5 <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter>","title":"Intent\u3092\u4f5c\u6210\u3059\u308b"},{"location":"intent05/#_1","text":"","title":"\u547c\u3073\u51fa\u3057\u6642\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9"},{"location":"intent05/#_2","text":"Intent\u306e\u8a18\u8ff0 1 2 Intent mIntent = new Intent(); mIntent.setAction(\"\u30a2\u30af\u30b7\u30e7\u30f3\u540d\"); Activity\u3092\u547c\u3073\u51fa\u3059 - startActivity(\u30a4\u30f3\u30c6\u30f3\u30c8) - startActivityForResult(\u30a4\u30f3\u30c6\u30f3\u30c8) Service\u3092\u547c\u3073\u51fa\u3059 - startService(\u30a4\u30f3\u30c6\u30f3\u30c8) Broadcast - sendBroadcast(\u30a4\u30f3\u30c6\u30f3\u30c8)","title":"\u547c\u3073\u51fa\u3057\u5074"},{"location":"intent05/#activity","text":"IntentActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.Intent ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; public class IntentActivity extends Activity implements View . OnClickListener { /** \u623b\u308b\u30dc\u30bf\u30f3. */ private Button mButtonBack ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . intent_activity ); mButtonBack = ( Button ) findViewById ( R . id . buttonBack ); mButtonBack . setOnClickListener ( this ); } @Override public void onClick ( View v ) { if ( v . equals ( mButtonBack )){ Intent myIntent = new Intent (); myIntent . putExtra ( \"RESULT\" , \"result of Intent\" ); setResult ( 1 , myIntent ); this . finish (); } } } intent_activity.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Back\" android:id= \"@+id/buttonBack\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> </RelativeLayout>","title":"\u53d7\u4fe1\u5074Activity\u3092\u4f5c\u6210\u3059\u308b"},{"location":"intent05/#_3","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.ContentResolver ; import android.content.ContentValues ; import android.content.Intent ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.net.Uri ; import android.os.Bundle ; import android.os.Environment ; import android.provider.MediaStore ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.ImageView ; import android.widget.Toast ; import android.widget.VideoView ; import java.io.File ; import java.io.IOException ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; /** \u30a4\u30f3\u30c6\u30f3\u30c8\u547c\u3073\u51fa\u3057\u6642\u306eRquestCode(\u4efb\u610f\u306e\u5024). */ static final int REQUEST_INTENT_SAMPLE = 1 ; /** TAG. */ private final String TAG = \"INTENT\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButton . setOnClickListener ( this ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )) { Intent mIntent = new Intent (); mIntent . putExtra ( \"MYVALUE\" , \"Value of mine\" ); mIntent . setClassName ( \"utsunomiya.gclue.com.intentsample\" , \"utsunomiya.gclue.com.intentsample.IntentActivity\" ); startActivityForResult ( mIntent , REQUEST_INTENT_SAMPLE ); } } @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { if ( requestCode == REQUEST_INTENT_SAMPLE && resultCode == RESULT_OK ) { String result = data . getStringExtra ( \"RESULT\" ); Toast . makeText ( this , \"Result:\" + result , Toast . LENGTH_LONG ). show (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> </RelativeLayout>","title":"\u9001\u4fe1\u5074"},{"location":"intent05/#androidmanifest","text":"AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <activity android:name= \".IntentActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.DEFAULT\" /> </intent-filter> </activity> </application> </manifest>","title":"AndroidManifest\u306e\u8a2d\u5b9a"},{"location":"link/","text":"Link Tools Android Studio Github Mac Source Tree Training Learn Git Branching","title":"Link"},{"location":"link/#link","text":"","title":"Link"},{"location":"link/#tools","text":"Android Studio Github Mac Source Tree","title":"Tools"},{"location":"link/#training","text":"Learn Git Branching","title":"Training"},{"location":"ui00/","text":"UI Layout FindViewById XML\u3067\u306eLayout1 XML\u3067\u306eLayout2","title":"UI Layout"},{"location":"ui00/#ui-layout","text":"FindViewById XML\u3067\u306eLayout1 XML\u3067\u306eLayout2","title":"UI Layout"},{"location":"ui01/","text":"FindViewById activity_xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/testView1\" /> </RelativeLayout> android:id\u3067TextView\u306b\u540d\u524d\u3092\u3064\u3051\u307e\u3059\u3002 1 android : id = \"@+id/testView1\" \u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u306f\u3001 1 View.findViewById() \u3067XML\u3067\u8a18\u8ff0\u3055\u308c\u305fView\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u53d6\u308a\u8fbc\u3080\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 http://developer.android.com/intl/ja/reference/android/view/View.html MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package com.example.sasakiakira.uisample2 ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.widget.TextView ; public class MainActivity extends AppCompatActivity { /** TextView. */ private TextView mTextView1 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mTextView1 = ( TextView ) findViewById ( R . id . textView1 ); mTextView1 . setText ( \"TEST Writing\" ); } } TextView\u306e\u80cc\u666f\u306b\u8272\u3092\u3064\u3051\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" /> </RelativeLayout> TextView\u306e\u6587\u5b57\u306b\u8272\u3092\u3064\u3051\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" android:textColor= \"#00ff00\" /> </RelativeLayout> TEXT\u306e\u30b5\u30a4\u30ba\u3092\u5909\u3048\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" android:textColor= \"#00ff00\" android:textSize= \"100px\" /> </RelativeLayout>","title":"FindViewById"},{"location":"ui01/#findviewbyid","text":"activity_xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/testView1\" /> </RelativeLayout> android:id\u3067TextView\u306b\u540d\u524d\u3092\u3064\u3051\u307e\u3059\u3002 1 android : id = \"@+id/testView1\" \u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u306f\u3001 1 View.findViewById() \u3067XML\u3067\u8a18\u8ff0\u3055\u308c\u305fView\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u53d6\u308a\u8fbc\u3080\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 http://developer.android.com/intl/ja/reference/android/view/View.html MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package com.example.sasakiakira.uisample2 ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.widget.TextView ; public class MainActivity extends AppCompatActivity { /** TextView. */ private TextView mTextView1 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mTextView1 = ( TextView ) findViewById ( R . id . textView1 ); mTextView1 . setText ( \"TEST Writing\" ); } }","title":"FindViewById"},{"location":"ui01/#textview","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" /> </RelativeLayout>","title":"TextView\u306e\u80cc\u666f\u306b\u8272\u3092\u3064\u3051\u308b"},{"location":"ui01/#textview_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" android:textColor= \"#00ff00\" /> </RelativeLayout>","title":"TextView\u306e\u6587\u5b57\u306b\u8272\u3092\u3064\u3051\u308b"},{"location":"ui01/#text","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" android:textColor= \"#00ff00\" android:textSize= \"100px\" /> </RelativeLayout>","title":"TEXT\u306e\u30b5\u30a4\u30ba\u3092\u5909\u3048\u308b"},{"location":"ui02/","text":"XML\u3067\u306eLayout RelativeLayout Android\u3067\u4f7f\u7528\u3067\u304d\u308bLayout\u3068\u3057\u3066\u306f\u3001\u4e0b\u8a18\u304c\u5b58\u5728\u3057\u307e\u3059\u3002 LinearLayout RelativeLayout FrameLayout TabletLayout TableRow Button\u3092\u8ffd\u52a0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/textView1\" /> </RelativeLayout> View\u306e\u5927\u304d\u3055\u306f\u3001 1 2 android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" \u3067\u6307\u5b9a\u3067\u304d\u308b\u3002 \u5024 \u610f\u5473 wrap_content \u30b3\u30f3\u30c6\u30f3\u30c4\u30b5\u30a4\u30ba\u306b\u5408\u308f\u305b\u308b match_parent \u89aa\u306e\u30b5\u30a4\u30ba\u306b\u5408\u308f\u305b\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:layout_toRightOf= \"@+id/textView1\" /> </RelativeLayout> \u753b\u9762\u3044\u3063\u3071\u3044\u306b\u8868\u793a\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </RelativeLayout> \u30b5\u30a4\u30ba\u6307\u5b9a\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"100px\" android:layout_height= \"200px\" /> </RelativeLayout> \u30dc\u30bf\u30f3\u306e\u6a2a\u306b\u30dc\u30bf\u30f3\u3092\u914d\u7f6e\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/textView1\" android:layout_toEndOf= \"@+id/textView1\" /> <Button android:id= \"@+id/button2\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/button1\" /> </RelativeLayout> \u30dc\u30bf\u30f3\u306e\u4e0b\u306b\u30dc\u30bf\u30f3\u3092\u914d\u7f6e\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/textView1\" android:layout_toEndOf= \"@+id/textView1\" /> <Button android:id= \"@+id/button2\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/button1\" /> <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_below= \"@+id/button2\" android:layout_alignLeft= \"@+id/button2\" /> </RelativeLayout> \u89aa\u306b\u5408\u308f\u305b\u3066\u8a2d\u7f6e \u5de6\u306e\u4e0a\u5bc4\u305b 1 2 android : layout_alignParentTop = \"true\" android : layout_alignParentLeft = \"true\" \u53f3\u306e\u4e0a\u5bc4\u305b 1 2 android : layout_alignParentTop = \"true\" android : layout_alignParentRight = \"true\" \u5de6\u306e\u4e0b\u5bc4\u305b 1 2 android : layout_alignParentBottom = \"true\" android : layout_alignParentLeft = \"true\" \u53f3\u306e\u4e0b\u5bc4\u305b 1 2 android : layout_alignParentBottom = \"true\" android : layout_alignParentRight = \"true\"","title":"XML\u3067\u306eLayout"},{"location":"ui02/#xmllayout","text":"","title":"XML\u3067\u306eLayout"},{"location":"ui02/#relativelayout","text":"Android\u3067\u4f7f\u7528\u3067\u304d\u308bLayout\u3068\u3057\u3066\u306f\u3001\u4e0b\u8a18\u304c\u5b58\u5728\u3057\u307e\u3059\u3002 LinearLayout RelativeLayout FrameLayout TabletLayout TableRow","title":"RelativeLayout"},{"location":"ui02/#button","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/textView1\" /> </RelativeLayout> View\u306e\u5927\u304d\u3055\u306f\u3001 1 2 android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" \u3067\u6307\u5b9a\u3067\u304d\u308b\u3002 \u5024 \u610f\u5473 wrap_content \u30b3\u30f3\u30c6\u30f3\u30c4\u30b5\u30a4\u30ba\u306b\u5408\u308f\u305b\u308b match_parent \u89aa\u306e\u30b5\u30a4\u30ba\u306b\u5408\u308f\u305b\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:layout_toRightOf= \"@+id/textView1\" /> </RelativeLayout> \u753b\u9762\u3044\u3063\u3071\u3044\u306b\u8868\u793a\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </RelativeLayout> \u30b5\u30a4\u30ba\u6307\u5b9a\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"100px\" android:layout_height= \"200px\" /> </RelativeLayout>","title":"Button\u3092\u8ffd\u52a0"},{"location":"ui02/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/textView1\" android:layout_toEndOf= \"@+id/textView1\" /> <Button android:id= \"@+id/button2\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/button1\" /> </RelativeLayout> \u30dc\u30bf\u30f3\u306e\u4e0b\u306b\u30dc\u30bf\u30f3\u3092\u914d\u7f6e\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/textView1\" android:layout_toEndOf= \"@+id/textView1\" /> <Button android:id= \"@+id/button2\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/button1\" /> <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_below= \"@+id/button2\" android:layout_alignLeft= \"@+id/button2\" /> </RelativeLayout>","title":"\u30dc\u30bf\u30f3\u306e\u6a2a\u306b\u30dc\u30bf\u30f3\u3092\u914d\u7f6e\u3059\u308b"},{"location":"ui02/#_2","text":"\u5de6\u306e\u4e0a\u5bc4\u305b 1 2 android : layout_alignParentTop = \"true\" android : layout_alignParentLeft = \"true\" \u53f3\u306e\u4e0a\u5bc4\u305b 1 2 android : layout_alignParentTop = \"true\" android : layout_alignParentRight = \"true\" \u5de6\u306e\u4e0b\u5bc4\u305b 1 2 android : layout_alignParentBottom = \"true\" android : layout_alignParentLeft = \"true\" \u53f3\u306e\u4e0b\u5bc4\u305b 1 2 android : layout_alignParentBottom = \"true\" android : layout_alignParentRight = \"true\"","title":"\u89aa\u306b\u5408\u308f\u305b\u3066\u8a2d\u7f6e"},{"location":"ui03/","text":"XML\u3067\u306eLayout2 LinearLayout 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Hello\" android:background= \"#ff0000\" /> </LinearLayout> Verical\u306b\u914d\u7f6e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"HelloWorld\" android:background= \"#ff0000\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line2\" android:background= \"#0000ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line3\" android:background= \"#ff00ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line4\" android:background= \"#ffff00\" /> </LinearLayout> Horizontal\u306b\u914d\u7f6e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"HelloWorld\" android:background= \"#ff0000\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line2\" android:background= \"#0000ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line3\" android:background= \"#ff00ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line4\" android:background= \"#ffff00\" /> </LinearLayout> Gravity\u3092\u8a2d\u5b9a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:gravity= \"bottom\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"HelloWorld\" android:background= \"#ff0000\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line2\" android:background= \"#0000ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line3\" android:background= \"#ff00ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line4\" android:background= \"#ffff00\" /> </LinearLayout> \u53f3\u5bc4\u305b 1 android : gravity = \"right\" \u6c34\u5e73\u4e2d\u592e\u5bc4\u305b 1 android : gravity = \"center_horizontal\" \u753b\u9762\u4e2d\u592e\u5bc4\u305b 1 android : gravity = \"center\" \u8ad6\u7406\u548c\u3067\u8a2d\u5b9a 1 android : gravity = \"bottom|right\"","title":"XML\u3067\u306eLayout2"},{"location":"ui03/#xmllayout2","text":"","title":"XML\u3067\u306eLayout2"},{"location":"ui03/#linearlayout","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Hello\" android:background= \"#ff0000\" /> </LinearLayout>","title":"LinearLayout"},{"location":"ui03/#verical","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"HelloWorld\" android:background= \"#ff0000\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line2\" android:background= \"#0000ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line3\" android:background= \"#ff00ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line4\" android:background= \"#ffff00\" /> </LinearLayout>","title":"Verical\u306b\u914d\u7f6e"},{"location":"ui03/#horizontal","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"HelloWorld\" android:background= \"#ff0000\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line2\" android:background= \"#0000ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line3\" android:background= \"#ff00ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line4\" android:background= \"#ffff00\" /> </LinearLayout>","title":"Horizontal\u306b\u914d\u7f6e"},{"location":"ui03/#gravity","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:gravity= \"bottom\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"HelloWorld\" android:background= \"#ff0000\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line2\" android:background= \"#0000ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line3\" android:background= \"#ff00ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line4\" android:background= \"#ffff00\" /> </LinearLayout> \u53f3\u5bc4\u305b 1 android : gravity = \"right\" \u6c34\u5e73\u4e2d\u592e\u5bc4\u305b 1 android : gravity = \"center_horizontal\" \u753b\u9762\u4e2d\u592e\u5bc4\u305b 1 android : gravity = \"center\" \u8ad6\u7406\u548c\u3067\u8a2d\u5b9a 1 android : gravity = \"bottom|right\"","title":"Gravity\u3092\u8a2d\u5b9a"},{"location":"ui04/","text":"Button MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 package com.example.sasakiakira.uisample2 ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends AppCompatActivity implements View . OnClickListener { /** Button. */ private Button mButton01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mButton01 = ( Button ) findViewById ( R . id . button01 ); mButton01 . setOnClickListener ( this ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { Toast . makeText ( this , \"TEST\" , Toast . LENGTH_LONG ). show (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > </Button> </RelativeLayout> \u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u6539\u826f\u3059\u308b res/drawable/button_anim.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 <?xml version=\"1.0\" encoding=\"utf-8\"?> <selector xmlns:android= \"http://schemas.android.com/apk/res/android\" > <item android:state_pressed= \"true\" > <shape android:shape= \"rectangle\" android:useLevel= \"false\" > <solid android:color= \"@android:color/darker_gray\" /> <stroke android:color= \"#CCCCCC\" android:width= \"1dp\" /> <corners android:radius= \"10dp\" /> </shape> </item> <item android:state_pressed= \"false\" > <shape android:shape= \"rectangle\" android:useLevel= \"false\" > <solid android:color= \"#00a0e9\" /> <stroke android:color= \"#CCCCCC\" android:width= \"1dp\" /> <corners android:radius= \"10dp\" /> </shape> </item> </selector> activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:background= \"@drawable/button_anim\" > </Button> </RelativeLayout>","title":"Button"},{"location":"ui04/#button","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 package com.example.sasakiakira.uisample2 ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends AppCompatActivity implements View . OnClickListener { /** Button. */ private Button mButton01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mButton01 = ( Button ) findViewById ( R . id . button01 ); mButton01 . setOnClickListener ( this ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { Toast . makeText ( this , \"TEST\" , Toast . LENGTH_LONG ). show (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > </Button> </RelativeLayout>","title":"Button"},{"location":"ui04/#_1","text":"res/drawable/button_anim.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 <?xml version=\"1.0\" encoding=\"utf-8\"?> <selector xmlns:android= \"http://schemas.android.com/apk/res/android\" > <item android:state_pressed= \"true\" > <shape android:shape= \"rectangle\" android:useLevel= \"false\" > <solid android:color= \"@android:color/darker_gray\" /> <stroke android:color= \"#CCCCCC\" android:width= \"1dp\" /> <corners android:radius= \"10dp\" /> </shape> </item> <item android:state_pressed= \"false\" > <shape android:shape= \"rectangle\" android:useLevel= \"false\" > <solid android:color= \"#00a0e9\" /> <stroke android:color= \"#CCCCCC\" android:width= \"1dp\" /> <corners android:radius= \"10dp\" /> </shape> </item> </selector> activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:background= \"@drawable/button_anim\" > </Button> </RelativeLayout>","title":"\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u6539\u826f\u3059\u308b"},{"location":"ui05/","text":"TextView MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 package com.example.sasakiakira.uisample2 ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends AppCompatActivity implements View . OnClickListener { /** Button. */ private Button mButton01 ; /** TextView. */ private TextView mTextView01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mButton01 = ( Button ) findViewById ( R . id . button01 ); mButton01 . setOnClickListener ( this ); mTextView01 = ( TextView ) findViewById ( R . id . textView01 ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { mTextView01 . setText ( \"Button Clicked\" ); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:text= \"TEST\" android:textSize= \"50px\" android:id= \"@+id/textView01\" android:textColor= \"#ffffff\" android:background= \"#000000\" android:layout_centerHorizontal= \"true\" /> <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:background= \"@drawable/button_anim\" android:layout_below= \"@+id/textView1\" > </Button> </RelativeLayout>","title":"TextView"},{"location":"ui05/#textview","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 package com.example.sasakiakira.uisample2 ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends AppCompatActivity implements View . OnClickListener { /** Button. */ private Button mButton01 ; /** TextView. */ private TextView mTextView01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mButton01 = ( Button ) findViewById ( R . id . button01 ); mButton01 . setOnClickListener ( this ); mTextView01 = ( TextView ) findViewById ( R . id . textView01 ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { mTextView01 . setText ( \"Button Clicked\" ); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:text= \"TEST\" android:textSize= \"50px\" android:id= \"@+id/textView01\" android:textColor= \"#ffffff\" android:background= \"#000000\" android:layout_centerHorizontal= \"true\" /> <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:background= \"@drawable/button_anim\" android:layout_below= \"@+id/textView1\" > </Button> </RelativeLayout>","title":"TextView"},{"location":"ui06/","text":"EditText MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package com.example.sasakiakira.uisample2 ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.EditText ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends AppCompatActivity implements View . OnClickListener { /** Button. */ private Button mButton01 ; /** TextView. */ private TextView mTextView01 ; /** EditText. */ private EditText mEditText01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mButton01 = ( Button ) findViewById ( R . id . button01 ); mButton01 . setOnClickListener ( this ); mTextView01 = ( TextView ) findViewById ( R . id . textView01 ); mEditText01 = ( EditText ) findViewById ( R . id . editText01 ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { mTextView01 . setText ( mEditText01 . getText ()); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:id= \"@+id/textView01\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:text= \"TEST\" android:textSize= \"50px\" android:textColor= \"#ffffff\" android:background= \"#000000\" /> <EditText android:id= \"@+id/editText01\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"\" android:background= \"#D3D3D3\" android:textSize= \"50px\" android:layout_below= \"@+id/textView01\" /> <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:background= \"@drawable/button_anim\" android:layout_below= \"@+id/editText01\" > </Button> </RelativeLayout>","title":"EditText"},{"location":"ui06/#edittext","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package com.example.sasakiakira.uisample2 ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.EditText ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends AppCompatActivity implements View . OnClickListener { /** Button. */ private Button mButton01 ; /** TextView. */ private TextView mTextView01 ; /** EditText. */ private EditText mEditText01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mButton01 = ( Button ) findViewById ( R . id . button01 ); mButton01 . setOnClickListener ( this ); mTextView01 = ( TextView ) findViewById ( R . id . textView01 ); mEditText01 = ( EditText ) findViewById ( R . id . editText01 ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { mTextView01 . setText ( mEditText01 . getText ()); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:id= \"@+id/textView01\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:text= \"TEST\" android:textSize= \"50px\" android:textColor= \"#ffffff\" android:background= \"#000000\" /> <EditText android:id= \"@+id/editText01\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"\" android:background= \"#D3D3D3\" android:textSize= \"50px\" android:layout_below= \"@+id/textView01\" /> <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:background= \"@drawable/button_anim\" android:layout_below= \"@+id/editText01\" > </Button> </RelativeLayout>","title":"EditText"},{"location":"ui07/","text":"\u96fb\u5353\u306e\u4f5c\u6210 \u96fb\u5353\u306eDisplay activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" > <TextView android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"1000\" android:textSize= \"60dip\" android:textColor= \"#f39800\" android:gravity= \"right\" android:background= \"#999999\" /> </LinearLayout> \u30ad\u30fc activity_main.xmlxml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" > <TextView android:id= \"@+id/display\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"\" android:textSize= \"60dip\" android:textColor= \"#f39800\" android:gravity= \"right\" android:background= \"#999999\" /> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button7\" android:text= \"7\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/button8\" android:text= \"8\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/button9\" android:text= \"9\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/buttonClear\" android:text= \"C\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> </LinearLayout> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button4\" android:text= \"4\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/button5\" android:text= \"5\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/button6\" android:text= \"6\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/buttonPlus\" android:text= \"+\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> </LinearLayout> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button1\" android:text= \"1\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/button2\" android:text= \"2\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/button3\" android:text= \"3\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/buttonMinus\" android:text= \"-\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> </LinearLayout> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button0\" android:text= \"0\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/buttonTen\" android:text= \".\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/buttonEqual\" android:text= \"=\" android:textSize= \"40dip\" android:layout_width= \"160dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> </LinearLayout> </LinearLayout> \u30af\u30ea\u30a2\u306e\u307f\u304c\u6709\u52b9\u306a\u30b5\u30f3\u30d7\u30eb MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 package com.example.sasakiakira.uisample2 ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.EditText ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends AppCompatActivity implements View . OnClickListener { /** Button\u306e\u914d\u5217. */ private Button mButton [] ; /** Button\u306eId\u306e\u914d\u5217. */ int mId [] = { R . id . button0 , R . id . button1 , R . id . button2 , R . id . button3 , R . id . button4 , R . id . button5 , R . id . button6 , R . id . button7 , R . id . button8 , R . id . button9 , R . id . buttonPlus , R . id . buttonMinus , R . id . buttonEqual , R . id . buttonTen , R . id . buttonClear }; /** \u914d\u5217\u306e\u5834\u6240\u3092\u5b9a\u6570\u5316. */ private final int KEY_0 = 0 ; private final int KEY_1 = 1 ; private final int KEY_2 = 2 ; private final int KEY_3 = 3 ; private final int KEY_4 = 4 ; private final int KEY_5 = 5 ; private final int KEY_6 = 6 ; private final int KEY_7 = 7 ; private final int KEY_8 = 8 ; private final int KEY_9 = 9 ; private final int KEY_PLUS = 10 ; private final int KEY_MINUS = 11 ; private final int KEY_EQUAL = 12 ; private final int KEY_TEN = 13 ; private final int KEY_CLEAR = 14 ; /** \u96fb\u5353\u306e\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4. */ private TextView mTextView ; /** \u5408\u8a08\u5024. */ private int total ; /** 1\u3064\u524d\u306e\u72b6\u614b\u3092\u4fdd\u6301. */ private int beforeStatus ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextView mTextView = ( TextView ) findViewById ( R . id . display ); // Button mButton = new Button [ mId . length ] ; // Button\u306e\u53d6\u308a\u8fbc\u307f\u3068\u30a4\u30d9\u30f3\u30c8\u306e\u306f\u308a\u3064\u3051 for ( int i = 0 ; i < mId . length ; i ++ ){ // button\u3092\u53d6\u308a\u8fbc\u3080 mButton [ i ] = ( Button ) findViewById ( mId [ i ] ); // button\u306e\u30a4\u30d9\u30f3\u30c8\u51e6\u7406 mButton [ i ] . setOnClickListener ( this ); } } @Override public void onClick ( View v ) { // \u62bc\u3055\u308c\u305f\u30dc\u30bf\u30f3\u304c\u3069\u306e\u30dc\u30bf\u30f3\u304b\u3092\u5224\u5b9a for ( int i = 0 ; i < mId . length ; i ++ ) { if ( v . equals ( mButton [ i ] )) { // CLEAR if ( i == KEY_CLEAR ) { mTextView . setText ( \"\" ); total = 0 ; beforeStatus = KEY_CLEAR ; } // \u6570\u5b57 else if ( i < 10 ) { String nowValue = mTextView . getText (). toString (); nowValue = nowValue + i ; mTextView . setText ( nowValue ); beforeStatus = i ; } break ; } } } } \u8ab2\u984c1 +-.%\u3092\u5b9f\u88c5\u3057\u307e\u3057\u3087\u3046\u3002 TextView\u3067\u53d6\u5f97\u3057\u305f\u6587\u5b57\u5217(String)\u3092Int\u578b\u306b\u5909\u66f4\u3059\u308b\u65b9\u6cd5\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002 1 2 String nowValue = mTextView.getText().toString(); int value = Integer.parseInt(nowValue); \u3053\u308c\u3067String\u3092Int\u306b\u5909\u63db\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002 \u8ab2\u984c2 \u304a\u304b\u3057\u306a\u6319\u52d5\u3084\u3001\u304a\u304b\u3057\u306a\u64cd\u4f5c\u3092\u3057\u305f\u5834\u5408\u306e\u5bfe\u51e6\u3092\u5165\u308c\u307e\u3057\u3087\u3046\u3002 \u4f8b\uff09 * 1,+\u3068\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u5f8c\u3001=\u304c\u62bc\u3055\u308c\u305f\u3089\uff1f * \u4f55\u3082\u5165\u529b\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u306b+\u3084-\u3084=\u304c\u62bc\u3055\u308c\u305f\u3089\uff1f * 0\u3060\u3051\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u3067\u4ed6\u306e\u6570\u5b57\u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u3089\uff1f * 100\u6841\u306e\u6570\u5b57\u304c\u5165\u529b\u3055\u308c\u305f\u3089\uff1f * etc...","title":"\u96fb\u5353\u306e\u4f5c\u6210"},{"location":"ui07/#_1","text":"","title":"\u96fb\u5353\u306e\u4f5c\u6210"},{"location":"ui07/#display","text":"activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" > <TextView android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"1000\" android:textSize= \"60dip\" android:textColor= \"#f39800\" android:gravity= \"right\" android:background= \"#999999\" /> </LinearLayout>","title":"\u96fb\u5353\u306eDisplay"},{"location":"ui07/#_2","text":"activity_main.xmlxml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" > <TextView android:id= \"@+id/display\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"\" android:textSize= \"60dip\" android:textColor= \"#f39800\" android:gravity= \"right\" android:background= \"#999999\" /> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button7\" android:text= \"7\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/button8\" android:text= \"8\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/button9\" android:text= \"9\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/buttonClear\" android:text= \"C\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> </LinearLayout> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button4\" android:text= \"4\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/button5\" android:text= \"5\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/button6\" android:text= \"6\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/buttonPlus\" android:text= \"+\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> </LinearLayout> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button1\" android:text= \"1\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/button2\" android:text= \"2\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/button3\" android:text= \"3\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/buttonMinus\" android:text= \"-\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> </LinearLayout> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button0\" android:text= \"0\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/buttonTen\" android:text= \".\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> <Button android:id= \"@+id/buttonEqual\" android:text= \"=\" android:textSize= \"40dip\" android:layout_width= \"160dip\" android:layout_height= \"80dip\" android:background= \"@drawable/button_anim\" > </Button> </LinearLayout> </LinearLayout> \u30af\u30ea\u30a2\u306e\u307f\u304c\u6709\u52b9\u306a\u30b5\u30f3\u30d7\u30eb MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 package com.example.sasakiakira.uisample2 ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.EditText ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends AppCompatActivity implements View . OnClickListener { /** Button\u306e\u914d\u5217. */ private Button mButton [] ; /** Button\u306eId\u306e\u914d\u5217. */ int mId [] = { R . id . button0 , R . id . button1 , R . id . button2 , R . id . button3 , R . id . button4 , R . id . button5 , R . id . button6 , R . id . button7 , R . id . button8 , R . id . button9 , R . id . buttonPlus , R . id . buttonMinus , R . id . buttonEqual , R . id . buttonTen , R . id . buttonClear }; /** \u914d\u5217\u306e\u5834\u6240\u3092\u5b9a\u6570\u5316. */ private final int KEY_0 = 0 ; private final int KEY_1 = 1 ; private final int KEY_2 = 2 ; private final int KEY_3 = 3 ; private final int KEY_4 = 4 ; private final int KEY_5 = 5 ; private final int KEY_6 = 6 ; private final int KEY_7 = 7 ; private final int KEY_8 = 8 ; private final int KEY_9 = 9 ; private final int KEY_PLUS = 10 ; private final int KEY_MINUS = 11 ; private final int KEY_EQUAL = 12 ; private final int KEY_TEN = 13 ; private final int KEY_CLEAR = 14 ; /** \u96fb\u5353\u306e\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4. */ private TextView mTextView ; /** \u5408\u8a08\u5024. */ private int total ; /** 1\u3064\u524d\u306e\u72b6\u614b\u3092\u4fdd\u6301. */ private int beforeStatus ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextView mTextView = ( TextView ) findViewById ( R . id . display ); // Button mButton = new Button [ mId . length ] ; // Button\u306e\u53d6\u308a\u8fbc\u307f\u3068\u30a4\u30d9\u30f3\u30c8\u306e\u306f\u308a\u3064\u3051 for ( int i = 0 ; i < mId . length ; i ++ ){ // button\u3092\u53d6\u308a\u8fbc\u3080 mButton [ i ] = ( Button ) findViewById ( mId [ i ] ); // button\u306e\u30a4\u30d9\u30f3\u30c8\u51e6\u7406 mButton [ i ] . setOnClickListener ( this ); } } @Override public void onClick ( View v ) { // \u62bc\u3055\u308c\u305f\u30dc\u30bf\u30f3\u304c\u3069\u306e\u30dc\u30bf\u30f3\u304b\u3092\u5224\u5b9a for ( int i = 0 ; i < mId . length ; i ++ ) { if ( v . equals ( mButton [ i ] )) { // CLEAR if ( i == KEY_CLEAR ) { mTextView . setText ( \"\" ); total = 0 ; beforeStatus = KEY_CLEAR ; } // \u6570\u5b57 else if ( i < 10 ) { String nowValue = mTextView . getText (). toString (); nowValue = nowValue + i ; mTextView . setText ( nowValue ); beforeStatus = i ; } break ; } } } }","title":"\u30ad\u30fc"},{"location":"ui07/#1","text":"+-.%\u3092\u5b9f\u88c5\u3057\u307e\u3057\u3087\u3046\u3002 TextView\u3067\u53d6\u5f97\u3057\u305f\u6587\u5b57\u5217(String)\u3092Int\u578b\u306b\u5909\u66f4\u3059\u308b\u65b9\u6cd5\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002 1 2 String nowValue = mTextView.getText().toString(); int value = Integer.parseInt(nowValue); \u3053\u308c\u3067String\u3092Int\u306b\u5909\u63db\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u8ab2\u984c1"},{"location":"ui07/#2","text":"\u304a\u304b\u3057\u306a\u6319\u52d5\u3084\u3001\u304a\u304b\u3057\u306a\u64cd\u4f5c\u3092\u3057\u305f\u5834\u5408\u306e\u5bfe\u51e6\u3092\u5165\u308c\u307e\u3057\u3087\u3046\u3002 \u4f8b\uff09 * 1,+\u3068\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u5f8c\u3001=\u304c\u62bc\u3055\u308c\u305f\u3089\uff1f * \u4f55\u3082\u5165\u529b\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u306b+\u3084-\u3084=\u304c\u62bc\u3055\u308c\u305f\u3089\uff1f * 0\u3060\u3051\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u3067\u4ed6\u306e\u6570\u5b57\u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u3089\uff1f * 100\u6841\u306e\u6570\u5b57\u304c\u5165\u529b\u3055\u308c\u305f\u3089\uff1f * etc...","title":"\u8ab2\u984c2"},{"location":"wear01/","text":"Android Wear Android Wear\u306e\u74b0\u5883\u8a2d\u5b9a Android Wear\u3068\u5b9f\u6a5f\u306e\u63a5\u7d9a Android Wear\u3068\u306e\u30c7\u30fc\u30bf\u9023\u643a","title":"Android Wear"},{"location":"wear01/#android-wear","text":"Android Wear\u306e\u74b0\u5883\u8a2d\u5b9a Android Wear\u3068\u5b9f\u6a5f\u306e\u63a5\u7d9a Android Wear\u3068\u306e\u30c7\u30fc\u30bf\u9023\u643a","title":"Android Wear"},{"location":"wear02/","text":"Android Wear\u306e\u74b0\u5883\u8a2d\u5b9a \u4eca\u56de\u306e\u74b0\u5883\u69cb\u7bc9\u306e\u524d\u63d0\u6761\u4ef6\u3002 \u7a2e\u985e Version Android Studio 1.5 \u30c7\u30d0\u30a4\u30b9\u5074OS 5.0 Wear\u5074OS 5.0 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u65b0\u898f\u4f5c\u6210 \u74b0\u5883\u8a2d\u5b9a Tools Tools Preview Channel Android 6.0(API23) Android 5.0.1(API21) Extras \u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u306e\u4f5c\u6210","title":"Android Wear\u306e\u74b0\u5883\u8a2d\u5b9a"},{"location":"wear02/#android-wear","text":"\u4eca\u56de\u306e\u74b0\u5883\u69cb\u7bc9\u306e\u524d\u63d0\u6761\u4ef6\u3002 \u7a2e\u985e Version Android Studio 1.5 \u30c7\u30d0\u30a4\u30b9\u5074OS 5.0 Wear\u5074OS 5.0","title":"Android Wear\u306e\u74b0\u5883\u8a2d\u5b9a"},{"location":"wear02/#_1","text":"","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u65b0\u898f\u4f5c\u6210"},{"location":"wear02/#_2","text":"Tools Tools Preview Channel Android 6.0(API23) Android 5.0.1(API21) Extras","title":"\u74b0\u5883\u8a2d\u5b9a"},{"location":"wear02/#_3","text":"","title":"\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u306e\u4f5c\u6210"},{"location":"wear03/","text":"Android Wear\u3068\u5b9f\u6a5f\u306e\u63a5\u7d9a \u5b9f\u6a5f\u306e\u4e8b\u524d\u6e96\u5099 \u5b9f\u6a5f\u3068\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u958b\u767a\u7528\u30de\u30b7\u30f3\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002 platform-tools\u306b\u542b\u307e\u308c\u308badb\u306e\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u307e\u3059\u3002 adb\u306f\u3001Android Studio 5.0\u3067\u306f\u3001\u4e0b\u8a18\u30d5\u30a9\u30eb\u30c0\u306b\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002 1 /Users/\u30e6\u30fc\u30b6\u540d/Library/Android/sdk/platform-tools \u30b3\u30de\u30f3\u30c9\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u8d77\u52d5\u3057\u3001platform-tools\u30d5\u30a9\u30eb\u30c0\u306b\u79fb\u52d5\u3057\u3001adb\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 1 2 $ cd /Users/\u30e6\u30fc\u30b6\u540d/Library/Android/sdk/platform-tools $ ./adb -d forward tcp:5601 tcp:5601 Google Play\u304b\u3089Android Wear\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb Android\u5b9f\u6a5f\u306b\u3001Android Wear\u30a2\u30d7\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 https://play.google.com/store/apps/details?id=com.google.android.wearable.app \u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u3068\u306e\u63a5\u7d9a \u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u306eAndroid Wear\u306e\u8868\u8a18\u304c\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5909\u5316\u3059\u308c\u3070\u3001\u63a5\u7d9a\u6210\u529f\u3067\u3059\u3002 \u9023\u643a \u52d5\u4f5c\u78ba\u8a8d \u9023\u643a\u304c\u3046\u307e\u304f\u3044\u3063\u3066\u308b\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u30a6\u30a9\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u307e\u3059\u3002","title":"Android Wear\u3068\u5b9f\u6a5f\u306e\u63a5\u7d9a"},{"location":"wear03/#android-wear","text":"","title":"Android Wear\u3068\u5b9f\u6a5f\u306e\u63a5\u7d9a"},{"location":"wear03/#_1","text":"\u5b9f\u6a5f\u3068\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u958b\u767a\u7528\u30de\u30b7\u30f3\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002 platform-tools\u306b\u542b\u307e\u308c\u308badb\u306e\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u307e\u3059\u3002 adb\u306f\u3001Android Studio 5.0\u3067\u306f\u3001\u4e0b\u8a18\u30d5\u30a9\u30eb\u30c0\u306b\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002 1 /Users/\u30e6\u30fc\u30b6\u540d/Library/Android/sdk/platform-tools \u30b3\u30de\u30f3\u30c9\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u8d77\u52d5\u3057\u3001platform-tools\u30d5\u30a9\u30eb\u30c0\u306b\u79fb\u52d5\u3057\u3001adb\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 1 2 $ cd /Users/\u30e6\u30fc\u30b6\u540d/Library/Android/sdk/platform-tools $ ./adb -d forward tcp:5601 tcp:5601","title":"\u5b9f\u6a5f\u306e\u4e8b\u524d\u6e96\u5099"},{"location":"wear03/#google-playandroid-wear","text":"Android\u5b9f\u6a5f\u306b\u3001Android Wear\u30a2\u30d7\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 https://play.google.com/store/apps/details?id=com.google.android.wearable.app","title":"Google Play\u304b\u3089Android Wear\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"wear03/#_2","text":"\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u306eAndroid Wear\u306e\u8868\u8a18\u304c\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5909\u5316\u3059\u308c\u3070\u3001\u63a5\u7d9a\u6210\u529f\u3067\u3059\u3002","title":"\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u3068\u306e\u63a5\u7d9a"},{"location":"wear03/#_3","text":"","title":"\u9023\u643a"},{"location":"wear03/#_4","text":"\u9023\u643a\u304c\u3046\u307e\u304f\u3044\u3063\u3066\u308b\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u30a6\u30a9\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u307e\u3059\u3002","title":"\u52d5\u4f5c\u78ba\u8a8d"},{"location":"wear04/","text":"Android Wear\u3068\u306e\u30c7\u30fc\u30bf\u9023\u643a Android Wear\u3068Android\u9593\u3067\u306f\u69d8\u3005\u306a\u30c7\u30fc\u30bf\u9023\u643a\u304c\u53ef\u80fd\u3067\u3059\u3002 \u9023\u643a \u5185\u5bb9 Notification \u5b9f\u6a5f\u306b\u5c4a\u3044\u305fNotification\u304cWear\u306b\u3082\u5171\u6709\u3055\u308c\u308b MessageAPI DataAPI Android Wear\u3068Android\u30c7\u30d0\u30a4\u30b9 Notification\u30b5\u30f3\u30d7\u30eb \u305d\u308c\u3067\u306f\u3001Notification\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002Android\u30c7\u30d0\u30a4\u30b9\u5074\u3082\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u3044\u3058\u308a\u307e\u3059\u3002 (\u6ce8: Android Studio 1.5\u3067\u521d\u671f\u306b\u751f\u6210\u3055\u308c\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3084XML Layout\u306b\u5927\u304d\u304f\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059) MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 package com.mycompany.wearsample ; import android.app.Notification ; import android.app.NotificationManager ; import android.content.Context ; import android.os.Bundle ; import android.support.design.widget.FloatingActionButton ; import android.support.design.widget.Snackbar ; import android.support.v7.app.AppCompatActivity ; import android.support.v7.widget.Toolbar ; import android.view.View ; import android.view.Menu ; import android.view.MenuItem ; import android.widget.Button ; public class MainActivity extends AppCompatActivity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); Button mButton = ( Button ) findViewById ( R . id . Button01 ); final Context mContext = this ; mButton . setOnClickListener ( new View . OnClickListener () { public void onClick ( View v ) { int notificationId = 1 ; int visivility = 1 ; Notification notification = new Notification . Builder ( mContext ) . setCategory ( Notification . CATEGORY_MESSAGE ) . setContentTitle ( \"TEST\" ) . setContentText ( \"TEST Message\" ) . setSmallIcon ( R . mipmap . ic_launcher ) . setAutoCancel ( true ) . setVisibility ( visivility ). build (); NotificationManager notificationManager = ( NotificationManager ) getSystemService ( NOTIFICATION_SERVICE ); notificationManager . notify ( notificationId , notification ); } }); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } content_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingBottom= \"@dimen/activity_vertical_margin\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" app:layout_behavior= \"@string/appbar_scrolling_view_behavior\" tools:context= \"com.mycompany.wearsample.MainActivity\" tools:showIn= \"@layout/activity_main\" > <Button android:text= \"Wear Notification\" android:id= \"@+id/Button01\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" /> </RelativeLayout> Android\u30c7\u30d0\u30a4\u30b9\u5074\u306b\u30a2\u30d7\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001Notification\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u308c\u306b\u540c\u671f\u3057Wear\u5074\u306b\u3082Notification\u304c\u540c\u671f\u3055\u308c\u307e\u3059\u3002","title":"Android Wear\u3068\u306e\u30c7\u30fc\u30bf\u9023\u643a"},{"location":"wear04/#android-wear","text":"Android Wear\u3068Android\u9593\u3067\u306f\u69d8\u3005\u306a\u30c7\u30fc\u30bf\u9023\u643a\u304c\u53ef\u80fd\u3067\u3059\u3002 \u9023\u643a \u5185\u5bb9 Notification \u5b9f\u6a5f\u306b\u5c4a\u3044\u305fNotification\u304cWear\u306b\u3082\u5171\u6709\u3055\u308c\u308b MessageAPI DataAPI Android Wear\u3068Android\u30c7\u30d0\u30a4\u30b9","title":"Android Wear\u3068\u306e\u30c7\u30fc\u30bf\u9023\u643a"},{"location":"wear04/#notification","text":"\u305d\u308c\u3067\u306f\u3001Notification\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002Android\u30c7\u30d0\u30a4\u30b9\u5074\u3082\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u3044\u3058\u308a\u307e\u3059\u3002 (\u6ce8: Android Studio 1.5\u3067\u521d\u671f\u306b\u751f\u6210\u3055\u308c\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3084XML Layout\u306b\u5927\u304d\u304f\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059) MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 package com.mycompany.wearsample ; import android.app.Notification ; import android.app.NotificationManager ; import android.content.Context ; import android.os.Bundle ; import android.support.design.widget.FloatingActionButton ; import android.support.design.widget.Snackbar ; import android.support.v7.app.AppCompatActivity ; import android.support.v7.widget.Toolbar ; import android.view.View ; import android.view.Menu ; import android.view.MenuItem ; import android.widget.Button ; public class MainActivity extends AppCompatActivity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); Button mButton = ( Button ) findViewById ( R . id . Button01 ); final Context mContext = this ; mButton . setOnClickListener ( new View . OnClickListener () { public void onClick ( View v ) { int notificationId = 1 ; int visivility = 1 ; Notification notification = new Notification . Builder ( mContext ) . setCategory ( Notification . CATEGORY_MESSAGE ) . setContentTitle ( \"TEST\" ) . setContentText ( \"TEST Message\" ) . setSmallIcon ( R . mipmap . ic_launcher ) . setAutoCancel ( true ) . setVisibility ( visivility ). build (); NotificationManager notificationManager = ( NotificationManager ) getSystemService ( NOTIFICATION_SERVICE ); notificationManager . notify ( notificationId , notification ); } }); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } content_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingBottom= \"@dimen/activity_vertical_margin\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" app:layout_behavior= \"@string/appbar_scrolling_view_behavior\" tools:context= \"com.mycompany.wearsample.MainActivity\" tools:showIn= \"@layout/activity_main\" > <Button android:text= \"Wear Notification\" android:id= \"@+id/Button01\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_gravity= \"center\" /> </RelativeLayout> Android\u30c7\u30d0\u30a4\u30b9\u5074\u306b\u30a2\u30d7\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001Notification\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u308c\u306b\u540c\u671f\u3057Wear\u5074\u306b\u3082Notification\u304c\u540c\u671f\u3055\u308c\u307e\u3059\u3002","title":"Notification\u30b5\u30f3\u30d7\u30eb"},{"location":"webview00/","text":"WebView WebView\u3092\u8868\u793a","title":"WebView"},{"location":"webview00/#webview","text":"WebView\u3092\u8868\u793a","title":"WebView"},{"location":"webview01/","text":"WebView\u8868\u793a \u30d7\u30ed\u30b0\u30e9\u30e0\u3067WebView\u3092\u8cbc\u308a\u4ed8\u3051 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 package utsunomiya.gclue.com.websample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.webkit.WebView ; public class MainActivity extends Activity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); WebView mWebView = new WebView ( this ); mWebView . loadUrl ( \"http://www.gclue.com\" ); setContentView ( mWebView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.websample\" > <uses-permission android:name= \"android.permission.INTERNET\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> XML\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u3067\u8868\u793a MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 package utsunomiya.gclue.com.websample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.webkit.WebView ; public class MainActivity extends Activity { /** WebView. */ private WebView mWebView ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mWebView = ( WebView ) findViewById ( R . id . webview ); mWebView . loadUrl ( \"http://www.gclue.com\" ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <WebView android:id= \"@+id/webview\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" /> </RelativeLayout> \u623b\u308b\u30dc\u30bf\u30f3\u3001\u9032\u3080\u30dc\u30bf\u30f3 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 package utsunomiya.gclue.com.websample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.webkit.WebView ; import android.webkit.WebViewClient ; import android.widget.Button ; public class MainActivity extends Activity implements View . OnClickListener { /** WebView. */ private WebView mWebView ; /** \u623b\u308b\u30dc\u30bf\u30f3. */ private Button buttonBack ; /** \u9032\u3080\u30dc\u30bf\u30f3. */ private Button buttonGo ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mWebView = ( WebView ) findViewById ( R . id . webview ); mWebView . loadUrl ( \"http://www.gclue.com\" ); mWebView . setWebViewClient ( new WebViewClient ()); buttonBack = ( Button ) findViewById ( R . id . buttonBack ); buttonGo = ( Button ) findViewById ( R . id . buttonGo ); buttonBack . setOnClickListener ( this ); buttonGo . setOnClickListener ( this ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onClick ( View v ) { if ( v . equals ( buttonBack )){ mWebView . goBack (); } else if ( v . equals ( buttonGo )){ mWebView . goForward (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Go\" android:id= \"@+id/buttonGo\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Back\" android:id= \"@+id/buttonBack\" android:layout_alignParentTop= \"true\" android:layout_toEndOf= \"@+id/buttonGo\" /> <WebView android:id= \"@+id/webview\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" /> </RelativeLayout>","title":"WebView\u8868\u793a"},{"location":"webview01/#webview","text":"","title":"WebView\u8868\u793a"},{"location":"webview01/#webview_1","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 package utsunomiya.gclue.com.websample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.webkit.WebView ; public class MainActivity extends Activity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); WebView mWebView = new WebView ( this ); mWebView . loadUrl ( \"http://www.gclue.com\" ); setContentView ( mWebView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.websample\" > <uses-permission android:name= \"android.permission.INTERNET\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u3067WebView\u3092\u8cbc\u308a\u4ed8\u3051"},{"location":"webview01/#xml","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 package utsunomiya.gclue.com.websample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.webkit.WebView ; public class MainActivity extends Activity { /** WebView. */ private WebView mWebView ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mWebView = ( WebView ) findViewById ( R . id . webview ); mWebView . loadUrl ( \"http://www.gclue.com\" ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <WebView android:id= \"@+id/webview\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" /> </RelativeLayout>","title":"XML\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u3067\u8868\u793a"},{"location":"webview01/#_1","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 package utsunomiya.gclue.com.websample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.webkit.WebView ; import android.webkit.WebViewClient ; import android.widget.Button ; public class MainActivity extends Activity implements View . OnClickListener { /** WebView. */ private WebView mWebView ; /** \u623b\u308b\u30dc\u30bf\u30f3. */ private Button buttonBack ; /** \u9032\u3080\u30dc\u30bf\u30f3. */ private Button buttonGo ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mWebView = ( WebView ) findViewById ( R . id . webview ); mWebView . loadUrl ( \"http://www.gclue.com\" ); mWebView . setWebViewClient ( new WebViewClient ()); buttonBack = ( Button ) findViewById ( R . id . buttonBack ); buttonGo = ( Button ) findViewById ( R . id . buttonGo ); buttonBack . setOnClickListener ( this ); buttonGo . setOnClickListener ( this ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onClick ( View v ) { if ( v . equals ( buttonBack )){ mWebView . goBack (); } else if ( v . equals ( buttonGo )){ mWebView . goForward (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Go\" android:id= \"@+id/buttonGo\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Back\" android:id= \"@+id/buttonBack\" android:layout_alignParentTop= \"true\" android:layout_toEndOf= \"@+id/buttonGo\" /> <WebView android:id= \"@+id/webview\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" /> </RelativeLayout>","title":"\u623b\u308b\u30dc\u30bf\u30f3\u3001\u9032\u3080\u30dc\u30bf\u30f3"},{"location":"01_app/chapter01/","text":"\u74b0\u5883\u8a2d\u5b9a JDK\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u4e0b\u8a18\u306e\u30b5\u30a4\u30c8\u3088\u308a\u74b0\u5883\u306b\u3042\u3063\u305f\u300cJava SE Development Kit 7u79\u300d\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002 http://www.oracle.com/technetwork/jp/java/javase/downloads/jdk7-downloads-1880260.html \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 \u306a\u304a\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306e\u8a2d\u5b9a\u306f\u521d\u671f\u72b6\u614b\u304b\u3089\u5909\u66f4\u305b\u305a\u884c\u3046\u3002 Android Studio\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb Android Studio\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002 https://developer.android.com/sdk/index.html \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3002 \u203b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u3001PC\u540d\u3084\u30e6\u30fc\u30b6\u540d\u306b\u65e5\u672c\u8a9e\u3084\u30cf\u30a4\u30d5\u30f3\u306a\u3069\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u300cyour project location contains non-ascii characters\u300d\u3068\u3044\u3046\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u306e\u5834\u5408\u306f\u30d1\u30b9\u306b\u65e5\u672c\u8a9e\u304c\u542b\u307e\u308c\u306a\u3044\u5834\u6240\u306b\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u3001\u305d\u3061\u3089\u3092\u4f7f\u7528\u3057\u3066\u3059\u3059\u3081\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Mac\u306e\u5834\u5408\u3001Android Studio 1.0\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001Android Studio\u30a2\u30a4\u30b3\u30f3\u3092Applications\u306b\u30c9\u30e9\u30c3\u30b0&\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3002 /Application\u30d5\u30a9\u30eb\u30c0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u308b\u3002 \u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305fJDK\u3092\u63a2\u3059\u5834\u5408\u306b\u74b0\u5883\u5909\u6570\u300cJAVA_HOME\u300d\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u304c\u3042\u308b\u3002 \u5fc5\u8981\u306a\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3002 Windows\u306e\u5834\u5408 1.\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30d1\u30cd\u30eb\u3092\u958b\u304f 2.\u30b7\u30b9\u30c6\u30e0\u3092\u9078\u629e\uff08\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u8868\u793a\u5f62\u5f0f\u3092\u5c0f\u3055\u3044\u30a2\u30a4\u30b3\u30f3\u306b\u5909\u66f4\uff09 3.\u8a73\u7d30\u8a2d\u5b9a\u30bf\u30d6\u306e\u4e00\u756a\u4e0b\u306b\u3042\u308b\u300c\u74b0\u5883\u5909\u6570\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b 4.\u30b7\u30b9\u30c6\u30e0\u74b0\u5883\u5909\u6570\u306b\u300cJAVA_HOME\u300d\u304c\u3042\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3001\u3042\u308b\u5834\u5408\u306f\u5909\u66f4\u3001\u306a\u3044\u5834\u5408\u306f\u65b0\u898f\u3092\u9078\u629e 5.\u5909\u6570\u540d\u306bJAVA_HOME\u3092\u8a2d\u5b9a\u3057\u3001\u5909\u6570\u5024\u306bJDK\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u306e\u30d1\u30b9\u3092\u8a2d\u5b9a 6.\u8a2d\u5b9a\u304c\u7d42\u308f\u3063\u305f\u3089\u300cOK\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b \u3053\u308c\u3067\u8a2d\u5b9a\u306f\u5b8c\u4e86\u3067\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u3066\u3001\u4e0b\u8a18\u3092\u5165\u529b\u5f8center\u30ad\u30fc\u62bc\u4e0b\u3067\u8a2d\u5b9a\u3057\u305f\u30d1\u30b9\u540d\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002 1 set JAVA_HOME Mac\u306e\u5834\u5408 Mac\u306e\u5834\u5408\u3001JAVA_HOME\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3066\u8868\u793a\u3055\u308c\u305f\u30d1\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3067\u53d6\u5f97\u3067\u304d\u308c\u3070\u554f\u984c\u306a\u3044 1 /usr/libexec/java_home ADB\u30c9\u30e9\u30a4\u30d0\u306b\u3064\u3044\u3066(Windows\u306e\u307f) Windows\u3067\u306fAndroid\u7aef\u672b\u3092PC\u3067\u8a8d\u8b58\u3055\u305b\u308b\u305f\u3081\u306bADB\u30c9\u30e9\u30a4\u30d0\u3068\u3044\u3046\u3082\u306e\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3054\u5229\u7528\u306e\u7aef\u672b\u306e\u30e1\u30fc\u30ab\u30fc\u3001\u6a5f\u7a2e\u3092\u78ba\u8a8d\u3057\u3001\u5bfe\u8c61\u306e\u30c9\u30e9\u30a4\u30d0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u4e0b\u3055\u3044\u3002 \u4e0b\u8a18\u306b\u4e00\u90e8\u306e\u30e1\u30fc\u30ab\u30fc\u306b\u3064\u3044\u3066\u8a18\u8f09\u3057\u307e\u3059\u3002 \u30fbNEC \u300cUSB\u30c9\u30e9\u30a4\u30d0\uff08Android \u958b\u767a\u8005\u5411\u3051\u542b\u3080\uff09\u300d\u304b\u3089\u5bfe\u8c61\u306e\u6a5f\u7a2e\u3092\u9078\u629e\u3057\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 http://www.n-keitai.com/guide/download/ \u30fbSHARP http://k-tai.sharp.co.jp/support/developers/driver/ \u30fbFujitsu \u300cADB\u7528USB\u30c9\u30e9\u30a4\u30d0\u300d\u3088\u308a\u5bfe\u8c61\u306e\u6a5f\u7a2e\u3092\u9078\u629e\u3057\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 http://spf.fmworld.net/fujitsu/c/develop/sp/android/ \u30fbsony http://developer.sonymobile.com/downloads/drivers/ \u30fbGoogle(Nexus) \u300cDOWNLOAD GOOGLE USB DRIVER\u300d\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 http://developer.android.com/sdk/win-usb.html \u4e00\u90e8\u306e\u6a5f\u7a2e\u306f\u3053\u3061\u3089\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 http://www.samsung.com/us/support/downloads/SPH-M920ZKASPR \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u7d42\u308f\u3063\u305f\u3089Android\u7aef\u672b\u3092USB\u30b1\u30fc\u30d6\u30eb\u306b\u3066PC\u3068\u63a5\u7d9a\u3057\u3001\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3092\u958b\u304d\u307e\u3059\u3002 \u307b\u304b\u306e\u30c7\u30d0\u30a4\u30b9\uff08OS\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u53ef\u80fd\u6027\u3042\u308a\uff09\u5185\u306b\u300cAndroid ADB\u301c\u300d\u3068\u3044\u3046\u3082\u306e\u304c\uff01\u30de\u30fc\u30af\u304c\u3064\u3044\u305f\u72b6\u614b\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u9078\u629e\u3057\u3001\u30c9\u30e9\u30a4\u30d0\u306e\u66f4\u65b0\u3092\u884c\u3044\u307e\u3059\u3002 \u30c9\u30e9\u30a4\u30d0\u306e\u53c2\u7167\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3092\u53c2\u7167\u3068\u3057\u3001\u5148\u307b\u3069\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u3092\u53c2\u7167\u3057\u3001\u66f4\u65b0\u3092\u884c\u3044\u307e\u3059\u3002 Android SDK\u306b\u3064\u3044\u3066 \u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308bSDK\u3067\u4e0d\u8db3\u3057\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308b\u5834\u5408\u3001SDK Manager\u3088\u308a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u884c\u3044\u307e\u3059\u3002 Android Studio\u306e\u4e0a\u306e\u30e1\u30cb\u30e5\u30fc\u3088\u308a\u3001[Tools]->[Android]->[SDK Manager]\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u753b\u9762\u4e2d\u592e\u306e\u4e0b\u306b\u3042\u308b\u300cLaunch Standalone SDK Manager\u300d\u3092\u9078\u629e\u3057\u307e\u3059\u3002 SDK Manager\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3053\u3053\u3067\u5fc5\u8981\u306a\u3082\u306e\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u4e0b\u3055\u3044\u3002 \u306a\u304a\u3001Android 7.0\u306a\u3069\u306e\u9805\u76ee\u304c\u3042\u308a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30c1\u30a7\u30c3\u30af\u304c\u4ed8\u3044\u305f\u72b6\u614b\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u5bb9\u91cf\u304c\u5927\u304d\u3044\u305f\u3081\u3001\u4eca\u56de\u306f\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3057\u3066\u4e0b\u3055\u3044\u3002 \u203bAndroid.Support\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306e\u5bfe\u51e6\u6cd5 Android Studio\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u4f5c\u6210\u3067Android.Support\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u3089\u305a\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u5834\u5408\u3001SDK Manager\u306e\u6700\u5f8c\u306e\u65b9\u306b\u3042\u308bExtras\u306e\u300cAndroid Support Repository\u300d\u3068\u300cAndroid Support Library\u300d\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \u3053\u3053\u304c\u6700\u65b0\u3067\u306a\u3044\u5834\u5408\u306f\u307e\u305a\u6700\u65b0\u306b\u3057\u3066\u4e0b\u3055\u3044\u3002 \u6700\u65b0\u306e\u72b6\u614b\u3067\u30a8\u30e9\u30fc\u3068\u306a\u308b\u5834\u5408\u3001\u4e00\u5ea6\u524a\u9664\u3057\u3001\u518d\u5ea6\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u6b63\u5e38\u306b\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 SourceTree\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb SourceTree\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002 https://www.atlassian.com/ja/software/sourcetree/overview \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fdmg\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3002 SourceTree\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u753b\u9762\u304c\u3067\u308b\u306e\u3067\u3001SourceTree\u30a2\u30a4\u30b3\u30f3\u3092\u30c9\u30e9\u30c3\u30af&\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3002","title":"\u74b0\u5883\u8a2d\u5b9a"},{"location":"01_app/chapter01/#_1","text":"","title":"\u74b0\u5883\u8a2d\u5b9a"},{"location":"01_app/chapter01/#jdk","text":"\u4e0b\u8a18\u306e\u30b5\u30a4\u30c8\u3088\u308a\u74b0\u5883\u306b\u3042\u3063\u305f\u300cJava SE Development Kit 7u79\u300d\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002 http://www.oracle.com/technetwork/jp/java/javase/downloads/jdk7-downloads-1880260.html \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 \u306a\u304a\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306e\u8a2d\u5b9a\u306f\u521d\u671f\u72b6\u614b\u304b\u3089\u5909\u66f4\u305b\u305a\u884c\u3046\u3002","title":"JDK\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"01_app/chapter01/#android-studio","text":"Android Studio\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002 https://developer.android.com/sdk/index.html \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3002 \u203b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u3001PC\u540d\u3084\u30e6\u30fc\u30b6\u540d\u306b\u65e5\u672c\u8a9e\u3084\u30cf\u30a4\u30d5\u30f3\u306a\u3069\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u300cyour project location contains non-ascii characters\u300d\u3068\u3044\u3046\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u306e\u5834\u5408\u306f\u30d1\u30b9\u306b\u65e5\u672c\u8a9e\u304c\u542b\u307e\u308c\u306a\u3044\u5834\u6240\u306b\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u3001\u305d\u3061\u3089\u3092\u4f7f\u7528\u3057\u3066\u3059\u3059\u3081\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Mac\u306e\u5834\u5408\u3001Android Studio 1.0\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001Android Studio\u30a2\u30a4\u30b3\u30f3\u3092Applications\u306b\u30c9\u30e9\u30c3\u30b0&\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3002 /Application\u30d5\u30a9\u30eb\u30c0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u308b\u3002","title":"Android Studio\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"01_app/chapter01/#_2","text":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305fJDK\u3092\u63a2\u3059\u5834\u5408\u306b\u74b0\u5883\u5909\u6570\u300cJAVA_HOME\u300d\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u304c\u3042\u308b\u3002 \u5fc5\u8981\u306a\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3002","title":"\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a"},{"location":"01_app/chapter01/#windows","text":"1.\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30d1\u30cd\u30eb\u3092\u958b\u304f 2.\u30b7\u30b9\u30c6\u30e0\u3092\u9078\u629e\uff08\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u8868\u793a\u5f62\u5f0f\u3092\u5c0f\u3055\u3044\u30a2\u30a4\u30b3\u30f3\u306b\u5909\u66f4\uff09 3.\u8a73\u7d30\u8a2d\u5b9a\u30bf\u30d6\u306e\u4e00\u756a\u4e0b\u306b\u3042\u308b\u300c\u74b0\u5883\u5909\u6570\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b 4.\u30b7\u30b9\u30c6\u30e0\u74b0\u5883\u5909\u6570\u306b\u300cJAVA_HOME\u300d\u304c\u3042\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3001\u3042\u308b\u5834\u5408\u306f\u5909\u66f4\u3001\u306a\u3044\u5834\u5408\u306f\u65b0\u898f\u3092\u9078\u629e 5.\u5909\u6570\u540d\u306bJAVA_HOME\u3092\u8a2d\u5b9a\u3057\u3001\u5909\u6570\u5024\u306bJDK\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u306e\u30d1\u30b9\u3092\u8a2d\u5b9a 6.\u8a2d\u5b9a\u304c\u7d42\u308f\u3063\u305f\u3089\u300cOK\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b \u3053\u308c\u3067\u8a2d\u5b9a\u306f\u5b8c\u4e86\u3067\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u3066\u3001\u4e0b\u8a18\u3092\u5165\u529b\u5f8center\u30ad\u30fc\u62bc\u4e0b\u3067\u8a2d\u5b9a\u3057\u305f\u30d1\u30b9\u540d\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002 1 set JAVA_HOME","title":"Windows\u306e\u5834\u5408"},{"location":"01_app/chapter01/#mac","text":"Mac\u306e\u5834\u5408\u3001JAVA_HOME\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3066\u8868\u793a\u3055\u308c\u305f\u30d1\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3067\u53d6\u5f97\u3067\u304d\u308c\u3070\u554f\u984c\u306a\u3044 1 /usr/libexec/java_home","title":"Mac\u306e\u5834\u5408"},{"location":"01_app/chapter01/#adbwindows","text":"Windows\u3067\u306fAndroid\u7aef\u672b\u3092PC\u3067\u8a8d\u8b58\u3055\u305b\u308b\u305f\u3081\u306bADB\u30c9\u30e9\u30a4\u30d0\u3068\u3044\u3046\u3082\u306e\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3054\u5229\u7528\u306e\u7aef\u672b\u306e\u30e1\u30fc\u30ab\u30fc\u3001\u6a5f\u7a2e\u3092\u78ba\u8a8d\u3057\u3001\u5bfe\u8c61\u306e\u30c9\u30e9\u30a4\u30d0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u4e0b\u3055\u3044\u3002 \u4e0b\u8a18\u306b\u4e00\u90e8\u306e\u30e1\u30fc\u30ab\u30fc\u306b\u3064\u3044\u3066\u8a18\u8f09\u3057\u307e\u3059\u3002 \u30fbNEC \u300cUSB\u30c9\u30e9\u30a4\u30d0\uff08Android \u958b\u767a\u8005\u5411\u3051\u542b\u3080\uff09\u300d\u304b\u3089\u5bfe\u8c61\u306e\u6a5f\u7a2e\u3092\u9078\u629e\u3057\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 http://www.n-keitai.com/guide/download/ \u30fbSHARP http://k-tai.sharp.co.jp/support/developers/driver/ \u30fbFujitsu \u300cADB\u7528USB\u30c9\u30e9\u30a4\u30d0\u300d\u3088\u308a\u5bfe\u8c61\u306e\u6a5f\u7a2e\u3092\u9078\u629e\u3057\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 http://spf.fmworld.net/fujitsu/c/develop/sp/android/ \u30fbsony http://developer.sonymobile.com/downloads/drivers/ \u30fbGoogle(Nexus) \u300cDOWNLOAD GOOGLE USB DRIVER\u300d\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 http://developer.android.com/sdk/win-usb.html \u4e00\u90e8\u306e\u6a5f\u7a2e\u306f\u3053\u3061\u3089\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 http://www.samsung.com/us/support/downloads/SPH-M920ZKASPR \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u7d42\u308f\u3063\u305f\u3089Android\u7aef\u672b\u3092USB\u30b1\u30fc\u30d6\u30eb\u306b\u3066PC\u3068\u63a5\u7d9a\u3057\u3001\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3092\u958b\u304d\u307e\u3059\u3002 \u307b\u304b\u306e\u30c7\u30d0\u30a4\u30b9\uff08OS\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u53ef\u80fd\u6027\u3042\u308a\uff09\u5185\u306b\u300cAndroid ADB\u301c\u300d\u3068\u3044\u3046\u3082\u306e\u304c\uff01\u30de\u30fc\u30af\u304c\u3064\u3044\u305f\u72b6\u614b\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u9078\u629e\u3057\u3001\u30c9\u30e9\u30a4\u30d0\u306e\u66f4\u65b0\u3092\u884c\u3044\u307e\u3059\u3002 \u30c9\u30e9\u30a4\u30d0\u306e\u53c2\u7167\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3092\u53c2\u7167\u3068\u3057\u3001\u5148\u307b\u3069\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u3092\u53c2\u7167\u3057\u3001\u66f4\u65b0\u3092\u884c\u3044\u307e\u3059\u3002","title":"ADB\u30c9\u30e9\u30a4\u30d0\u306b\u3064\u3044\u3066(Windows\u306e\u307f)"},{"location":"01_app/chapter01/#android-sdk","text":"\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308bSDK\u3067\u4e0d\u8db3\u3057\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308b\u5834\u5408\u3001SDK Manager\u3088\u308a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u884c\u3044\u307e\u3059\u3002 Android Studio\u306e\u4e0a\u306e\u30e1\u30cb\u30e5\u30fc\u3088\u308a\u3001[Tools]->[Android]->[SDK Manager]\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u753b\u9762\u4e2d\u592e\u306e\u4e0b\u306b\u3042\u308b\u300cLaunch Standalone SDK Manager\u300d\u3092\u9078\u629e\u3057\u307e\u3059\u3002 SDK Manager\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3053\u3053\u3067\u5fc5\u8981\u306a\u3082\u306e\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u4e0b\u3055\u3044\u3002 \u306a\u304a\u3001Android 7.0\u306a\u3069\u306e\u9805\u76ee\u304c\u3042\u308a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30c1\u30a7\u30c3\u30af\u304c\u4ed8\u3044\u305f\u72b6\u614b\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u5bb9\u91cf\u304c\u5927\u304d\u3044\u305f\u3081\u3001\u4eca\u56de\u306f\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3057\u3066\u4e0b\u3055\u3044\u3002","title":"Android SDK\u306b\u3064\u3044\u3066"},{"location":"01_app/chapter01/#androidsupport","text":"Android Studio\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u4f5c\u6210\u3067Android.Support\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u3089\u305a\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u5834\u5408\u3001SDK Manager\u306e\u6700\u5f8c\u306e\u65b9\u306b\u3042\u308bExtras\u306e\u300cAndroid Support Repository\u300d\u3068\u300cAndroid Support Library\u300d\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \u3053\u3053\u304c\u6700\u65b0\u3067\u306a\u3044\u5834\u5408\u306f\u307e\u305a\u6700\u65b0\u306b\u3057\u3066\u4e0b\u3055\u3044\u3002 \u6700\u65b0\u306e\u72b6\u614b\u3067\u30a8\u30e9\u30fc\u3068\u306a\u308b\u5834\u5408\u3001\u4e00\u5ea6\u524a\u9664\u3057\u3001\u518d\u5ea6\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u6b63\u5e38\u306b\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u203bAndroid.Support\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306e\u5bfe\u51e6\u6cd5"},{"location":"01_app/chapter01/#sourcetree","text":"SourceTree\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002 https://www.atlassian.com/ja/software/sourcetree/overview \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fdmg\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3002 SourceTree\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u753b\u9762\u304c\u3067\u308b\u306e\u3067\u3001SourceTree\u30a2\u30a4\u30b3\u30f3\u3092\u30c9\u30e9\u30c3\u30af&\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3002","title":"SourceTree\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"01_app/chapter02/","text":"Hello World \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210 Android Studio\u3092\u8d77\u52d5\u3057\u3066\u3001\"Start a new Android Studio project\"\u3092\u9078\u629e\u3059\u308b\u3002 \"Create New Project\"\u30c0\u30a4\u30a2\u30ed\u30b0\u30dc\u30c3\u30af\u30b9\u3067\u3001Application name\u3068Company Domain:\u3092\u5165\u529b\u3059\u308b\u3002\u5165\u529b\u3057\u305f\u5024\u306f\u3001Package name\u306e\u6b04\u306b\u3082\u53cd\u6620\u3055\u308c\u308b\u3002 Package name\u306f\u3001Android\u30a2\u30d7\u30ea\u3092\u30e6\u30cb\u30fc\u30af\u306b\u8b58\u5225\u3059\u308b\u5024\u3067\u3042\u308a\u3001\u91cd\u8907\u3059\u308b\u3068\u3001Google Play\u3078\u306e\u767b\u9332\u304c\u3067\u304d\u306a\u304f\u306a\u308b\u3002 Google Play\u3067\u306f\u3001\u5404\u30a2\u30d7\u30ea\u306e\u8868\u793a\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3067\u304a\u3053\u306a\u3063\u3066\u3044\u308b\u3002 https://play.google.com/store/apps/details?id= com.gclue.ochineko \u307e\u305f\u3001Project location\u3067\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u5b58\u3059\u308b\u5834\u6240\u3092\u9078\u629e\u3059\u308b\u3002Mac\u306e\u5834\u5408\u3001Document\u4ee5\u4e0b\u306bworkspace_\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3068\u3044\u3046\u611f\u3058\u306b\u304a\u304f\u3068\u826f\u3044(\u3053\u3053\u306f\u500b\u4eba\u306e\u597d\u307f\u3001\u30eb\u30fc\u30eb\u306b\u5f93\u3046)\u3002 Phone and Tabletn\u304aMinimum SDK\u3067\u306f\u3001\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u6700\u4f4e\u30ec\u30d9\u30eb\u306eAPI\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3002 \u3069\u306e\u753b\u9762\u3092\u521d\u671f\u3067\u547c\u3073\u51fa\u3059\u304b\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u9078\u629e\u3059\u308b\u3002\u4eca\u56de\u306f\u3001Blank Activity \u3092\u9078\u629e\u3059\u308b\u3002 \u6700\u5f8c\u306b\u3001Activity Name\u7b49\u3092\u78ba\u8a8d\u3057\u3001[Finish]\u3092\u62bc\u3059\u3002 \u9805\u76ee\u540d \u5185\u5bb9 Activity Name: Android\u30a2\u30d7\u30ea\u306e\u8d77\u52d5\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308bActivity\u306e\u30af\u30e9\u30b9\u540d Layout Name: Activity Name\u3067\u6307\u5b9a\u3057\u305fActivity\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308bUI\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u306eXML\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a Title \u30a2\u30d7\u30ea\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u6307\u5b9a Menu Resource Name: Menu\u3067\u8868\u793a\u3059\u308b\u30ec\u30a4\u30a2\u30a6\u30c8\u306eXML\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a \u756a\u53f7 \u30d5\u30a1\u30a4\u30eb\u540d \u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9 \u2460 AndroidManifest.xml Android\u306eManifest\u60c5\u5831\u3092\u8a18\u8f09 \u2461 MainActivity.java \u8d77\u52d5\u6642\u306b\u547c\u3070\u308c\u308bActivity \u2462 activity_main.xml Activity\u306eUI\u30ec\u30a4\u30a2\u30a6\u30c8 \u2463 menu_main.xml \u30e1\u30cb\u30e5\u30fc\u306eUI\u30ec\u30a4\u30a2\u30a6\u30c8 \u2464 string.xml \u6587\u5b57\u60c5\u5831\u306eXML \u2465 styles.xml \u30b9\u30bf\u30a4\u30eb\u60c5\u5831\u306eXML \u2466 build.gradle Build gradle \u2467 build.gradle Build gradle AndroidManifext.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.gclue.helloworld\" > <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 package com.gclue.helloworld ; import android.support.v7.app.ActionBarActivity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends ActionBarActivity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } res/layout/activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"@string/hello_world\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" /> </RelativeLayout> res/menu/menu_main.xml 1 2 3 4 5 6 <menu xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" tools:context= \".MainActivity\" > <item android:id= \"@+id/action_settings\" android:title= \"@string/action_settings\" android:orderInCategory= \"100\" app:showAsAction= \"never\" /> </menu> res/values/strings.xml 1 2 3 4 5 6 <resources> <string name= \"app_name\" > HelloWorld </string> <string name= \"hello_world\" > Hello world! </string> <string name= \"action_settings\" > Settings </string> </resources> res/values/styles.xml 1 2 3 4 5 6 7 8 <resources> <!-- Base application theme. --> <style name= \"AppTheme\" parent= \"Theme.AppCompat.Light.DarkActionBar\" > <!-- Customize your theme here. --> </style> </resources> build.gradle(Project: HelloWorld) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // Top-level build file where you can add configuration options common to all sub-projects / modules . buildscript { repositories { jcenter() } dependencies { classpath 'com.android.tools. build : gradle : 1.1.0 ' // NOTE : Do not place your application dependencies here ; they belong // in the individual module build.gradle files } } allprojects { repositories { jcenter() } } build.gradle(Module: app) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 apply plugin : 'com.android.application' android { compileSdkVersion 21 buildToolsVersion \"21.1.2\" defaultConfig { applicationId \"com.gclue.helloworld\" minSdkVersion 19 targetSdkVersion 21 versionCode 1 versionName \"1.0\" } buildTypes { release { minifyEnabled false proguardFiles getDefaultProguardFile ( 'proguard-android.txt' ), 'proguard-rules.pro' } } } dependencies { compile fileTree ( dir : 'libs' , include : [ '*.jar' ]) compile 'com.android.support:appcompat-v7:21.0.3' } \u30c7\u30d0\u30a4\u30b9\u306e\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b [\u8a2d\u5b9a]-[\u7aef\u672b\u60c5\u5831]\u3092\u9078\u629e\u3059\u308b\u3002 \u30d3\u30eb\u30c9\u756a\u53f7\u309210\u56de\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30c7\u30d0\u30a4\u30b9\u304c\u958b\u767a\u30e2\u30fc\u30c9\u306b\u5909\u308f\u308b\u3002 [\u8a2d\u5b9a]-[\u7aef\u672b\u60c5\u5831]\u306b[\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3]\u306e\u9805\u76ee\u304c\u51fa\u73fe\u3059\u308b\u306e\u3067\u3001\u9078\u629e\u3059\u308b\u3002 USB\u30c7\u30d0\u30c3\u30af\u3092On\u306b\u3059\u308b\u3002 Build \u30e1\u30cb\u30e5\u30fc\u304b\u3089\u30a2\u30d7\u30ea\u3092\u7d42\u4e86 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 package com.gclue.helloworld ; import android.support.v7.app.ActionBarActivity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends ActionBarActivity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { // \u2460 \u7d42\u4e86. finish (); return true ; } return super . onOptionsItemSelected ( item ); } } finish()\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u30a2\u30d7\u30ea\u306f\u7d42\u4e86\u3059\u308b\u3002 \u2460 1 2 3 4 5 6 //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { // \u2460 \u7d42\u4e86. finish (); return true ; } res/values/strings.xml 1 2 3 4 5 6 <resources> <string name= \"app_name\" > HelloWorld </string> <string name= \"hello_world\" > Hello world! </string> <string name= \"action_settings\" > Exit </string> </resources> \"action_setting\"\u306e\u9805\u76ee\u3092Setting\u2192Exit\u306b\u4fee\u6b63\u3059\u308b\u3002","title":"Hello World"},{"location":"01_app/chapter02/#hello-world","text":"","title":"Hello World"},{"location":"01_app/chapter02/#_1","text":"Android Studio\u3092\u8d77\u52d5\u3057\u3066\u3001\"Start a new Android Studio project\"\u3092\u9078\u629e\u3059\u308b\u3002 \"Create New Project\"\u30c0\u30a4\u30a2\u30ed\u30b0\u30dc\u30c3\u30af\u30b9\u3067\u3001Application name\u3068Company Domain:\u3092\u5165\u529b\u3059\u308b\u3002\u5165\u529b\u3057\u305f\u5024\u306f\u3001Package name\u306e\u6b04\u306b\u3082\u53cd\u6620\u3055\u308c\u308b\u3002 Package name\u306f\u3001Android\u30a2\u30d7\u30ea\u3092\u30e6\u30cb\u30fc\u30af\u306b\u8b58\u5225\u3059\u308b\u5024\u3067\u3042\u308a\u3001\u91cd\u8907\u3059\u308b\u3068\u3001Google Play\u3078\u306e\u767b\u9332\u304c\u3067\u304d\u306a\u304f\u306a\u308b\u3002 Google Play\u3067\u306f\u3001\u5404\u30a2\u30d7\u30ea\u306e\u8868\u793a\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3067\u304a\u3053\u306a\u3063\u3066\u3044\u308b\u3002 https://play.google.com/store/apps/details?id= com.gclue.ochineko \u307e\u305f\u3001Project location\u3067\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u5b58\u3059\u308b\u5834\u6240\u3092\u9078\u629e\u3059\u308b\u3002Mac\u306e\u5834\u5408\u3001Document\u4ee5\u4e0b\u306bworkspace_\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3068\u3044\u3046\u611f\u3058\u306b\u304a\u304f\u3068\u826f\u3044(\u3053\u3053\u306f\u500b\u4eba\u306e\u597d\u307f\u3001\u30eb\u30fc\u30eb\u306b\u5f93\u3046)\u3002 Phone and Tabletn\u304aMinimum SDK\u3067\u306f\u3001\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u6700\u4f4e\u30ec\u30d9\u30eb\u306eAPI\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3002 \u3069\u306e\u753b\u9762\u3092\u521d\u671f\u3067\u547c\u3073\u51fa\u3059\u304b\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u9078\u629e\u3059\u308b\u3002\u4eca\u56de\u306f\u3001Blank Activity \u3092\u9078\u629e\u3059\u308b\u3002 \u6700\u5f8c\u306b\u3001Activity Name\u7b49\u3092\u78ba\u8a8d\u3057\u3001[Finish]\u3092\u62bc\u3059\u3002 \u9805\u76ee\u540d \u5185\u5bb9 Activity Name: Android\u30a2\u30d7\u30ea\u306e\u8d77\u52d5\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308bActivity\u306e\u30af\u30e9\u30b9\u540d Layout Name: Activity Name\u3067\u6307\u5b9a\u3057\u305fActivity\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308bUI\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u306eXML\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a Title \u30a2\u30d7\u30ea\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u6307\u5b9a Menu Resource Name: Menu\u3067\u8868\u793a\u3059\u308b\u30ec\u30a4\u30a2\u30a6\u30c8\u306eXML\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a \u756a\u53f7 \u30d5\u30a1\u30a4\u30eb\u540d \u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9 \u2460 AndroidManifest.xml Android\u306eManifest\u60c5\u5831\u3092\u8a18\u8f09 \u2461 MainActivity.java \u8d77\u52d5\u6642\u306b\u547c\u3070\u308c\u308bActivity \u2462 activity_main.xml Activity\u306eUI\u30ec\u30a4\u30a2\u30a6\u30c8 \u2463 menu_main.xml \u30e1\u30cb\u30e5\u30fc\u306eUI\u30ec\u30a4\u30a2\u30a6\u30c8 \u2464 string.xml \u6587\u5b57\u60c5\u5831\u306eXML \u2465 styles.xml \u30b9\u30bf\u30a4\u30eb\u60c5\u5831\u306eXML \u2466 build.gradle Build gradle \u2467 build.gradle Build gradle AndroidManifext.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.gclue.helloworld\" > <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210"},{"location":"01_app/chapter02/#mainactivityjava","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 package com.gclue.helloworld ; import android.support.v7.app.ActionBarActivity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends ActionBarActivity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } }","title":"MainActivity.java"},{"location":"01_app/chapter02/#reslayoutactivity_mainxml","text":"1 2 3 4 5 6 7 8 9 10 11 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <TextView android:text= \"@string/hello_world\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" /> </RelativeLayout>","title":"res/layout/activity_main.xml"},{"location":"01_app/chapter02/#resmenumenu_mainxml","text":"1 2 3 4 5 6 <menu xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" tools:context= \".MainActivity\" > <item android:id= \"@+id/action_settings\" android:title= \"@string/action_settings\" android:orderInCategory= \"100\" app:showAsAction= \"never\" /> </menu>","title":"res/menu/menu_main.xml"},{"location":"01_app/chapter02/#resvaluesstringsxml","text":"1 2 3 4 5 6 <resources> <string name= \"app_name\" > HelloWorld </string> <string name= \"hello_world\" > Hello world! </string> <string name= \"action_settings\" > Settings </string> </resources>","title":"res/values/strings.xml"},{"location":"01_app/chapter02/#resvaluesstylesxml","text":"1 2 3 4 5 6 7 8 <resources> <!-- Base application theme. --> <style name= \"AppTheme\" parent= \"Theme.AppCompat.Light.DarkActionBar\" > <!-- Customize your theme here. --> </style> </resources>","title":"res/values/styles.xml"},{"location":"01_app/chapter02/#buildgradleproject-helloworld","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // Top-level build file where you can add configuration options common to all sub-projects / modules . buildscript { repositories { jcenter() } dependencies { classpath 'com.android.tools. build : gradle : 1.1.0 ' // NOTE : Do not place your application dependencies here ; they belong // in the individual module build.gradle files } } allprojects { repositories { jcenter() } }","title":"build.gradle(Project: HelloWorld)"},{"location":"01_app/chapter02/#buildgradlemodule-app","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 apply plugin : 'com.android.application' android { compileSdkVersion 21 buildToolsVersion \"21.1.2\" defaultConfig { applicationId \"com.gclue.helloworld\" minSdkVersion 19 targetSdkVersion 21 versionCode 1 versionName \"1.0\" } buildTypes { release { minifyEnabled false proguardFiles getDefaultProguardFile ( 'proguard-android.txt' ), 'proguard-rules.pro' } } } dependencies { compile fileTree ( dir : 'libs' , include : [ '*.jar' ]) compile 'com.android.support:appcompat-v7:21.0.3' }","title":"build.gradle(Module: app)"},{"location":"01_app/chapter02/#_2","text":"[\u8a2d\u5b9a]-[\u7aef\u672b\u60c5\u5831]\u3092\u9078\u629e\u3059\u308b\u3002 \u30d3\u30eb\u30c9\u756a\u53f7\u309210\u56de\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30c7\u30d0\u30a4\u30b9\u304c\u958b\u767a\u30e2\u30fc\u30c9\u306b\u5909\u308f\u308b\u3002 [\u8a2d\u5b9a]-[\u7aef\u672b\u60c5\u5831]\u306b[\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3]\u306e\u9805\u76ee\u304c\u51fa\u73fe\u3059\u308b\u306e\u3067\u3001\u9078\u629e\u3059\u308b\u3002 USB\u30c7\u30d0\u30c3\u30af\u3092On\u306b\u3059\u308b\u3002","title":"\u30c7\u30d0\u30a4\u30b9\u306e\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b"},{"location":"01_app/chapter02/#build","text":"","title":"Build"},{"location":"01_app/chapter02/#_3","text":"","title":"\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u30a2\u30d7\u30ea\u3092\u7d42\u4e86"},{"location":"01_app/chapter02/#mainactivityjava_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 package com.gclue.helloworld ; import android.support.v7.app.ActionBarActivity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends ActionBarActivity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { // \u2460 \u7d42\u4e86. finish (); return true ; } return super . onOptionsItemSelected ( item ); } } finish()\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u30a2\u30d7\u30ea\u306f\u7d42\u4e86\u3059\u308b\u3002 \u2460 1 2 3 4 5 6 //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { // \u2460 \u7d42\u4e86. finish (); return true ; }","title":"MainActivity.java"},{"location":"01_app/chapter02/#resvaluesstringsxml_1","text":"1 2 3 4 5 6 <resources> <string name= \"app_name\" > HelloWorld </string> <string name= \"hello_world\" > Hello world! </string> <string name= \"action_settings\" > Exit </string> </resources> \"action_setting\"\u306e\u9805\u76ee\u3092Setting\u2192Exit\u306b\u4fee\u6b63\u3059\u308b\u3002","title":"res/values/strings.xml"},{"location":"01_app/chapter03/","text":"\u30a2\u30d7\u30ea\u306e\u7a2e\u985e Android\u3067\u306f\u3001\u753b\u9762\u306e\u3042\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u3059\u308b\u5834\u5408\u306f\u3001Activity\u3067\u958b\u767a\u3059\u308b\u3002Acivity\u4ee5\u5916\u306b\u3001\u753b\u9762\u306e\u306a\u3044\u5e38\u99d0\u578b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u53ef\u80fd\u306aService\u3084\u3001\u30c7\u30fc\u30bf\u3078\u306e\u30a2\u30af\u30bb\u30b9\u7528\u306eContentsProvider\u3001Android\u304b\u3089\u306eBroadcast\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306eBroadcast Reciever\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002 Activity AndroidManifest.xml AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.gclue.activitysample\" > <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> activity\u30bf\u30b0\u3067\u3001\u56f2\u308f\u308c\u305f\u90e8\u5206\u306b\u3001\u8d77\u52d5Java\u30af\u30e9\u30b9\u540d\u7b49\u3092\u8a18\u8f09\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> MainActivity.java MainActivity.java Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package com.gclue.activitysample ; import android.os.Bundle ; import android.support.v7.app.ActionBarActivity ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends Activity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); } } 1 public class MainActivity extends Activity { Service AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.example.service\" android:versionCode= \"1\" android:versionName= \"1.0\" > <uses-sdk android:minSdkVersion= \"10\" /> <application android:icon= \"@drawable/ic_launcher\" android:label= \"@string/app_name\" > <activity android:label= \"@string/app_name\" android:name= \".MainActivity\" > <intent-filter > <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <service android:name= \"MainService\" > </service> </application> </manifest> MainService.java Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 package com.example.service ; import android.app.Service ; import android.content.Intent ; import android.os.IBinder ; import android.util.Log ; public class MainService extends Service { @Override public IBinder onBind ( Intent intent ) { return null ; } @Override public void onCreate () { super . onCreate (); Log . i ( \"SERVICE\" , \"onCreate()\" ); } @Override public void onDestroy () { super . onDestroy (); Log . i ( \"SERVICE\" , \"onDestroy()\" ); } @Override public void onStart ( Intent intent , int startId ) { Log . i ( \"SERVICE\" , \"onStart\" ); } } 1 public class MainService extends Service { Broadcast Receiver AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.example.service\" android:versionCode= \"1\" android:versionName= \"1.0\" > <uses-sdk android:minSdkVersion= \"10\" /> <application android:icon= \"@drawable/ic_launcher\" android:label= \"@string/app_name\" > <receiver android:name= \"MainReceiver\" > <intent-filter> <action android:name= \"com.example.TEST\" /> </intent-filter> </receiver> </application> </manifest> MainReceiver.java Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package com.example.service ; import android.content.BroadcastReceiver ; import android.content.Context ; import android.content.Intent ; import android.widget.Toast ; /** * Broadcast Receiver */ public class MainReceiver extends BroadcastReceiver { @Override public void onReceive ( Context context , Intent intent ) { } } 1 public class MainReceiver extends BroadcastReceiver {","title":"\u30a2\u30d7\u30ea\u306e\u7a2e\u985e"},{"location":"01_app/chapter03/#_1","text":"Android\u3067\u306f\u3001\u753b\u9762\u306e\u3042\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u3059\u308b\u5834\u5408\u306f\u3001Activity\u3067\u958b\u767a\u3059\u308b\u3002Acivity\u4ee5\u5916\u306b\u3001\u753b\u9762\u306e\u306a\u3044\u5e38\u99d0\u578b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u53ef\u80fd\u306aService\u3084\u3001\u30c7\u30fc\u30bf\u3078\u306e\u30a2\u30af\u30bb\u30b9\u7528\u306eContentsProvider\u3001Android\u304b\u3089\u306eBroadcast\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306eBroadcast Reciever\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002","title":"\u30a2\u30d7\u30ea\u306e\u7a2e\u985e"},{"location":"01_app/chapter03/#activity","text":"","title":"Activity"},{"location":"01_app/chapter03/#androidmanifestxml","text":"AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.gclue.activitysample\" > <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> activity\u30bf\u30b0\u3067\u3001\u56f2\u308f\u308c\u305f\u90e8\u5206\u306b\u3001\u8d77\u52d5Java\u30af\u30e9\u30b9\u540d\u7b49\u3092\u8a18\u8f09\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity>","title":"AndroidManifest.xml"},{"location":"01_app/chapter03/#mainactivityjava","text":"MainActivity.java Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package com.gclue.activitysample ; import android.os.Bundle ; import android.support.v7.app.ActionBarActivity ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends Activity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); } } 1 public class MainActivity extends Activity {","title":"MainActivity.java"},{"location":"01_app/chapter03/#service","text":"AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.example.service\" android:versionCode= \"1\" android:versionName= \"1.0\" > <uses-sdk android:minSdkVersion= \"10\" /> <application android:icon= \"@drawable/ic_launcher\" android:label= \"@string/app_name\" > <activity android:label= \"@string/app_name\" android:name= \".MainActivity\" > <intent-filter > <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <service android:name= \"MainService\" > </service> </application> </manifest> MainService.java Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 package com.example.service ; import android.app.Service ; import android.content.Intent ; import android.os.IBinder ; import android.util.Log ; public class MainService extends Service { @Override public IBinder onBind ( Intent intent ) { return null ; } @Override public void onCreate () { super . onCreate (); Log . i ( \"SERVICE\" , \"onCreate()\" ); } @Override public void onDestroy () { super . onDestroy (); Log . i ( \"SERVICE\" , \"onDestroy()\" ); } @Override public void onStart ( Intent intent , int startId ) { Log . i ( \"SERVICE\" , \"onStart\" ); } } 1 public class MainService extends Service {","title":"Service"},{"location":"01_app/chapter03/#broadcast-receiver","text":"AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.example.service\" android:versionCode= \"1\" android:versionName= \"1.0\" > <uses-sdk android:minSdkVersion= \"10\" /> <application android:icon= \"@drawable/ic_launcher\" android:label= \"@string/app_name\" > <receiver android:name= \"MainReceiver\" > <intent-filter> <action android:name= \"com.example.TEST\" /> </intent-filter> </receiver> </application> </manifest> MainReceiver.java Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package com.example.service ; import android.content.BroadcastReceiver ; import android.content.Context ; import android.content.Intent ; import android.widget.Toast ; /** * Broadcast Receiver */ public class MainReceiver extends BroadcastReceiver { @Override public void onReceive ( Context context , Intent intent ) { } } 1 public class MainReceiver extends BroadcastReceiver {","title":"Broadcast Receiver"},{"location":"01_app/chapter04/","text":"Activity\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb Activity\u306e\u59cb\u307e\u308a\u304b\u3089\u7d42\u308f\u308a\u307e\u3067\u306e\u3001\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306e\u89e3\u8aac\u3092\u304a\u3053\u306a\u3046\u3002 \u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210 [File]-[New Project]\u3092\u9078\u629e\u3057\u3001\u65b0\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002 Application name\u3092\u8a2d\u5b9a\u3057\u3001[Next]\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3002 Minimum SDK\u306eAPI\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8a2d\u5b9a\u3059\u308b\u3002 Activity\u306fBlack Activity\u3092\u9078\u629e\u3059\u308b\u3002 onCreate() \u7701\u7565\u4e0d\u53ef onCreate()\u306f\u3001Activity\u304c\u751f\u6210\u3055\u308c\u308b\u3068\u4e00\u756a\u6700\u521d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 package com.gclue.activitysample ; import android.os.Bundle ; import android.support.v7.app.ActionBarActivity ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends ActionBarActivity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // \u2460 Log\u3092\u51fa\u529b Log . i ( \"LIFE\" , \"onCreate()\" ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } Log\u30af\u30e9\u30b9\u3092\u7528\u3044\u3066\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u30021\u3064\u76ee\u306e\u5f15\u6570\u306b\u30ad\u30fc\u30ef\u30fc\u30c9\u30012\u3064\u76ee\u306e\u5f15\u6570\u306b\u51fa\u529b\u3059\u308b\u5024\u3092\u6307\u5b9a\u3059\u308b\u3002 1 2 3 4 5 6 7 8 @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // \u2460 Log\u3092\u51fa\u529b Log . i ( \"LIFE\" , \"onCreate()\" ); } Log.i\u3068\u8a18\u8f09\u3059\u308b\u3068\u3001Log\u306e\u4e0b\u306b\u8d64\u7dda\u304c\u51fa\u529b\u3055\u308c\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3002\u3053\u308c\u306fLog\u30af\u30e9\u30b9\u304cImport\u3055\u308c\u3066\u3044\u306a\u3044\u4e8b\u306b\u8d77\u56e0\u3059\u308b\u30a8\u30e9\u30fc\u3067\u3042\u308bLog\u306e\u8d64\u7dda\u306e\u4e0a\u306b\u3001\u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u3092\u79fb\u52d5\u3059\u308b\u3002 Log\u306b\u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u3092\u79fb\u52d5\u3057\u3066\u3044\u308b\u72b6\u614b\u3067\u3001 alt + Enter\u3092\u62bc\u3059\u3068\u3001Log\u30af\u30e9\u30b9\u306eimport\u6587\u304c\u81ea\u52d5\u7684\u306b\u8ffd\u52a0\u3055\u308c\u308b\u3002 1 alt + Enter \u30ed\u30b0\u306e\u51fa\u529b\u3092\u78ba\u8a8d\u3059\u308b\u3002\u30ed\u30b0\u306fAndroid DDMS\u3092\u7528\u3044\u3066\u8868\u793a\u3059\u308b\u3002Studio\u306e\u4e0b\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308bAndroid\u30bf\u30d6\u3092\u9078\u629e\u3059\u308b\u3002 \u8868\u793a\u3059\u308b\u30ed\u30b0\u3092\u4eca\u8d77\u52d5\u4e2d\u306e\u30a2\u30d7\u30ea\u3060\u3051\u306b\u3059\u308b\u305f\u3081\u306b\u3001Filter\u3067\u81ea\u5206\u306e\u30a2\u30d7\u30ea\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3092\u9078\u629e\u3059\u308b\u3002 \u30ad\u30fc\u30ef\u30fc\u30c9\u306bLIFE\u3068\u3044\u308c\u3001\u8868\u793a\u3059\u308b\u30ed\u30b0\u3092\u7d5e\u308b\u3002 onCreate()\u4ee5\u5916\u3082\u5b9f\u88c5\u3059\u308b Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 package com.gclue.activitysample ; import android.os.Bundle ; import android.support.v7.app.ActionBarActivity ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends ActionBarActivity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // \u2460 Log\u3092\u51fa\u529b Log . i ( \"LIFE\" , \"onCreate()\" ); } // \u2461 \u4ed6\u306eActivity\u3092Override\u3059\u308b\u3002 @Override public void onStart () { super . onStart (); Log . i ( \"LIFE\" , \"onStart()\" ); } @Override public void onResume () { super . onResume (); Log . i ( \"LIFE\" , \"onResume()\" ); } @Override public void onPause () { super . onPause (); Log . i ( \"LIFE\" , \"onPause()\" ); } @Override public void onStop () { super . onStop (); Log . i ( \"LIFE\" , \"onStop()\" ); } @Override public void onRestart () { super . onRestart (); Log . i ( \"LIFE\" , \"onRestart()\" ); } @Override public void onDestroy () { super . onDestroy (); Log . i ( \"LIFE\" , \"onDestroy()\" ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 // \u2461 \u4ed6\u306eActivity\u3092Override\u3059\u308b\u3002 @Override public void onStart () { super . onStart (); Log . i ( \"LIFE\" , \"onStart()\" ); } @Override public void onResume () { super . onResume (); Log . i ( \"LIFE\" , \"onResume()\" ); } @Override public void onPause () { super . onPause (); Log . i ( \"LIFE\" , \"onPause()\" ); } @Override public void onStop () { super . onStop (); Log . i ( \"LIFE\" , \"onStop()\" ); } @Override public void onRestart () { super . onRestart (); Log . i ( \"LIFE\" , \"onRestart()\" ); } @Override public void onDestroy () { super . onDestroy (); Log . i ( \"LIFE\" , \"onDestroy()\" ); } \u8d77\u52d5\u3059\u308b\u3068\u3001 \u7d42\u4e86\u3059\u308b\u3068\u3001","title":"Activity\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb"},{"location":"01_app/chapter04/#activity","text":"Activity\u306e\u59cb\u307e\u308a\u304b\u3089\u7d42\u308f\u308a\u307e\u3067\u306e\u3001\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306e\u89e3\u8aac\u3092\u304a\u3053\u306a\u3046\u3002","title":"Activity\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb"},{"location":"01_app/chapter04/#_1","text":"[File]-[New Project]\u3092\u9078\u629e\u3057\u3001\u65b0\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002 Application name\u3092\u8a2d\u5b9a\u3057\u3001[Next]\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3002 Minimum SDK\u306eAPI\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8a2d\u5b9a\u3059\u308b\u3002 Activity\u306fBlack Activity\u3092\u9078\u629e\u3059\u308b\u3002","title":"\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210"},{"location":"01_app/chapter04/#oncreate","text":"onCreate()\u306f\u3001Activity\u304c\u751f\u6210\u3055\u308c\u308b\u3068\u4e00\u756a\u6700\u521d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 package com.gclue.activitysample ; import android.os.Bundle ; import android.support.v7.app.ActionBarActivity ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends ActionBarActivity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // \u2460 Log\u3092\u51fa\u529b Log . i ( \"LIFE\" , \"onCreate()\" ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } Log\u30af\u30e9\u30b9\u3092\u7528\u3044\u3066\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u30021\u3064\u76ee\u306e\u5f15\u6570\u306b\u30ad\u30fc\u30ef\u30fc\u30c9\u30012\u3064\u76ee\u306e\u5f15\u6570\u306b\u51fa\u529b\u3059\u308b\u5024\u3092\u6307\u5b9a\u3059\u308b\u3002 1 2 3 4 5 6 7 8 @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // \u2460 Log\u3092\u51fa\u529b Log . i ( \"LIFE\" , \"onCreate()\" ); } Log.i\u3068\u8a18\u8f09\u3059\u308b\u3068\u3001Log\u306e\u4e0b\u306b\u8d64\u7dda\u304c\u51fa\u529b\u3055\u308c\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3002\u3053\u308c\u306fLog\u30af\u30e9\u30b9\u304cImport\u3055\u308c\u3066\u3044\u306a\u3044\u4e8b\u306b\u8d77\u56e0\u3059\u308b\u30a8\u30e9\u30fc\u3067\u3042\u308bLog\u306e\u8d64\u7dda\u306e\u4e0a\u306b\u3001\u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u3092\u79fb\u52d5\u3059\u308b\u3002 Log\u306b\u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u3092\u79fb\u52d5\u3057\u3066\u3044\u308b\u72b6\u614b\u3067\u3001 alt + Enter\u3092\u62bc\u3059\u3068\u3001Log\u30af\u30e9\u30b9\u306eimport\u6587\u304c\u81ea\u52d5\u7684\u306b\u8ffd\u52a0\u3055\u308c\u308b\u3002 1 alt + Enter \u30ed\u30b0\u306e\u51fa\u529b\u3092\u78ba\u8a8d\u3059\u308b\u3002\u30ed\u30b0\u306fAndroid DDMS\u3092\u7528\u3044\u3066\u8868\u793a\u3059\u308b\u3002Studio\u306e\u4e0b\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308bAndroid\u30bf\u30d6\u3092\u9078\u629e\u3059\u308b\u3002 \u8868\u793a\u3059\u308b\u30ed\u30b0\u3092\u4eca\u8d77\u52d5\u4e2d\u306e\u30a2\u30d7\u30ea\u3060\u3051\u306b\u3059\u308b\u305f\u3081\u306b\u3001Filter\u3067\u81ea\u5206\u306e\u30a2\u30d7\u30ea\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3092\u9078\u629e\u3059\u308b\u3002 \u30ad\u30fc\u30ef\u30fc\u30c9\u306bLIFE\u3068\u3044\u308c\u3001\u8868\u793a\u3059\u308b\u30ed\u30b0\u3092\u7d5e\u308b\u3002","title":"onCreate() \u7701\u7565\u4e0d\u53ef"},{"location":"01_app/chapter04/#oncreate_1","text":"Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 package com.gclue.activitysample ; import android.os.Bundle ; import android.support.v7.app.ActionBarActivity ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends ActionBarActivity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // \u2460 Log\u3092\u51fa\u529b Log . i ( \"LIFE\" , \"onCreate()\" ); } // \u2461 \u4ed6\u306eActivity\u3092Override\u3059\u308b\u3002 @Override public void onStart () { super . onStart (); Log . i ( \"LIFE\" , \"onStart()\" ); } @Override public void onResume () { super . onResume (); Log . i ( \"LIFE\" , \"onResume()\" ); } @Override public void onPause () { super . onPause (); Log . i ( \"LIFE\" , \"onPause()\" ); } @Override public void onStop () { super . onStop (); Log . i ( \"LIFE\" , \"onStop()\" ); } @Override public void onRestart () { super . onRestart (); Log . i ( \"LIFE\" , \"onRestart()\" ); } @Override public void onDestroy () { super . onDestroy (); Log . i ( \"LIFE\" , \"onDestroy()\" ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 // \u2461 \u4ed6\u306eActivity\u3092Override\u3059\u308b\u3002 @Override public void onStart () { super . onStart (); Log . i ( \"LIFE\" , \"onStart()\" ); } @Override public void onResume () { super . onResume (); Log . i ( \"LIFE\" , \"onResume()\" ); } @Override public void onPause () { super . onPause (); Log . i ( \"LIFE\" , \"onPause()\" ); } @Override public void onStop () { super . onStop (); Log . i ( \"LIFE\" , \"onStop()\" ); } @Override public void onRestart () { super . onRestart (); Log . i ( \"LIFE\" , \"onRestart()\" ); } @Override public void onDestroy () { super . onDestroy (); Log . i ( \"LIFE\" , \"onDestroy()\" ); } \u8d77\u52d5\u3059\u308b\u3068\u3001 \u7d42\u4e86\u3059\u308b\u3068\u3001","title":"onCreate()\u4ee5\u5916\u3082\u5b9f\u88c5\u3059\u308b"},{"location":"01_app/chapter05/","text":"View\u3067\u306e\u63cf\u753b\u51e6\u7406 Window\u3068View Android\u3067\u306f\u3001Activity\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306f\u3001Windoow\u3092\u4fdd\u6301\u3059\u308b\u3002Window\u306bView\u3092\u8cbc\u308a\u4ed8\u3051\u308b\u4e8b\u3067\u3001\u63cf\u753b\u95a2\u9023\u306e\u51e6\u7406\u3092\u304a\u3053\u306a\u3046\u4e8b\u304c\u3067\u304d\u308b\u3002 View\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306f\u3001Window.setContentView() \u307e\u305f\u306f\u3001Window.addContentView()\u3067\u3001Window\u306b\u8cbc\u308a\u4ed8\u3051\u3089\u308c\u308b\u3002 \u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210 [File]-[New Project]\u3092\u9078\u629e\u3057\u3001\u65b0\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002 Application name\u3092\u8a2d\u5b9a\u3057\u3001[Next]\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3002 Minimum SDK\u306eAPI\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8a2d\u5b9a\u3059\u308b\u3002 Activity\u306fBlack Activity\u3092\u9078\u629e\u3059\u308b\u3002 View\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9 \u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u306e\u4e0a\u3067\u3001CTRL + \u53f3\u30af\u30ea\u30c3\u30af\u3067\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u3092\u8868\u793a\u3059\u308b\u3002 MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 package com . gclue . viewsample ; import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Color ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9 . */ class MyView extends View { /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf . * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046 . */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a canvas . drawColor ( Color . BLUE ); } } MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package com.gclue.viewsample ; import android.support.v7.app.ActionBarActivity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends ActionBarActivity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); // \u2460 MyView\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210. MyView mView = new MyView ( this ); // \u2461 mView\u3092Window\u306b\u8cbc\u308a\u4ed8\u3051. setContentView ( mView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } MyView\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u3001Windows.setContentView()\u3067Window\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u3002 1 2 3 4 5 // \u2460 MyView\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210. MyView mView = new MyView ( this ); // \u2461 mView\u3092Window\u306b\u8cbc\u308a\u4ed8\u3051. setContentView ( mView ); \u7dda\u3092\u5f15\u304f MyView.java Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package com.gclue.viewsample ; import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); // \u7dda\u3067\u63cf\u753b. canvas . drawLine ( 0 , 0 , 50 , 50 , mPaint ); } } Java 1 2 3 4 5 6 7 // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); // \u7dda\u3067\u63cf\u753b. canvas . drawLine ( 0 , 0 , 50 , 50 , mPaint ); \u8d64\u3044\u592a\u7dda\u3092(0,0)-(500,500)\u306b\u5f15\u304f 1 2 3 4 5 6 7 8 // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setStrokeWidth ( 10 ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // \u7dda\u3067\u63cf\u753b. canvas . drawLine ( 0 , 0 , 500 , 500 , mPaint ); \u6587\u5b57\u5217\u306e\u63cf\u753b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 package com.gclue.viewsample ; import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setTextSize ( 100 ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"HELLO ANDROID\" , 20 , 500 , mPaint ); } } \u56db\u89d2\u5f62\u306e\u63cf\u753b MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package com.gclue.viewsample ; import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // \u56db\u89d2\u3092\u63cf\u753b. canvas . drawRect ( 50 , 100 , 200 , 250 , mPaint ); } } \u4e2d\u5857\u308a\u3057\u306a\u3044\u3002 1 2 3 4 5 6 7 // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . STROKE ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // \u56db\u89d2\u3092\u63cf\u753b. canvas . drawRect ( 50 , 100 , 200 , 250 , mPaint ); \u5186\u306e\u63cf\u753b MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package com . gclue . viewsample ; import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9 . */ class MyView extends View { /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf . * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046 . */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a . canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a . Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // \u5186\u3092\u63cf\u753b . canvas . drawCircle ( 500 , 500 , 200 , mPaint ); } } \u70b9\u306e\u63cf\u753b MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 package com.gclue.viewsample ; import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // \u70b9\u3092\u63cf\u753b. canvas . drawPoint ( 200 , 200 , mPaint ); } } \u753b\u50cf\u306e\u63cf\u753b gclue.png \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u3001gclue_logo.gif\u3092\u9078\u629e\u3057\u3001CTRL + \u53f3\u30af\u30ea\u30c3\u30af\u3067\u8868\u793a\u3055\u308c\u308b\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u3067\u3001gclue_logo.gif\u306e\u30b3\u30d4\u30fc\u3092\u9078\u3076\u3002 Studio\u306edrawable\u3092\u9078\u629e\u3057\u3001\u305d\u306e\u4e0a\u3067CTRL + \u53f3\u30af\u30ea\u30c3\u30af\u3092\u62bc\u3057\u3066\u8868\u793a\u3055\u308c\u308b\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089Paste\u3092\u9078\u629e\u3059\u308b\u3002 \u30b3\u30d4\u30fc\u5148\u30d5\u30a9\u30eb\u30c0\u3092\u78ba\u8a8d\u3057\u3001[OK]\u3067\u30b3\u30d4\u30fc\u3059\u308b\u3002 MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 package com.gclue.viewsample ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u753b\u50cf\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570. */ private Bitmap myBitmap ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210 Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f(res/drawable/gclue_logo.gif) myBitmap = BitmapFactory . decodeResource ( res , R . drawable . gclue_logo ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. canvas . drawBitmap ( myBitmap , 0 , 0 , mPaint ); } } \u56db\u9685\u3092\u3068\u308b MyView.java Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 package com.gclue.viewsample ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.util.Log ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u753b\u50cf\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570. */ private Bitmap myBitmap ; /** * \u2460 \u30bf\u30b0. */ private final static String TAG = \"DRAW\" ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210 Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f(res/drawable/gclue_logo.gif) myBitmap = BitmapFactory . decodeResource ( res , R . drawable . gclue_logo ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. canvas . drawBitmap ( myBitmap , 0 , 0 , mPaint ); // \u2461 \u56db\u9685\u3092\u3068\u308b. int viewWidth = this . getWidth (); int viewHeight = this . getHeight (); int imgWidth = myBitmap . getWidth (); int imgHeight = myBitmap . getHeight (); Log . i ( TAG , \"viewWidth:\" + viewWidth ); Log . i ( TAG , \"viewHeight:\" + viewHeight ); Log . i ( TAG , \"imgWidth:\" + imgWidth ); Log . i ( TAG , \"imgHeight:\" + imgHeight ); } } Java 1 2 3 4 /** * \u2460 \u30bf\u30b0. */ private final static String TAG = \"DRAW\" ; Java 1 2 3 4 5 6 7 8 9 10 // \u2461 \u56db\u9685\u3092\u3068\u308b. int viewWidth = this . getWidth (); int viewHeight = this . getHeight (); int imgWidth = myBitmap . getWidth (); int imgHeight = myBitmap . getHeight (); Log . i ( TAG , \"viewWidth:\" + viewWidth ); Log . i ( TAG , \"viewHeight:\" + viewHeight ); Log . i ( TAG , \"imgWidth:\" + imgWidth ); Log . i ( TAG , \"imgHeight:\" + imgHeight );","title":"View\u3067\u306e\u63cf\u753b\u51e6\u7406"},{"location":"01_app/chapter05/#view","text":"","title":"View\u3067\u306e\u63cf\u753b\u51e6\u7406"},{"location":"01_app/chapter05/#windowview","text":"Android\u3067\u306f\u3001Activity\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306f\u3001Windoow\u3092\u4fdd\u6301\u3059\u308b\u3002Window\u306bView\u3092\u8cbc\u308a\u4ed8\u3051\u308b\u4e8b\u3067\u3001\u63cf\u753b\u95a2\u9023\u306e\u51e6\u7406\u3092\u304a\u3053\u306a\u3046\u4e8b\u304c\u3067\u304d\u308b\u3002 View\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306f\u3001Window.setContentView() \u307e\u305f\u306f\u3001Window.addContentView()\u3067\u3001Window\u306b\u8cbc\u308a\u4ed8\u3051\u3089\u308c\u308b\u3002","title":"Window\u3068View"},{"location":"01_app/chapter05/#_1","text":"[File]-[New Project]\u3092\u9078\u629e\u3057\u3001\u65b0\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002 Application name\u3092\u8a2d\u5b9a\u3057\u3001[Next]\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3002 Minimum SDK\u306eAPI\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8a2d\u5b9a\u3059\u308b\u3002 Activity\u306fBlack Activity\u3092\u9078\u629e\u3059\u308b\u3002","title":"\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210"},{"location":"01_app/chapter05/#view_1","text":"\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u306e\u4e0a\u3067\u3001CTRL + \u53f3\u30af\u30ea\u30c3\u30af\u3067\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u3092\u8868\u793a\u3059\u308b\u3002 MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 package com . gclue . viewsample ; import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Color ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9 . */ class MyView extends View { /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf . * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046 . */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a canvas . drawColor ( Color . BLUE ); } } MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package com.gclue.viewsample ; import android.support.v7.app.ActionBarActivity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends ActionBarActivity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); // \u2460 MyView\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210. MyView mView = new MyView ( this ); // \u2461 mView\u3092Window\u306b\u8cbc\u308a\u4ed8\u3051. setContentView ( mView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } MyView\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u3001Windows.setContentView()\u3067Window\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u3002 1 2 3 4 5 // \u2460 MyView\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210. MyView mView = new MyView ( this ); // \u2461 mView\u3092Window\u306b\u8cbc\u308a\u4ed8\u3051. setContentView ( mView );","title":"View\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9"},{"location":"01_app/chapter05/#_2","text":"MyView.java Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package com.gclue.viewsample ; import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); // \u7dda\u3067\u63cf\u753b. canvas . drawLine ( 0 , 0 , 50 , 50 , mPaint ); } } Java 1 2 3 4 5 6 7 // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 255 , 100 ); // \u7dda\u3067\u63cf\u753b. canvas . drawLine ( 0 , 0 , 50 , 50 , mPaint ); \u8d64\u3044\u592a\u7dda\u3092(0,0)-(500,500)\u306b\u5f15\u304f 1 2 3 4 5 6 7 8 // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setStrokeWidth ( 10 ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // \u7dda\u3067\u63cf\u753b. canvas . drawLine ( 0 , 0 , 500 , 500 , mPaint );","title":"\u7dda\u3092\u5f15\u304f"},{"location":"01_app/chapter05/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 package com.gclue.viewsample ; import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setTextSize ( 100 ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // \u6587\u5b57\u3092\u63cf\u753b. canvas . drawText ( \"HELLO ANDROID\" , 20 , 500 , mPaint ); } }","title":"\u6587\u5b57\u5217\u306e\u63cf\u753b"},{"location":"01_app/chapter05/#_4","text":"MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package com.gclue.viewsample ; import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // \u56db\u89d2\u3092\u63cf\u753b. canvas . drawRect ( 50 , 100 , 200 , 250 , mPaint ); } } \u4e2d\u5857\u308a\u3057\u306a\u3044\u3002 1 2 3 4 5 6 7 // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . STROKE ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // \u56db\u89d2\u3092\u63cf\u753b. canvas . drawRect ( 50 , 100 , 200 , 250 , mPaint );","title":"\u56db\u89d2\u5f62\u306e\u63cf\u753b"},{"location":"01_app/chapter05/#_5","text":"MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package com . gclue . viewsample ; import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9 . */ class MyView extends View { /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf . * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046 . */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a . canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a . Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // \u5186\u3092\u63cf\u753b . canvas . drawCircle ( 500 , 500 , 200 , mPaint ); } }","title":"\u5186\u306e\u63cf\u753b"},{"location":"01_app/chapter05/#_6","text":"MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 package com.gclue.viewsample ; import android.content.Context ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // \u70b9\u3092\u63cf\u753b. canvas . drawPoint ( 200 , 200 , mPaint ); } }","title":"\u70b9\u306e\u63cf\u753b"},{"location":"01_app/chapter05/#_7","text":"gclue.png \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u3001gclue_logo.gif\u3092\u9078\u629e\u3057\u3001CTRL + \u53f3\u30af\u30ea\u30c3\u30af\u3067\u8868\u793a\u3055\u308c\u308b\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u3067\u3001gclue_logo.gif\u306e\u30b3\u30d4\u30fc\u3092\u9078\u3076\u3002 Studio\u306edrawable\u3092\u9078\u629e\u3057\u3001\u305d\u306e\u4e0a\u3067CTRL + \u53f3\u30af\u30ea\u30c3\u30af\u3092\u62bc\u3057\u3066\u8868\u793a\u3055\u308c\u308b\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089Paste\u3092\u9078\u629e\u3059\u308b\u3002 \u30b3\u30d4\u30fc\u5148\u30d5\u30a9\u30eb\u30c0\u3092\u78ba\u8a8d\u3057\u3001[OK]\u3067\u30b3\u30d4\u30fc\u3059\u308b\u3002 MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 package com.gclue.viewsample ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u753b\u50cf\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570. */ private Bitmap myBitmap ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210 Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f(res/drawable/gclue_logo.gif) myBitmap = BitmapFactory . decodeResource ( res , R . drawable . gclue_logo ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. canvas . drawBitmap ( myBitmap , 0 , 0 , mPaint ); } }","title":"\u753b\u50cf\u306e\u63cf\u753b"},{"location":"01_app/chapter05/#_8","text":"MyView.java Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 package com.gclue.viewsample ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.util.Log ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u753b\u50cf\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570. */ private Bitmap myBitmap ; /** * \u2460 \u30bf\u30b0. */ private final static String TAG = \"DRAW\" ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210 Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f(res/drawable/gclue_logo.gif) myBitmap = BitmapFactory . decodeResource ( res , R . drawable . gclue_logo ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. canvas . drawBitmap ( myBitmap , 0 , 0 , mPaint ); // \u2461 \u56db\u9685\u3092\u3068\u308b. int viewWidth = this . getWidth (); int viewHeight = this . getHeight (); int imgWidth = myBitmap . getWidth (); int imgHeight = myBitmap . getHeight (); Log . i ( TAG , \"viewWidth:\" + viewWidth ); Log . i ( TAG , \"viewHeight:\" + viewHeight ); Log . i ( TAG , \"imgWidth:\" + imgWidth ); Log . i ( TAG , \"imgHeight:\" + imgHeight ); } } Java 1 2 3 4 /** * \u2460 \u30bf\u30b0. */ private final static String TAG = \"DRAW\" ; Java 1 2 3 4 5 6 7 8 9 10 // \u2461 \u56db\u9685\u3092\u3068\u308b. int viewWidth = this . getWidth (); int viewHeight = this . getHeight (); int imgWidth = myBitmap . getWidth (); int imgHeight = myBitmap . getHeight (); Log . i ( TAG , \"viewWidth:\" + viewWidth ); Log . i ( TAG , \"viewHeight:\" + viewHeight ); Log . i ( TAG , \"imgWidth:\" + imgWidth ); Log . i ( TAG , \"imgHeight:\" + imgHeight );","title":"\u56db\u9685\u3092\u3068\u308b"},{"location":"01_app/chapter06/","text":"\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8 \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8 \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306f\u3001View\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3067\u3001onTouchEvent()\u3092\u547c\u3073\u51fa\u3059\u4e8b\u3067\u3001\u30bf\u30c3\u30c1\u3055\u308c\u305f\u5ea7\u6a19\u306e\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002 MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 package com.gclue.viewsample ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.MotionEvent ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u753b\u50cf\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570. */ private Bitmap myBitmap ; /** * \u30bf\u30b0. */ private final static String TAG = \"DRAW\" ; /** * X. */ private int x ; /** * Y. */ private int y ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210 Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f(res/drawable/gclue_logo.gif) myBitmap = BitmapFactory . decodeResource ( res , R . drawable . gclue_logo ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. canvas . drawBitmap ( myBitmap , x , y , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ @Override public boolean onTouchEvent ( MotionEvent event ) { // \u30bf\u30c3\u30c1\u3057\u305f\u6642\u306b\u5b9f\u884c if ( event . getAction () == MotionEvent . ACTION_DOWN ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); } return true ; } } \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306e\u7a2e\u985e \u5909\u6570\u540d \u51e6\u7406\u5185\u5bb9 MotionEvent.ACTION_DOWN \u30bf\u30c3\u30c1\u3055\u308c\u305f\u969b\u306b\u53d6\u5f97\u3067\u304d\u308b MotionEvent.ACTION_MOVE \u30bf\u30c3\u30c1\u3055\u308c\u305f\u3042\u3068\u306e\u79fb\u52d5\u4e2d\u306b\u53d6\u5f97\u3067\u304d\u308b MotionEvent.ACTION_UP \u30bf\u30c3\u30c1\u304c\u8a71\u3055\u308c\u305f\u969b\u306b\u53d6\u5f97\u3067\u304d\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ @Override public boolean onTouchEvent ( MotionEvent event ) { // \u30bf\u30c3\u30c1\u3057\u305f\u6642\u306b\u5b9f\u884c if ( event . getAction () == MotionEvent . ACTION_DOWN ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); } else if ( event . getAction () == MotionEvent . ACTION_MOVE ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); } return true ; }","title":"\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8"},{"location":"01_app/chapter06/#_1","text":"","title":"\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8"},{"location":"01_app/chapter06/#_2","text":"\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306f\u3001View\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3067\u3001onTouchEvent()\u3092\u547c\u3073\u51fa\u3059\u4e8b\u3067\u3001\u30bf\u30c3\u30c1\u3055\u308c\u305f\u5ea7\u6a19\u306e\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002 MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 package com.gclue.viewsample ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.MotionEvent ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u753b\u50cf\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570. */ private Bitmap myBitmap ; /** * \u30bf\u30b0. */ private final static String TAG = \"DRAW\" ; /** * X. */ private int x ; /** * Y. */ private int y ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210 Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f(res/drawable/gclue_logo.gif) myBitmap = BitmapFactory . decodeResource ( res , R . drawable . gclue_logo ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. canvas . drawBitmap ( myBitmap , x , y , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ @Override public boolean onTouchEvent ( MotionEvent event ) { // \u30bf\u30c3\u30c1\u3057\u305f\u6642\u306b\u5b9f\u884c if ( event . getAction () == MotionEvent . ACTION_DOWN ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); } return true ; } }","title":"\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8"},{"location":"01_app/chapter06/#_3","text":"\u5909\u6570\u540d \u51e6\u7406\u5185\u5bb9 MotionEvent.ACTION_DOWN \u30bf\u30c3\u30c1\u3055\u308c\u305f\u969b\u306b\u53d6\u5f97\u3067\u304d\u308b MotionEvent.ACTION_MOVE \u30bf\u30c3\u30c1\u3055\u308c\u305f\u3042\u3068\u306e\u79fb\u52d5\u4e2d\u306b\u53d6\u5f97\u3067\u304d\u308b MotionEvent.ACTION_UP \u30bf\u30c3\u30c1\u304c\u8a71\u3055\u308c\u305f\u969b\u306b\u53d6\u5f97\u3067\u304d\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ @Override public boolean onTouchEvent ( MotionEvent event ) { // \u30bf\u30c3\u30c1\u3057\u305f\u6642\u306b\u5b9f\u884c if ( event . getAction () == MotionEvent . ACTION_DOWN ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); } else if ( event . getAction () == MotionEvent . ACTION_MOVE ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); } return true ; }","title":"\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306e\u7a2e\u985e"},{"location":"01_app/chapter07/","text":"\u97f3\u306e\u518d\u751f \u97f3\u306e\u7528\u610f Github\u3088\u308a\u97f3\u6e90\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308b\u3002 taiko.wav \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304d\u305f\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u306e\u4e0a\u3067\u3001CTRL + \u53f3\u30af\u30ea\u30c3\u30af\u3092\u9078\u629e\u3057\u8868\u793a\u3055\u308c\u308b\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089\"taiko.wav\"\u3092\u30b3\u30d4\u30fc\u3092\u9078\u629e\u3059\u308b\u3002 Android Studio\u306eres\u30d5\u30a9\u30eb\u30c0\u306e\u4e0a\u3067\u3001CTRL + \u53f3\u30af\u30ea\u30c3\u30af\u3092\u9078\u629e\u3057\u8868\u793a\u3055\u308c\u308b\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089[New]-[Directory]\u3092\u9078\u629e\u3059\u308b\u3002 raw\u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3002res/raw res/raw\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0a\u3067\u3001CTRL + \u53f3\u30af\u30ea\u30c3\u30af\u3067\u8868\u793a\u3055\u308c\u308b\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u3067\u3001Paste\u3092\u9078\u629e\u3059\u308b\u3002 \u79fb\u52d5\u30d5\u30a9\u30eb\u30c0\u3092\u78ba\u8a8d\u3057\u3001OK\u3092\u62bc\u3057\u3066\u79fb\u52d5\u304c\u5b8c\u4e86\u3059\u308b\u3002 \u97f3\u306e\u518d\u751f(\u77ed\u3044\u97f3) MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 package com.gclue.viewsample ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.media.MediaPlayer ; import android.view.MotionEvent ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u753b\u50cf\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570. */ private Bitmap myBitmap ; /** * \u30bf\u30b0. */ private final static String TAG = \"DRAW\" ; /** * X. */ private int x ; /** * Y. */ private int y ; /** * \u30b5\u30a6\u30f3\u30c9\u518d\u751f\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b. */ private MediaPlayer mMediaPlayer ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210 Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f(res/drawable/gclue_logo.gif) myBitmap = BitmapFactory . decodeResource ( res , R . drawable . gclue_logo ); // \u30b5\u30a6\u30f3\u30c9\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\uff08/res/raw/pon.mp3\uff09 mMediaPlayer = MediaPlayer . create ( context , R . raw . taiko ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. canvas . drawBitmap ( myBitmap , x , y , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ @Override public boolean onTouchEvent ( MotionEvent event ) { // \u30bf\u30c3\u30c1\u3057\u305f\u6642\u306b\u5b9f\u884c if ( event . getAction () == MotionEvent . ACTION_DOWN ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); // \u97f3\u306e\u518d\u751f\u958b\u59cb\u4f4d\u7f6e\u30920\u30df\u30ea\u30bb\u30ab\u30f3\u30c9\u306e\u4f4d\u7f6e\u306b\u8a2d\u5b9a\u3059\u308b. mMediaPlayer . seekTo ( 0 ); // \u97f3\u306e\u518d\u751f\u3092\u958b\u59cb\u3059\u308b. mMediaPlayer . start (); } else if ( event . getAction () == MotionEvent . ACTION_MOVE ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); } return true ; } } \u97f3\u306e\u518d\u751f(\u9577\u3044\u97f3) koto.wav\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001Android Studio\u306eres/raw\u30d5\u30a9\u30eb\u30c0\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3002 koto.wav \u97f3\u304c\u9577\u3044\u5834\u5408\u306f\u3001\u97f3\u306e\u505c\u6b62\u306bMediaPlayer.stop()\u3092\u547c\u3073\u51fa\u3059\u3002\u305d\u306e\u969b\u306b\u3001MediaPlater.prepare()\u3092\u884c\u308f\u306a\u3044\u3068\u3001\u518d\u3073 MediaPlayer.play()\u304c\u3067\u304d\u306a\u304f\u306a\u308b\u3002 MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 package com.gclue.viewsample ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.media.MediaPlayer ; import android.view.MotionEvent ; import android.view.View ; import java.io.IOException ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u753b\u50cf\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570. */ private Bitmap myBitmap ; /** * \u30bf\u30b0. */ private final static String TAG = \"DRAW\" ; /** * X. */ private int x ; /** * Y. */ private int y ; /** * \u30b5\u30a6\u30f3\u30c9\u518d\u751f\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b. */ private MediaPlayer mMediaPlayer ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210 Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f(res/drawable/gclue_logo.gif) myBitmap = BitmapFactory . decodeResource ( res , R . drawable . gclue_logo ); // \u30b5\u30a6\u30f3\u30c9\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\uff08/res/raw/pon.mp3\uff09 mMediaPlayer = MediaPlayer . create ( context , R . raw . koto ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. canvas . drawBitmap ( myBitmap , x , y , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ @Override public boolean onTouchEvent ( MotionEvent event ) { // \u30bf\u30c3\u30c1\u3057\u305f\u6642\u306b\u5b9f\u884c if ( event . getAction () == MotionEvent . ACTION_DOWN ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); // \u97f3\u306e\u518d\u751f\u958b\u59cb\u4f4d\u7f6e\u30920\u30df\u30ea\u30bb\u30ab\u30f3\u30c9\u306e\u4f4d\u7f6e\u306b\u8a2d\u5b9a\u3059\u308b. mMediaPlayer . seekTo ( 0 ); // \u97f3\u306e\u518d\u751f\u3092\u958b\u59cb\u3059\u308b. mMediaPlayer . start (); } else if ( event . getAction () == MotionEvent . ACTION_MOVE ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); } else if ( event . getAction () == MotionEvent . ACTION_UP ) { // ACTION_UP\u306f\u6307\u304c\u96e2\u308c\u305f\u6642. // \u97f3\u3092\u505c\u6b62\u3059\u308b. mMediaPlayer . stop (); // \u4e00\u5ea6\u518d\u751f\u3092stop()\u3057\u3066\u304b\u3089\u518d\u3073\u97f3\u3092\u518d\u751f\u3059\u308b\u5834\u5408\u306f\u3001prepare()\u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308b try { mMediaPlayer . prepare (); } catch ( IllegalStateException e ) { e . printStackTrace (); } catch ( IOException e ) { e . printStackTrace (); } } return true ; } }","title":"\u97f3\u306e\u518d\u751f"},{"location":"01_app/chapter07/#_1","text":"","title":"\u97f3\u306e\u518d\u751f"},{"location":"01_app/chapter07/#_2","text":"Github\u3088\u308a\u97f3\u6e90\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308b\u3002 taiko.wav \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304d\u305f\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u306e\u4e0a\u3067\u3001CTRL + \u53f3\u30af\u30ea\u30c3\u30af\u3092\u9078\u629e\u3057\u8868\u793a\u3055\u308c\u308b\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089\"taiko.wav\"\u3092\u30b3\u30d4\u30fc\u3092\u9078\u629e\u3059\u308b\u3002 Android Studio\u306eres\u30d5\u30a9\u30eb\u30c0\u306e\u4e0a\u3067\u3001CTRL + \u53f3\u30af\u30ea\u30c3\u30af\u3092\u9078\u629e\u3057\u8868\u793a\u3055\u308c\u308b\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089[New]-[Directory]\u3092\u9078\u629e\u3059\u308b\u3002 raw\u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3002res/raw res/raw\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0a\u3067\u3001CTRL + \u53f3\u30af\u30ea\u30c3\u30af\u3067\u8868\u793a\u3055\u308c\u308b\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u3067\u3001Paste\u3092\u9078\u629e\u3059\u308b\u3002 \u79fb\u52d5\u30d5\u30a9\u30eb\u30c0\u3092\u78ba\u8a8d\u3057\u3001OK\u3092\u62bc\u3057\u3066\u79fb\u52d5\u304c\u5b8c\u4e86\u3059\u308b\u3002","title":"\u97f3\u306e\u7528\u610f"},{"location":"01_app/chapter07/#_3","text":"MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 package com.gclue.viewsample ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.media.MediaPlayer ; import android.view.MotionEvent ; import android.view.View ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u753b\u50cf\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570. */ private Bitmap myBitmap ; /** * \u30bf\u30b0. */ private final static String TAG = \"DRAW\" ; /** * X. */ private int x ; /** * Y. */ private int y ; /** * \u30b5\u30a6\u30f3\u30c9\u518d\u751f\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b. */ private MediaPlayer mMediaPlayer ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210 Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f(res/drawable/gclue_logo.gif) myBitmap = BitmapFactory . decodeResource ( res , R . drawable . gclue_logo ); // \u30b5\u30a6\u30f3\u30c9\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\uff08/res/raw/pon.mp3\uff09 mMediaPlayer = MediaPlayer . create ( context , R . raw . taiko ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. canvas . drawBitmap ( myBitmap , x , y , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ @Override public boolean onTouchEvent ( MotionEvent event ) { // \u30bf\u30c3\u30c1\u3057\u305f\u6642\u306b\u5b9f\u884c if ( event . getAction () == MotionEvent . ACTION_DOWN ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); // \u97f3\u306e\u518d\u751f\u958b\u59cb\u4f4d\u7f6e\u30920\u30df\u30ea\u30bb\u30ab\u30f3\u30c9\u306e\u4f4d\u7f6e\u306b\u8a2d\u5b9a\u3059\u308b. mMediaPlayer . seekTo ( 0 ); // \u97f3\u306e\u518d\u751f\u3092\u958b\u59cb\u3059\u308b. mMediaPlayer . start (); } else if ( event . getAction () == MotionEvent . ACTION_MOVE ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); } return true ; } }","title":"\u97f3\u306e\u518d\u751f(\u77ed\u3044\u97f3)"},{"location":"01_app/chapter07/#_4","text":"koto.wav\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001Android Studio\u306eres/raw\u30d5\u30a9\u30eb\u30c0\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3002 koto.wav \u97f3\u304c\u9577\u3044\u5834\u5408\u306f\u3001\u97f3\u306e\u505c\u6b62\u306bMediaPlayer.stop()\u3092\u547c\u3073\u51fa\u3059\u3002\u305d\u306e\u969b\u306b\u3001MediaPlater.prepare()\u3092\u884c\u308f\u306a\u3044\u3068\u3001\u518d\u3073 MediaPlayer.play()\u304c\u3067\u304d\u306a\u304f\u306a\u308b\u3002 MyView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 package com.gclue.viewsample ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.media.MediaPlayer ; import android.view.MotionEvent ; import android.view.View ; import java.io.IOException ; /** * \u63cf\u753b\u7528\u306e\u30af\u30e9\u30b9. */ class MyView extends View { /** * \u753b\u50cf\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570. */ private Bitmap myBitmap ; /** * \u30bf\u30b0. */ private final static String TAG = \"DRAW\" ; /** * X. */ private int x ; /** * Y. */ private int y ; /** * \u30b5\u30a6\u30f3\u30c9\u518d\u751f\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b. */ private MediaPlayer mMediaPlayer ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public MyView ( Context context ) { super ( context ); setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210 Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f(res/drawable/gclue_logo.gif) myBitmap = BitmapFactory . decodeResource ( res , R . drawable . gclue_logo ); // \u30b5\u30a6\u30f3\u30c9\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\uff08/res/raw/pon.mp3\uff09 mMediaPlayer = MediaPlayer . create ( context , R . raw . koto ); } /** * \u63cf\u753b\u51e6\u7406\u3092\u884c\u3046. */ @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a. canvas . drawColor ( Color . BLUE ); // \u63cf\u753b\u3059\u308b\u305f\u3081\u306e\u7dda\u306e\u8272\u3092\u8a2d\u5b9a. Paint mPaint = new Paint (); mPaint . setStyle ( Paint . Style . FILL ); mPaint . setARGB ( 255 , 255 , 0 , 0 ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. canvas . drawBitmap ( myBitmap , x , y , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. */ @Override public boolean onTouchEvent ( MotionEvent event ) { // \u30bf\u30c3\u30c1\u3057\u305f\u6642\u306b\u5b9f\u884c if ( event . getAction () == MotionEvent . ACTION_DOWN ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); // \u97f3\u306e\u518d\u751f\u958b\u59cb\u4f4d\u7f6e\u30920\u30df\u30ea\u30bb\u30ab\u30f3\u30c9\u306e\u4f4d\u7f6e\u306b\u8a2d\u5b9a\u3059\u308b. mMediaPlayer . seekTo ( 0 ); // \u97f3\u306e\u518d\u751f\u3092\u958b\u59cb\u3059\u308b. mMediaPlayer . start (); } else if ( event . getAction () == MotionEvent . ACTION_MOVE ) { // X,Y\u5ea7\u6a19\u306e\u53d6\u5f97 x = ( int ) event . getX (); y = ( int ) event . getY (); // \u518d\u63cf\u753b\u306e\u6307\u793a invalidate (); } else if ( event . getAction () == MotionEvent . ACTION_UP ) { // ACTION_UP\u306f\u6307\u304c\u96e2\u308c\u305f\u6642. // \u97f3\u3092\u505c\u6b62\u3059\u308b. mMediaPlayer . stop (); // \u4e00\u5ea6\u518d\u751f\u3092stop()\u3057\u3066\u304b\u3089\u518d\u3073\u97f3\u3092\u518d\u751f\u3059\u308b\u5834\u5408\u306f\u3001prepare()\u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308b try { mMediaPlayer . prepare (); } catch ( IllegalStateException e ) { e . printStackTrace (); } catch ( IOException e ) { e . printStackTrace (); } } return true ; } }","title":"\u97f3\u306e\u518d\u751f(\u9577\u3044\u97f3)"},{"location":"01_app/chapter08/","text":"\u592a\u9f13\u30a2\u30d7\u30ea\u306e\u4f5c\u6210 \u958b\u767a\u3059\u308b\u30a2\u30d7\u30ea \u958b\u767a\u3067\u5fc5\u8981\u306a\u7d20\u6750 \u592a\u9f13\u306e\u753b\u50cf \u592a\u9f13\u306e\u97f3 taiko.wav \u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7acb\u3061\u4e0a\u3052 TaikoApp\u3068\u3044\u3046\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u306e\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3002 taiko.png\u3092res/drawable\u306b\u3001pon.wav\u3092res/raw\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3002 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package com.gclue.taicoapp ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends Activity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); // TaikoView\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316. TaikoView mTaikoView = new TaikoView ( this ); // TaikoView\u3092\u753b\u9762\u306b\u8a2d\u5b9a. setContentView ( mTaikoView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { /* Handle action bar item clicks here. The action bar will automatically handle clicks on the Home/Up button, so long as you specify a parent activity in AndroidManifest.xml. */ int id = item . getItemId (); if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } TaikoView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 package com.gclue.taicoapp ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u592a\u9f13\u306e\u753b\u50cf\u3092\u8868\u793a\u3059\u308bView. */ class TaikoView extends View { /** \u592a\u9f13\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b. */ private Bitmap mTaikoImage ; /** \u592a\u9f13\u753b\u50cf\u306e\u539f\u70b9\uff08\u5de6\u4e0a\uff09\u306ex\u5ea7\u6a19\u3092\u4fdd\u6301\u3059\u308b. */ private int mTaikoX = 100 ; /** \u592a\u9f13\u753b\u50cf\u306e\u539f\u70b9\uff08\u5de6\u4e0a\uff09\u306ey\u5ea7\u6a19\u3092\u4fdd\u6301\u3059\u308b. */ private int mTaikoY = 50 ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public TaikoView ( Context context ) { super ( context ); // \u30a4\u30d9\u30f3\u30c8\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306bFocus\u3092\u6709\u52b9\u306b\u3059\u308b. setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210. Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\uff08/res/drawable/taiko.png\uff09. mTaikoImage = BitmapFactory . decodeResource ( res , R . drawable . taiko ); } /** * \u63cf\u753b\u51e6\u7406. */ @Override protected void onDraw ( Canvas canvas ) { // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a\u3059\u308b. canvas . drawColor ( Color . BLACK ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. Paint mPaint = new Paint (); canvas . drawBitmap ( mTaikoImage , mTaikoX , mTaikoY , mPaint ); } } \u3042\u305f\u308a\u5224\u5b9a \u592a\u9f13\u306e\u4e2d\u5fc3\u70b9\u3092\u6c42\u3081\u308b\u6570\u5f0f 1 2 int mCenterX = mTaikoX + mTaikoImage.getWidth()/2; int mCenterY = mTaikoY + mTaikoImage.getHeight()/2; \u534a\u5f84R\u3092\u6c42\u3081\u308b\u6570\u5f0f 1 int mTaikoR = taikoImage.getWidth() / 2; \u592a\u9f13\u306e\u4e2d\u5fc3\u70b9\u3068\u30bf\u30c3\u30c1\u3057\u305f\u5ea7\u6a19\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u308b\u6570\u5f0f 1 double distance = Math.sqrt( Math.pow( (mCenterX - mTouchX), 2 ) + Math.pow( (mCenterY - mTouchY), 2 )); \u592a\u9f13\u306b\u624b\u304c\u3042\u305f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u6761\u4ef6 \u592a\u9f13\u306b\u624b\u304c\u3042\u305f\u3063\u3066\u3044\u308b\u5834\u5408\u306e\u6761\u4ef6 \u3042\u305f\u308a\u5224\u5b9a\u306e\u5b9f\u88c5 TaikoView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 package com.gclue.taicoapp ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.media.MediaPlayer ; import android.view.MotionEvent ; import android.view.View ; /** * \u592a\u9f13\u306e\u753b\u50cf\u3092\u8868\u793a\u3059\u308bView. */ class TaikoView extends View { /** \u592a\u9f13\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b. */ private Bitmap mTaikoImage ; /** \u592a\u9f13\u753b\u50cf\u306e\u539f\u70b9\uff08\u5de6\u4e0a\uff09\u306ex\u5ea7\u6a19\u3092\u4fdd\u6301\u3059\u308b. */ private int mTaikoX = 100 ; /** \u592a\u9f13\u753b\u50cf\u306e\u539f\u70b9\uff08\u5de6\u4e0a\uff09\u306ey\u5ea7\u6a19\u3092\u4fdd\u6301\u3059\u308b. */ private int mTaikoY = 50 ; /** \u30b5\u30a6\u30f3\u30c9\u518d\u751f\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b. */ private MediaPlayer mMediaPlayer ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public TaikoView ( Context context ) { super ( context ); // \u30a4\u30d9\u30f3\u30c8\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306bFocus\u3092\u6709\u52b9\u306b\u3059\u308b. setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210. Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\uff08/res/drawable-hdpi/taiko.png\uff09. mTaikoImage = BitmapFactory . decodeResource ( res , R . drawable . taiko ); // \u30b5\u30a6\u30f3\u30c9\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080(/res/raw/pon.mp3) mMediaPlayer = MediaPlayer . create ( context , R . raw . taiko ); } /** * \u63cf\u753b\u51e6\u7406. */ @Override protected void onDraw ( Canvas canvas ) { // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a\u3059\u308b. canvas . drawColor ( Color . BLACK ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. Paint mPaint = new Paint (); canvas . drawBitmap ( mTaikoImage , mTaikoX , mTaikoY , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. * * @param event \u30e2\u30fc\u30b7\u30e7\u30f3\u30a4\u30d9\u30f3\u30c8 */ @Override public boolean onTouchEvent ( MotionEvent event ) { // \u6307\u304c\u62bc\u3055\u308c\u305f\u5834\u5408\u306e\u51e6\u7406. if ( event . getAction () == MotionEvent . ACTION_DOWN ) { // \u6307\u304c\u30bf\u30c3\u30c1\u3055\u308c\u305fx,y\u5ea7\u6a19\u306e\u53d6\u5f97. int mTouchX = ( int ) event . getX (); int mTouchY = ( int ) event . getY (); // \u592a\u9f13\u306e\u4e2d\u5fc3\u5ea7\u6a19\u3092\u8a08\u7b97 int mCenterX = mTaikoX + mTaikoImage . getWidth () / 2 ; int mCenterY = mTaikoY + mTaikoImage . getHeight () / 2 ; // \u592a\u9f13\u306e\u4e2d\u5fc3\u5ea7\u6a19\u3068\u6307\u306e\u8ddd\u96e2\u3092\u8a08\u7b97 double mDistance = Math . sqrt ( Math . pow ( ( mCenterX - mTouchX ), 2 ) + Math . pow ( ( mCenterY - mTouchY ), 2 )); // \u592a\u9f13\u753b\u50cf\u306e\u534a\u5f84 int mTaikoR = mTaikoImage . getWidth () / 2 ; // \u3042\u305f\u308a\u5224\u5b9a if ( mDistance < mTaikoR ) { // \u30b5\u30a6\u30f3\u30c9\u518d\u751f mMediaPlayer . start (); } } return true ; } }","title":"\u592a\u9f13\u30a2\u30d7\u30ea\u306e\u4f5c\u6210"},{"location":"01_app/chapter08/#_1","text":"","title":"\u592a\u9f13\u30a2\u30d7\u30ea\u306e\u4f5c\u6210"},{"location":"01_app/chapter08/#_2","text":"","title":"\u958b\u767a\u3059\u308b\u30a2\u30d7\u30ea"},{"location":"01_app/chapter08/#_3","text":"\u592a\u9f13\u306e\u753b\u50cf \u592a\u9f13\u306e\u97f3 taiko.wav","title":"\u958b\u767a\u3067\u5fc5\u8981\u306a\u7d20\u6750"},{"location":"01_app/chapter08/#_4","text":"TaikoApp\u3068\u3044\u3046\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u306e\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3002 taiko.png\u3092res/drawable\u306b\u3001pon.wav\u3092res/raw\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3002 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package com.gclue.taicoapp ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; public class MainActivity extends Activity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); // TaikoView\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316. TaikoView mTaikoView = new TaikoView ( this ); // TaikoView\u3092\u753b\u9762\u306b\u8a2d\u5b9a. setContentView ( mTaikoView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { /* Handle action bar item clicks here. The action bar will automatically handle clicks on the Home/Up button, so long as you specify a parent activity in AndroidManifest.xml. */ int id = item . getItemId (); if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } TaikoView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 package com.gclue.taicoapp ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.view.View ; /** * \u592a\u9f13\u306e\u753b\u50cf\u3092\u8868\u793a\u3059\u308bView. */ class TaikoView extends View { /** \u592a\u9f13\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b. */ private Bitmap mTaikoImage ; /** \u592a\u9f13\u753b\u50cf\u306e\u539f\u70b9\uff08\u5de6\u4e0a\uff09\u306ex\u5ea7\u6a19\u3092\u4fdd\u6301\u3059\u308b. */ private int mTaikoX = 100 ; /** \u592a\u9f13\u753b\u50cf\u306e\u539f\u70b9\uff08\u5de6\u4e0a\uff09\u306ey\u5ea7\u6a19\u3092\u4fdd\u6301\u3059\u308b. */ private int mTaikoY = 50 ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public TaikoView ( Context context ) { super ( context ); // \u30a4\u30d9\u30f3\u30c8\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306bFocus\u3092\u6709\u52b9\u306b\u3059\u308b. setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210. Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\uff08/res/drawable/taiko.png\uff09. mTaikoImage = BitmapFactory . decodeResource ( res , R . drawable . taiko ); } /** * \u63cf\u753b\u51e6\u7406. */ @Override protected void onDraw ( Canvas canvas ) { // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a\u3059\u308b. canvas . drawColor ( Color . BLACK ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. Paint mPaint = new Paint (); canvas . drawBitmap ( mTaikoImage , mTaikoX , mTaikoY , mPaint ); } }","title":"\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7acb\u3061\u4e0a\u3052"},{"location":"01_app/chapter08/#_5","text":"\u592a\u9f13\u306e\u4e2d\u5fc3\u70b9\u3092\u6c42\u3081\u308b\u6570\u5f0f 1 2 int mCenterX = mTaikoX + mTaikoImage.getWidth()/2; int mCenterY = mTaikoY + mTaikoImage.getHeight()/2; \u534a\u5f84R\u3092\u6c42\u3081\u308b\u6570\u5f0f 1 int mTaikoR = taikoImage.getWidth() / 2; \u592a\u9f13\u306e\u4e2d\u5fc3\u70b9\u3068\u30bf\u30c3\u30c1\u3057\u305f\u5ea7\u6a19\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u308b\u6570\u5f0f 1 double distance = Math.sqrt( Math.pow( (mCenterX - mTouchX), 2 ) + Math.pow( (mCenterY - mTouchY), 2 )); \u592a\u9f13\u306b\u624b\u304c\u3042\u305f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u6761\u4ef6 \u592a\u9f13\u306b\u624b\u304c\u3042\u305f\u3063\u3066\u3044\u308b\u5834\u5408\u306e\u6761\u4ef6","title":"\u3042\u305f\u308a\u5224\u5b9a"},{"location":"01_app/chapter08/#_6","text":"TaikoView.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 package com.gclue.taicoapp ; import android.content.Context ; import android.content.res.Resources ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.graphics.Canvas ; import android.graphics.Color ; import android.graphics.Paint ; import android.media.MediaPlayer ; import android.view.MotionEvent ; import android.view.View ; /** * \u592a\u9f13\u306e\u753b\u50cf\u3092\u8868\u793a\u3059\u308bView. */ class TaikoView extends View { /** \u592a\u9f13\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b. */ private Bitmap mTaikoImage ; /** \u592a\u9f13\u753b\u50cf\u306e\u539f\u70b9\uff08\u5de6\u4e0a\uff09\u306ex\u5ea7\u6a19\u3092\u4fdd\u6301\u3059\u308b. */ private int mTaikoX = 100 ; /** \u592a\u9f13\u753b\u50cf\u306e\u539f\u70b9\uff08\u5de6\u4e0a\uff09\u306ey\u5ea7\u6a19\u3092\u4fdd\u6301\u3059\u308b. */ private int mTaikoY = 50 ; /** \u30b5\u30a6\u30f3\u30c9\u518d\u751f\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b. */ private MediaPlayer mMediaPlayer ; /** * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf. * @param context \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 */ public TaikoView ( Context context ) { super ( context ); // \u30a4\u30d9\u30f3\u30c8\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306bFocus\u3092\u6709\u52b9\u306b\u3059\u308b. setFocusable ( true ); // Resource\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210. Resources res = this . getContext (). getResources (); // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\uff08/res/drawable-hdpi/taiko.png\uff09. mTaikoImage = BitmapFactory . decodeResource ( res , R . drawable . taiko ); // \u30b5\u30a6\u30f3\u30c9\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080(/res/raw/pon.mp3) mMediaPlayer = MediaPlayer . create ( context , R . raw . taiko ); } /** * \u63cf\u753b\u51e6\u7406. */ @Override protected void onDraw ( Canvas canvas ) { // \u80cc\u666f\u8272\u3092\u8a2d\u5b9a\u3059\u308b. canvas . drawColor ( Color . BLACK ); // Bitmap\u30a4\u30e1\u30fc\u30b8\u306e\u63cf\u753b. Paint mPaint = new Paint (); canvas . drawBitmap ( mTaikoImage , mTaikoX , mTaikoY , mPaint ); } /** * \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8. * * @param event \u30e2\u30fc\u30b7\u30e7\u30f3\u30a4\u30d9\u30f3\u30c8 */ @Override public boolean onTouchEvent ( MotionEvent event ) { // \u6307\u304c\u62bc\u3055\u308c\u305f\u5834\u5408\u306e\u51e6\u7406. if ( event . getAction () == MotionEvent . ACTION_DOWN ) { // \u6307\u304c\u30bf\u30c3\u30c1\u3055\u308c\u305fx,y\u5ea7\u6a19\u306e\u53d6\u5f97. int mTouchX = ( int ) event . getX (); int mTouchY = ( int ) event . getY (); // \u592a\u9f13\u306e\u4e2d\u5fc3\u5ea7\u6a19\u3092\u8a08\u7b97 int mCenterX = mTaikoX + mTaikoImage . getWidth () / 2 ; int mCenterY = mTaikoY + mTaikoImage . getHeight () / 2 ; // \u592a\u9f13\u306e\u4e2d\u5fc3\u5ea7\u6a19\u3068\u6307\u306e\u8ddd\u96e2\u3092\u8a08\u7b97 double mDistance = Math . sqrt ( Math . pow ( ( mCenterX - mTouchX ), 2 ) + Math . pow ( ( mCenterY - mTouchY ), 2 )); // \u592a\u9f13\u753b\u50cf\u306e\u534a\u5f84 int mTaikoR = mTaikoImage . getWidth () / 2 ; // \u3042\u305f\u308a\u5224\u5b9a if ( mDistance < mTaikoR ) { // \u30b5\u30a6\u30f3\u30c9\u518d\u751f mMediaPlayer . start (); } } return true ; } }","title":"\u3042\u305f\u308a\u5224\u5b9a\u306e\u5b9f\u88c5"},{"location":"01_app/chapter09/","text":"\u30d4\u30a2\u30ce\u30a2\u30d7\u30ea\u306e\u4f5c\u62101 \u97f3\u30c7\u30fc\u30bf Piano\u306e\u97f3 piano.zip \u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210 MyPiano\u3068\u3044\u3046\u540d\u524d\u3067\u3001\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002 \u30dc\u30bf\u30f3\u30a4\u30d9\u30f3\u30c8\u306e\u5b9f\u88c5 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 package com.gclue.mypiano ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import android.widget.Toast ; public class MainActivity extends Activity implements View . OnClickListener { /** Button1\u306e\u5b9a\u7fa9. */ private Button mButton1 ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); // Button\u306e\u53d6\u308a\u8fbc\u307f mButton1 = ( Button ) findViewById ( R . id . button1 ); mButton1 . setOnClickListener ( this ); } @Override public void onClick ( View v ) { // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView\u304cmButton\u306e\u5834\u5408. if ( v . equals ( mButton01 ) ) { Toast . makeText ( this , \"Button\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_LONG ). show (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 < RelativeLayout xmlns : android = \"http://schemas.android.com/apk/res/android\" xmlns : tools = \"http://schemas.android.com/tools\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" android : paddingLeft = \"@dimen/activity_horizontal_margin\" android : paddingRight = \"@dimen/activity_horizontal_margin\" android : paddingTop = \"@dimen/activity_vertical_margin\" android : paddingBottom = \"@dimen/activity_vertical_margin\" tools : context = \".MainActivity\" > < Button android : id = \"@+id/button1\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentTop = \"true\" android : layout_marginLeft = \"0dp\" android : layout_marginTop = \"1dp\" android : text = \"\" /> </ RelativeLayout > \u30dc\u30bf\u30f3\u3092\u914d\u7f6e MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 package com.gclue.mypiano ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import android.widget.Toast ; public class MainActivity extends Activity implements View . OnClickListener { /** Button1\u306e\u5b9a\u7fa9. */ private Button mButton01 ; /** Button1\u306e\u5b9a\u7fa9\u3002 */ private Button mButton1 ; /** Button2\u306e\u5b9a\u7fa9\u3002 */ private Button mButton2 ; /** Button3\u306e\u5b9a\u7fa9\u3002 */ private Button mButton3 ; /** Button4\u306e\u5b9a\u7fa9\u3002 */ private Button mButton4 ; /** Button5\u306e\u5b9a\u7fa9\u3002 */ private Button mButton5 ; /** Button6\u306e\u5b9a\u7fa9\u3002 */ private Button mButton6 ; /** Button7\u306e\u5b9a\u7fa9\u3002 */ private Button mButton7 ; /** Button8\u306e\u5b9a\u7fa9\u3002 */ private Button mButton8 ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 mButton1 = ( Button ) findViewById ( R . id . button1 ); mButton2 = ( Button ) findViewById ( R . id . button2 ); mButton3 = ( Button ) findViewById ( R . id . button3 ); mButton4 = ( Button ) findViewById ( R . id . button4 ); mButton5 = ( Button ) findViewById ( R . id . button5 ); mButton6 = ( Button ) findViewById ( R . id . button6 ); mButton7 = ( Button ) findViewById ( R . id . button7 ); mButton8 = ( Button ) findViewById ( R . id . button8 ); mButton1 . setOnClickListener ( this ); mButton2 . setOnClickListener ( this ); mButton3 . setOnClickListener ( this ); mButton4 . setOnClickListener ( this ); mButton5 . setOnClickListener ( this ); mButton6 . setOnClickListener ( this ); mButton7 . setOnClickListener ( this ); mButton8 . setOnClickListener ( this ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b. */ @Override public void onClick ( View mView ) { // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView\u304cmButton\u306e\u5834\u5408. if ( mView . equals ( mButton1 ) ) { Toast . makeText ( this , \"Button1\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton2 ) ) { Toast . makeText ( this , \"Button2\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton3 ) ) { Toast . makeText ( this , \"Button3\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton4 ) ) { Toast . makeText ( this , \"Button4\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton5 ) ) { Toast . makeText ( this , \"Button5\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton6 ) ) { Toast . makeText ( this , \"Button6\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton7 ) ) { Toast . makeText ( this , \"Button7\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton8 ) ) { Toast . makeText ( this , \"Button8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 < RelativeLayout xmlns : android = \"http://schemas.android.com/apk/res/android\" xmlns : tools = \"http://schemas.android.com/tools\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" android : paddingLeft = \"@dimen/activity_horizontal_margin\" android : paddingRight = \"@dimen/activity_horizontal_margin\" android : paddingTop = \"@dimen/activity_vertical_margin\" android : paddingBottom = \"@dimen/activity_vertical_margin\" tools : context = \".MainActivity\" > < Button android : id = \"@+id/button1\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentTop = \"true\" android : layout_marginLeft = \"0dp\" android : layout_marginTop = \"1dp\" android : text = \"\" /> < Button android : id = \"@+id/button2\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button1\" android : layout_marginTop = \"1dp\" android : text = \"\" /> < Button android : id = \"@+id/button3\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button2\" android : text = \"\" /> < Button android : id = \"@+id/button4\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button3\" android : text = \"\" /> < Button android : id = \"@+id/button5\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button4\" android : text = \"\" /> < Button android : id = \"@+id/button6\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button5\" android : text = \"\" /> < Button android : id = \"@+id/button7\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button6\" android : text = \"\" /> < Button android : id = \"@+id/button8\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button7\" android : text = \"\" /> </ RelativeLayout > \u97f3\u306e\u7d44\u307f\u8fbc\u307f\u3068\u9375\u76e4\u306e\u914d\u8272 MainActivty.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 package com.gclue.mypiano ; import android.app.Activity ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.view.Window ; import android.widget.Button ; public class MainActivity extends Activity implements View . OnClickListener { /** Button1\u306e\u5b9a\u7fa9. */ private Button mButton01 ; /** Button1\u306e\u5b9a\u7fa9\u3002 */ private Button mButton1 ; /** Button2\u306e\u5b9a\u7fa9\u3002 */ private Button mButton2 ; /** Button3\u306e\u5b9a\u7fa9\u3002 */ private Button mButton3 ; /** Button4\u306e\u5b9a\u7fa9\u3002 */ private Button mButton4 ; /** Button5\u306e\u5b9a\u7fa9\u3002 */ private Button mButton5 ; /** Button6\u306e\u5b9a\u7fa9\u3002 */ private Button mButton6 ; /** Button7\u306e\u5b9a\u7fa9\u3002 */ private Button mButton7 ; /** Button8\u306e\u5b9a\u7fa9\u3002 */ private Button mButton8 ; /** \u30b5\u30a6\u30f3\u30c91\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound1 ; /** \u30b5\u30a6\u30f3\u30c92\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound2 ; /** \u30b5\u30a6\u30f3\u30c93\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound3 ; /** \u30b5\u30a6\u30f3\u30c94\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound4 ; /** \u30b5\u30a6\u30f3\u30c95\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound5 ; /** \u30b5\u30a6\u30f3\u30c96\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound6 ; /** \u30b5\u30a6\u30f3\u30c97\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound7 ; /** \u30b5\u30a6\u30f3\u30c98\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound8 ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 mButton1 = ( Button ) findViewById ( R . id . button1 ); mButton2 = ( Button ) findViewById ( R . id . button2 ); mButton3 = ( Button ) findViewById ( R . id . button3 ); mButton4 = ( Button ) findViewById ( R . id . button4 ); mButton5 = ( Button ) findViewById ( R . id . button5 ); mButton6 = ( Button ) findViewById ( R . id . button6 ); mButton7 = ( Button ) findViewById ( R . id . button7 ); mButton8 = ( Button ) findViewById ( R . id . button8 ); mButton1 . setOnClickListener ( this ); mButton2 . setOnClickListener ( this ); mButton3 . setOnClickListener ( this ); mButton4 . setOnClickListener ( this ); mButton5 . setOnClickListener ( this ); mButton6 . setOnClickListener ( this ); mButton7 . setOnClickListener ( this ); mButton8 . setOnClickListener ( this ); // \u30b5\u30a6\u30f3\u30c9\u3092\u8aad\u307f\u8fbc\u3080. sound1 = MediaPlayer . create ( this , R . raw . sound01 ); sound2 = MediaPlayer . create ( this , R . raw . sound02 ); sound3 = MediaPlayer . create ( this , R . raw . sound03 ); sound4 = MediaPlayer . create ( this , R . raw . sound04 ); sound5 = MediaPlayer . create ( this , R . raw . sound05 ); sound6 = MediaPlayer . create ( this , R . raw . sound06 ); sound7 = MediaPlayer . create ( this , R . raw . sound07 ); sound8 = MediaPlayer . create ( this , R . raw . sound08 ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b. */ @Override public void onClick ( View mView ) { // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView\u304cmButton\u306e\u5834\u5408 if ( mView . equals ( mButton1 ) ) { sound1 . seekTo ( 0 ); sound1 . start (); } else if ( mView . equals ( mButton2 ) ) { sound2 . seekTo ( 0 ); sound2 . start (); } else if ( mView . equals ( mButton3 ) ) { sound3 . seekTo ( 0 ); sound3 . start (); } else if ( mView . equals ( mButton4 ) ) { sound4 . seekTo ( 0 ); sound4 . start (); } else if ( mView . equals ( mButton5 ) ) { sound5 . seekTo ( 0 ); sound5 . start (); } else if ( mView . equals ( mButton6 ) ) { sound6 . seekTo ( 0 ); sound6 . start (); } else if ( mView . equals ( mButton7 ) ) { sound7 . seekTo ( 0 ); sound7 . start (); } else if ( mView . equals ( mButton8 ) ) { sound8 . seekTo ( 0 ); sound8 . start (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 < RelativeLayout xmlns : android = \"http://schemas.android.com/apk/res/android\" xmlns : tools = \"http://schemas.android.com/tools\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" android : background = \"#000000\" tools : context = \".PianoSample001\" > < Button android : id = \"@+id/button1\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentTop = \"true\" android : layout_marginLeft = \"0dp\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button2\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button1\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button3\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button2\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button4\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button3\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button5\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button4\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button6\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button5\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button7\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button6\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button8\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button7\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> </ RelativeLayout > res/drawable/kenban.xml 1 2 3 4 5 6 7 8 9 10 <? xml version = \"1.0\" encoding = \"utf-8\" ?> < selector xmlns : android = \"http://schemas.android.com/apk/res/android\" > < item android : state_pressed = \"false\" > < color android : color = \"#ffffffff\" /> </ item > < item android : state_pressed = \"true\" > < color android : color = \"#ff555555\" /> </ item > </ selector > \u914d\u5217\u3092\u4f7f\u3063\u3066\u308f\u304b\u308a\u3084\u3059\u304f\u3059\u308b MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 package com.gclue.mypiano ; import android.app.Activity ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.util.Log ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import java.util.ArrayList ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < Button > buttons = new ArrayList < Button > (); /** \u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < MediaPlayer > sounds = new ArrayList < MediaPlayer > (); /** \u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u306e\u6570\u3002 */ private int howManyButtons = 8 ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 addButtonAndSound ( howManyButtons ); } /** * \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002 * @param num \u30dc\u30bf\u30f3\u306e\u6570 */ private void addButtonAndSound ( int num ) { for ( int i = 0 ; i < num ; i ++ ) { String n = Integer . toString ( i + 1 ); // \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b int buttonId = getResources (). getIdentifier ( \"button\" + n , \"id\" , getPackageName () ); Button mButton = ( Button ) findViewById ( buttonId ); mButton . setOnClickListener ( this ); buttons . add ( mButton ); // \u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b // \u30b5\u30a6\u30f3\u30c9\u30d5\u30a1\u30a4\u30eb\u304csound01\u306e\u3088\u3046\u306b\u30010\u304c\u4ed8\u3044\u305f2\u6841\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6570\u5024\u306e\u982d\u306b0\u3092\u4ed8\u3051\u305f\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b if ( i < 10 ) { n = \"0\" + n ; } int soundId = getResources (). getIdentifier ( \"sound\" + n , \"raw\" , getPackageName () ); MediaPlayer sound = MediaPlayer . create ( this , soundId ); sounds . add ( sound ); } } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 */ @Override public void onClick ( View mView ) { // button\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3042\u308bButton\u3092\u4e00\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView(mView)\u3068Button\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001\u97f3\u3092\u518d\u751f\u3059\u308b\u3002 for ( int i = 0 ; i < howManyButtons ; i ++ ) { if ( mView . equals ( buttons . get ( i ) ) ) { Log . i ( \"PianoSample001\" , \"Button\" + Integer . toString ( i + 1 ) + \"\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" ); sounds . get ( i ). seekTo ( 0 ); sounds . get ( i ). start (); return ; } } } } \u81ea\u52d5\u6f14\u594f\u6a5f\u80fd MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 package com.gclue.mypiano ; import android.app.Activity ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.util.Log ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import java.util.ArrayList ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < Button > buttons = new ArrayList < Button > (); /** \u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < MediaPlayer > sounds = new ArrayList < MediaPlayer > (); /** /res/layout/pianosample001_layout.xml\u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u306e\u6570\u3002 */ private int howManyButtons = 8 ; /** Data. */ private int [] mMerody = { 0 , 1 , 2 , 1 , 2 , 3 , 1 , 2 , 3 , 1 , 2 , 3 }; /** Button play. */ private Button mButtonPlay ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); // Play Button mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButtonPlay . setOnClickListener ( this ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 addButtonAndSound ( howManyButtons ); } /** * \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002 * @param num \u30dc\u30bf\u30f3\u306e\u6570 */ private void addButtonAndSound ( int num ) { for ( int i = 0 ; i < num ; i ++ ) { String n = Integer . toString ( i + 1 ); // \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b int buttonId = getResources (). getIdentifier ( \"button\" + n , \"id\" , getPackageName () ); Button mButton = ( Button ) findViewById ( buttonId ); mButton . setOnClickListener ( this ); buttons . add ( mButton ); // \u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b // \u30b5\u30a6\u30f3\u30c9\u30d5\u30a1\u30a4\u30eb\u304csound01\u306e\u3088\u3046\u306b\u30010\u304c\u4ed8\u3044\u305f2\u6841\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6570\u5024\u306e\u982d\u306b0\u3092\u4ed8\u3051\u305f\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b if ( i < 10 ) { n = \"0\" + n ; } int soundId = getResources (). getIdentifier ( \"sound\" + n , \"raw\" , getPackageName () ); MediaPlayer sound = MediaPlayer . create ( this , soundId ); sounds . add ( sound ); } } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 */ @Override public void onClick ( View mView ) { if ( mView . equals ( mButtonPlay )) { for ( int i = 0 ; i < mMerody . length ; i ++ ) { int onkai = mMerody [ i ] ; sounds . get ( onkai ). seekTo ( 0 ); sounds . get ( onkai ). start (); try { Thread . sleep ( 500 ); } catch ( InterruptedException e ) { e . printStackTrace (); } } } else { // button\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3042\u308bButton\u3092\u4e00\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView(mView)\u3068Button\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001\u97f3\u3092\u518d\u751f\u3059\u308b\u3002 for ( int i = 0 ; i < howManyButtons ; i ++ ) { if ( mView . equals ( buttons . get ( i ))) { Log . i ( \"PIANO\" , \"Button\" + Integer . toString ( i + 1 ) + \"\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" ); sounds . get ( i ). seekTo ( 0 ); sounds . get ( i ). start (); return ; } } } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 < RelativeLayout xmlns : android = \"http://schemas.android.com/apk/res/android\" xmlns : tools = \"http://schemas.android.com/tools\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" android : background = \"#000000\" tools : context = \".PianoSample001\" > < Button android : id = \"@+id/button1\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentTop = \"true\" android : layout_marginLeft = \"0dp\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button2\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button1\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button3\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button2\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button4\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button3\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button5\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button4\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button6\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button5\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button7\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button6\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button8\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button7\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/buttonPlay\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button8\" android : layout_marginTop = \"10dp\" android : text = \"play\" /> </ RelativeLayout > JSON\u914d\u5217\u306b\u3088\u308b\u6f14\u594f JSON Format 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 {\"title\" : \"MySound\", \"data\" : [ {\"merody\" : 0, \"time\" : 500}, {\"merody\" : 1, \"time\" : 500}, {\"merody\" : 2, \"time\" : 500}, {\"merody\" : 1, \"time\" : 500}, {\"merody\" : 2, \"time\" : 300}, {\"merody\" : 3, \"time\" : 100}, {\"merody\" : 1, \"time\" : 500}, {\"merody\" : 2, \"time\" : 300}, {\"merody\" : 3, \"time\" : 100}, {\"merody\" : 1, \"time\" : 500}, {\"merody\" : 2, \"time\" : 300}, {\"merody\" : 3, \"time\" : 100}, ]} \u57fa\u672c\u69cb\u6587 1 2 3 4 5 6 7 8 { \"\u9805\u76ee\u540d\" : \"\u9805\u76ee\" } { \"\u9805\u76ee\u540d1\" : \"\u9805\u76ee1\" , \"\u9805\u76ee\u540d2\" : \"\u9805\u76ee2\" } { \"\u9805\u76ee\u540d1\" : \"\u9805\u76ee1\" , \"\u9805\u76ee\u540d2\" :[ { \"\u9805\u76ee\u540d\" : \"\u9805\u76ee2-1\" } , { \"\u9805\u76ee\u540d\" : \"\u9805\u76ee2-2\" } ] } for example 1 2 3 4 5 6 7 8 { \"title\" : \"myJsonData\" } { \"title\" : \"myJsonData\" , \"update\" : \"2015-03-31\" } { \"title\" : \"myJsonData\" , \"data\" : [ { \"value\" : \"data of value1\" } , { \"value\" : \"data of value2\" } ] } \u6570\u5024\u3068\u6587\u5b57\u5217 1 2 {\"\u9805\u76ee\u540d\":\"\u6587\u5b57\u5217\"} {\"\u9805\u76ee\u540d\":\u6570\u5024} for example 1 2 3 4 5 { \"title\" : \"myJsonData\" , \"data\" : \"\u6587\u5b57\u5217\" } { \"title\" : \"myJsonData\" , \"data\" : 111 } JSON Object\u306e\u6271\u3044 1 2 3 4 5 6 String jsonData = \"{\\\" title \\ \":\\\" myJsonData \\ \", \\\" data \\ \":\\\" \u6587\u5b57\u5217\\ \"}\" ; JSON Object mJson = new JSONObject ( jsonData ); String mTitle = mJson . get ( \"title\" ); String mData = \"mJson.get(\" data \" ); JSON Object\u306e\u914d\u5217\u306e\u6271\u3044 1 2 3 4 5 6 7 8 9 10 11 12 13 String jsonData = \"\\\"title\\\":\\\"myJsonData\\\", \\\"data\\\" : [ { \\ \"value \\\" : \\\" data of value1 \\\" },{ \\\" value \\\" : \\\" data of value2 \\\" }]}\" ; JSON Object mJson = new JSONObject ( jsonData ); String mTitle = mJson.get ( \"title\" ); JSONArray datas = mJson.getJSONArray ( \"data\" ); for ( int i = 0 ; i < datas.length (); i ++ ) { String mValue = datas.getJSONObject ( i ) . getString ( \"value\" ); Log . i ( TAG , \"value:\" + mValue ); } } MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 package com.gclue.mypiano ; import android.app.Activity ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.util.Log ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import org.json.JSONArray ; import org.json.JSONException ; import org.json.JSONObject ; import java.util.ArrayList ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < Button > buttons = new ArrayList < Button > (); /** \u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < MediaPlayer > sounds = new ArrayList < MediaPlayer > (); /** /res/layout/pianosample001_layout.xml\u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u306e\u6570\u3002 */ private int howManyButtons = 8 ; /** Data. */ private String mMerodyData = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 0,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; /** Button play. */ private Button mButtonPlay ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButtonPlay . setOnClickListener ( this ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 addButtonAndSound ( howManyButtons ); } /** * \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002 * @param num \u30dc\u30bf\u30f3\u306e\u6570 */ private void addButtonAndSound ( int num ) { for ( int i = 0 ; i < num ; i ++ ) { String n = Integer . toString ( i + 1 ); // \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b int buttonId = getResources (). getIdentifier ( \"button\" + n , \"id\" , getPackageName () ); Button mButton = ( Button ) findViewById ( buttonId ); mButton . setOnClickListener ( this ); buttons . add ( mButton ); // \u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b // \u30b5\u30a6\u30f3\u30c9\u30d5\u30a1\u30a4\u30eb\u304csound01\u306e\u3088\u3046\u306b\u30010\u304c\u4ed8\u3044\u305f2\u6841\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6570\u5024\u306e\u982d\u306b0\u3092\u4ed8\u3051\u305f\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b if ( i < 10 ) { n = \"0\" + n ; } int soundId = getResources (). getIdentifier ( \"sound\" + n , \"raw\" , getPackageName () ); MediaPlayer sound = MediaPlayer . create ( this , soundId ); sounds . add ( sound ); } } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 */ @Override public void onClick ( View mView ) { if ( mView . equals ( mButtonPlay )) { JSONObject mMerodyJson = null ; try { mMerodyJson = new JSONObject ( mMerodyData ); Log . i ( \"PIANO\" , \"title:\" + mMerodyJson . get ( \"title\" )); JSONArray datas = mMerodyJson . getJSONArray ( \"data\" ); for ( int i = 0 ; i < datas . length (); i ++ ) { int onkai = datas . getJSONObject ( i ). getInt ( \"merody\" ); sounds . get ( onkai ). seekTo ( 0 ); sounds . get ( onkai ). start (); int sleepTime = datas . getJSONObject ( i ). getInt ( \"time\" ); try { Thread . sleep ( sleepTime ); } catch ( InterruptedException e ) { e . printStackTrace (); } } } catch ( JSONException e ) { e . printStackTrace (); } } else { // button\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3042\u308bButton\u3092\u4e00\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView(mView)\u3068Button\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001\u97f3\u3092\u518d\u751f\u3059\u308b\u3002 for ( int i = 0 ; i < howManyButtons ; i ++ ) { if ( mView . equals ( buttons . get ( i ))) { Log . i ( \"PIANO\" , \"Button\" + Integer . toString ( i + 1 ) + \"\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" ); sounds . get ( i ). seekTo ( 0 ); sounds . get ( i ). start (); return ; } } } } } \u30dc\u30bf\u30f3\u62bc\u4e0b\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 package com.gclue.mypiano ; import android.app.Activity ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.util.Log ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import org.json.JSONArray ; import org.json.JSONException ; import org.json.JSONObject ; import java.util.ArrayList ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < Button > buttons = new ArrayList < Button > (); /** \u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < MediaPlayer > sounds = new ArrayList < MediaPlayer > (); /** /res/layout/pianosample001_layout.xml\u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u306e\u6570\u3002 */ private int howManyButtons = 8 ; /** Data. */ private String mMerodyData = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 0,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; /** Button play. */ private Button mButtonPlay ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButtonPlay . setOnClickListener ( this ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 addButtonAndSound ( howManyButtons ); } /** * \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002 * @param num \u30dc\u30bf\u30f3\u306e\u6570 */ private void addButtonAndSound ( int num ) { for ( int i = 0 ; i < num ; i ++ ) { String n = Integer . toString ( i + 1 ); // \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b int buttonId = getResources (). getIdentifier ( \"button\" + n , \"id\" , getPackageName () ); Button mButton = ( Button ) findViewById ( buttonId ); mButton . setOnClickListener ( this ); buttons . add ( mButton ); // \u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b // \u30b5\u30a6\u30f3\u30c9\u30d5\u30a1\u30a4\u30eb\u304csound01\u306e\u3088\u3046\u306b\u30010\u304c\u4ed8\u3044\u305f2\u6841\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6570\u5024\u306e\u982d\u306b0\u3092\u4ed8\u3051\u305f\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b if ( i < 10 ) { n = \"0\" + n ; } int soundId = getResources (). getIdentifier ( \"sound\" + n , \"raw\" , getPackageName () ); MediaPlayer sound = MediaPlayer . create ( this , soundId ); sounds . add ( sound ); } } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 */ @Override public void onClick ( View mView ) { if ( mView . equals ( mButtonPlay )) { JSONObject mMerodyJson = null ; try { mMerodyJson = new JSONObject ( mMerodyData ); Log . i ( \"PIANO\" , \"title:\" + mMerodyJson . get ( \"title\" )); JSONArray datas = mMerodyJson . getJSONArray ( \"data\" ); for ( int i = 0 ; i < datas . length (); i ++ ) { int onkai = datas . getJSONObject ( i ). getInt ( \"merody\" ); buttons . get ( onkai ). performClick (); int sleepTime = datas . getJSONObject ( i ). getInt ( \"time\" ); try { Thread . sleep ( sleepTime ); } catch ( InterruptedException e ) { e . printStackTrace (); } } } catch ( JSONException e ) { e . printStackTrace (); } } else { // button\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3042\u308bButton\u3092\u4e00\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView(mView)\u3068Button\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001\u97f3\u3092\u518d\u751f\u3059\u308b\u3002 for ( int i = 0 ; i < howManyButtons ; i ++ ) { if ( mView . equals ( buttons . get ( i ))) { Log . i ( \"PIANO\" , \"Button\" + Integer . toString ( i + 1 ) + \"\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" ); sounds . get ( i ). seekTo ( 0 ); sounds . get ( i ). start (); return ; } } } } }","title":"\u30d4\u30a2\u30ce\u30a2\u30d7\u30ea\u306e\u4f5c\u62101"},{"location":"01_app/chapter09/#1","text":"","title":"\u30d4\u30a2\u30ce\u30a2\u30d7\u30ea\u306e\u4f5c\u62101"},{"location":"01_app/chapter09/#_1","text":"Piano\u306e\u97f3 piano.zip","title":"\u97f3\u30c7\u30fc\u30bf"},{"location":"01_app/chapter09/#_2","text":"MyPiano\u3068\u3044\u3046\u540d\u524d\u3067\u3001\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002","title":"\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210"},{"location":"01_app/chapter09/#_3","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 package com.gclue.mypiano ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import android.widget.Toast ; public class MainActivity extends Activity implements View . OnClickListener { /** Button1\u306e\u5b9a\u7fa9. */ private Button mButton1 ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); // Button\u306e\u53d6\u308a\u8fbc\u307f mButton1 = ( Button ) findViewById ( R . id . button1 ); mButton1 . setOnClickListener ( this ); } @Override public void onClick ( View v ) { // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView\u304cmButton\u306e\u5834\u5408. if ( v . equals ( mButton01 ) ) { Toast . makeText ( this , \"Button\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_LONG ). show (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 < RelativeLayout xmlns : android = \"http://schemas.android.com/apk/res/android\" xmlns : tools = \"http://schemas.android.com/tools\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" android : paddingLeft = \"@dimen/activity_horizontal_margin\" android : paddingRight = \"@dimen/activity_horizontal_margin\" android : paddingTop = \"@dimen/activity_vertical_margin\" android : paddingBottom = \"@dimen/activity_vertical_margin\" tools : context = \".MainActivity\" > < Button android : id = \"@+id/button1\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentTop = \"true\" android : layout_marginLeft = \"0dp\" android : layout_marginTop = \"1dp\" android : text = \"\" /> </ RelativeLayout >","title":"\u30dc\u30bf\u30f3\u30a4\u30d9\u30f3\u30c8\u306e\u5b9f\u88c5"},{"location":"01_app/chapter09/#_4","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 package com.gclue.mypiano ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import android.widget.Toast ; public class MainActivity extends Activity implements View . OnClickListener { /** Button1\u306e\u5b9a\u7fa9. */ private Button mButton01 ; /** Button1\u306e\u5b9a\u7fa9\u3002 */ private Button mButton1 ; /** Button2\u306e\u5b9a\u7fa9\u3002 */ private Button mButton2 ; /** Button3\u306e\u5b9a\u7fa9\u3002 */ private Button mButton3 ; /** Button4\u306e\u5b9a\u7fa9\u3002 */ private Button mButton4 ; /** Button5\u306e\u5b9a\u7fa9\u3002 */ private Button mButton5 ; /** Button6\u306e\u5b9a\u7fa9\u3002 */ private Button mButton6 ; /** Button7\u306e\u5b9a\u7fa9\u3002 */ private Button mButton7 ; /** Button8\u306e\u5b9a\u7fa9\u3002 */ private Button mButton8 ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 mButton1 = ( Button ) findViewById ( R . id . button1 ); mButton2 = ( Button ) findViewById ( R . id . button2 ); mButton3 = ( Button ) findViewById ( R . id . button3 ); mButton4 = ( Button ) findViewById ( R . id . button4 ); mButton5 = ( Button ) findViewById ( R . id . button5 ); mButton6 = ( Button ) findViewById ( R . id . button6 ); mButton7 = ( Button ) findViewById ( R . id . button7 ); mButton8 = ( Button ) findViewById ( R . id . button8 ); mButton1 . setOnClickListener ( this ); mButton2 . setOnClickListener ( this ); mButton3 . setOnClickListener ( this ); mButton4 . setOnClickListener ( this ); mButton5 . setOnClickListener ( this ); mButton6 . setOnClickListener ( this ); mButton7 . setOnClickListener ( this ); mButton8 . setOnClickListener ( this ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b. */ @Override public void onClick ( View mView ) { // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView\u304cmButton\u306e\u5834\u5408. if ( mView . equals ( mButton1 ) ) { Toast . makeText ( this , \"Button1\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton2 ) ) { Toast . makeText ( this , \"Button2\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton3 ) ) { Toast . makeText ( this , \"Button3\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton4 ) ) { Toast . makeText ( this , \"Button4\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton5 ) ) { Toast . makeText ( this , \"Button5\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton6 ) ) { Toast . makeText ( this , \"Button6\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton7 ) ) { Toast . makeText ( this , \"Button7\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } else if ( mView . equals ( mButton8 ) ) { Toast . makeText ( this , \"Button8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" , Toast . LENGTH_SHORT ). show (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 < RelativeLayout xmlns : android = \"http://schemas.android.com/apk/res/android\" xmlns : tools = \"http://schemas.android.com/tools\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" android : paddingLeft = \"@dimen/activity_horizontal_margin\" android : paddingRight = \"@dimen/activity_horizontal_margin\" android : paddingTop = \"@dimen/activity_vertical_margin\" android : paddingBottom = \"@dimen/activity_vertical_margin\" tools : context = \".MainActivity\" > < Button android : id = \"@+id/button1\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentTop = \"true\" android : layout_marginLeft = \"0dp\" android : layout_marginTop = \"1dp\" android : text = \"\" /> < Button android : id = \"@+id/button2\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button1\" android : layout_marginTop = \"1dp\" android : text = \"\" /> < Button android : id = \"@+id/button3\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button2\" android : text = \"\" /> < Button android : id = \"@+id/button4\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button3\" android : text = \"\" /> < Button android : id = \"@+id/button5\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button4\" android : text = \"\" /> < Button android : id = \"@+id/button6\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button5\" android : text = \"\" /> < Button android : id = \"@+id/button7\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button6\" android : text = \"\" /> < Button android : id = \"@+id/button8\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button7\" android : text = \"\" /> </ RelativeLayout >","title":"\u30dc\u30bf\u30f3\u3092\u914d\u7f6e"},{"location":"01_app/chapter09/#_5","text":"MainActivty.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 package com.gclue.mypiano ; import android.app.Activity ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.view.Window ; import android.widget.Button ; public class MainActivity extends Activity implements View . OnClickListener { /** Button1\u306e\u5b9a\u7fa9. */ private Button mButton01 ; /** Button1\u306e\u5b9a\u7fa9\u3002 */ private Button mButton1 ; /** Button2\u306e\u5b9a\u7fa9\u3002 */ private Button mButton2 ; /** Button3\u306e\u5b9a\u7fa9\u3002 */ private Button mButton3 ; /** Button4\u306e\u5b9a\u7fa9\u3002 */ private Button mButton4 ; /** Button5\u306e\u5b9a\u7fa9\u3002 */ private Button mButton5 ; /** Button6\u306e\u5b9a\u7fa9\u3002 */ private Button mButton6 ; /** Button7\u306e\u5b9a\u7fa9\u3002 */ private Button mButton7 ; /** Button8\u306e\u5b9a\u7fa9\u3002 */ private Button mButton8 ; /** \u30b5\u30a6\u30f3\u30c91\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound1 ; /** \u30b5\u30a6\u30f3\u30c92\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound2 ; /** \u30b5\u30a6\u30f3\u30c93\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound3 ; /** \u30b5\u30a6\u30f3\u30c94\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound4 ; /** \u30b5\u30a6\u30f3\u30c95\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound5 ; /** \u30b5\u30a6\u30f3\u30c96\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound6 ; /** \u30b5\u30a6\u30f3\u30c97\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound7 ; /** \u30b5\u30a6\u30f3\u30c98\u306e\u5b9a\u7fa9\u3002 */ private MediaPlayer sound8 ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 mButton1 = ( Button ) findViewById ( R . id . button1 ); mButton2 = ( Button ) findViewById ( R . id . button2 ); mButton3 = ( Button ) findViewById ( R . id . button3 ); mButton4 = ( Button ) findViewById ( R . id . button4 ); mButton5 = ( Button ) findViewById ( R . id . button5 ); mButton6 = ( Button ) findViewById ( R . id . button6 ); mButton7 = ( Button ) findViewById ( R . id . button7 ); mButton8 = ( Button ) findViewById ( R . id . button8 ); mButton1 . setOnClickListener ( this ); mButton2 . setOnClickListener ( this ); mButton3 . setOnClickListener ( this ); mButton4 . setOnClickListener ( this ); mButton5 . setOnClickListener ( this ); mButton6 . setOnClickListener ( this ); mButton7 . setOnClickListener ( this ); mButton8 . setOnClickListener ( this ); // \u30b5\u30a6\u30f3\u30c9\u3092\u8aad\u307f\u8fbc\u3080. sound1 = MediaPlayer . create ( this , R . raw . sound01 ); sound2 = MediaPlayer . create ( this , R . raw . sound02 ); sound3 = MediaPlayer . create ( this , R . raw . sound03 ); sound4 = MediaPlayer . create ( this , R . raw . sound04 ); sound5 = MediaPlayer . create ( this , R . raw . sound05 ); sound6 = MediaPlayer . create ( this , R . raw . sound06 ); sound7 = MediaPlayer . create ( this , R . raw . sound07 ); sound8 = MediaPlayer . create ( this , R . raw . sound08 ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b. */ @Override public void onClick ( View mView ) { // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView\u304cmButton\u306e\u5834\u5408 if ( mView . equals ( mButton1 ) ) { sound1 . seekTo ( 0 ); sound1 . start (); } else if ( mView . equals ( mButton2 ) ) { sound2 . seekTo ( 0 ); sound2 . start (); } else if ( mView . equals ( mButton3 ) ) { sound3 . seekTo ( 0 ); sound3 . start (); } else if ( mView . equals ( mButton4 ) ) { sound4 . seekTo ( 0 ); sound4 . start (); } else if ( mView . equals ( mButton5 ) ) { sound5 . seekTo ( 0 ); sound5 . start (); } else if ( mView . equals ( mButton6 ) ) { sound6 . seekTo ( 0 ); sound6 . start (); } else if ( mView . equals ( mButton7 ) ) { sound7 . seekTo ( 0 ); sound7 . start (); } else if ( mView . equals ( mButton8 ) ) { sound8 . seekTo ( 0 ); sound8 . start (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 < RelativeLayout xmlns : android = \"http://schemas.android.com/apk/res/android\" xmlns : tools = \"http://schemas.android.com/tools\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" android : background = \"#000000\" tools : context = \".PianoSample001\" > < Button android : id = \"@+id/button1\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentTop = \"true\" android : layout_marginLeft = \"0dp\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button2\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button1\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button3\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button2\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button4\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button3\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button5\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button4\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button6\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button5\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button7\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button6\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button8\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button7\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> </ RelativeLayout > res/drawable/kenban.xml 1 2 3 4 5 6 7 8 9 10 <? xml version = \"1.0\" encoding = \"utf-8\" ?> < selector xmlns : android = \"http://schemas.android.com/apk/res/android\" > < item android : state_pressed = \"false\" > < color android : color = \"#ffffffff\" /> </ item > < item android : state_pressed = \"true\" > < color android : color = \"#ff555555\" /> </ item > </ selector >","title":"\u97f3\u306e\u7d44\u307f\u8fbc\u307f\u3068\u9375\u76e4\u306e\u914d\u8272"},{"location":"01_app/chapter09/#_6","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 package com.gclue.mypiano ; import android.app.Activity ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.util.Log ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import java.util.ArrayList ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < Button > buttons = new ArrayList < Button > (); /** \u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < MediaPlayer > sounds = new ArrayList < MediaPlayer > (); /** \u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u306e\u6570\u3002 */ private int howManyButtons = 8 ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 addButtonAndSound ( howManyButtons ); } /** * \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002 * @param num \u30dc\u30bf\u30f3\u306e\u6570 */ private void addButtonAndSound ( int num ) { for ( int i = 0 ; i < num ; i ++ ) { String n = Integer . toString ( i + 1 ); // \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b int buttonId = getResources (). getIdentifier ( \"button\" + n , \"id\" , getPackageName () ); Button mButton = ( Button ) findViewById ( buttonId ); mButton . setOnClickListener ( this ); buttons . add ( mButton ); // \u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b // \u30b5\u30a6\u30f3\u30c9\u30d5\u30a1\u30a4\u30eb\u304csound01\u306e\u3088\u3046\u306b\u30010\u304c\u4ed8\u3044\u305f2\u6841\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6570\u5024\u306e\u982d\u306b0\u3092\u4ed8\u3051\u305f\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b if ( i < 10 ) { n = \"0\" + n ; } int soundId = getResources (). getIdentifier ( \"sound\" + n , \"raw\" , getPackageName () ); MediaPlayer sound = MediaPlayer . create ( this , soundId ); sounds . add ( sound ); } } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 */ @Override public void onClick ( View mView ) { // button\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3042\u308bButton\u3092\u4e00\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView(mView)\u3068Button\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001\u97f3\u3092\u518d\u751f\u3059\u308b\u3002 for ( int i = 0 ; i < howManyButtons ; i ++ ) { if ( mView . equals ( buttons . get ( i ) ) ) { Log . i ( \"PianoSample001\" , \"Button\" + Integer . toString ( i + 1 ) + \"\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" ); sounds . get ( i ). seekTo ( 0 ); sounds . get ( i ). start (); return ; } } } }","title":"\u914d\u5217\u3092\u4f7f\u3063\u3066\u308f\u304b\u308a\u3084\u3059\u304f\u3059\u308b"},{"location":"01_app/chapter09/#_7","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 package com.gclue.mypiano ; import android.app.Activity ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.util.Log ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import java.util.ArrayList ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < Button > buttons = new ArrayList < Button > (); /** \u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < MediaPlayer > sounds = new ArrayList < MediaPlayer > (); /** /res/layout/pianosample001_layout.xml\u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u306e\u6570\u3002 */ private int howManyButtons = 8 ; /** Data. */ private int [] mMerody = { 0 , 1 , 2 , 1 , 2 , 3 , 1 , 2 , 3 , 1 , 2 , 3 }; /** Button play. */ private Button mButtonPlay ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); // Play Button mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButtonPlay . setOnClickListener ( this ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 addButtonAndSound ( howManyButtons ); } /** * \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002 * @param num \u30dc\u30bf\u30f3\u306e\u6570 */ private void addButtonAndSound ( int num ) { for ( int i = 0 ; i < num ; i ++ ) { String n = Integer . toString ( i + 1 ); // \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b int buttonId = getResources (). getIdentifier ( \"button\" + n , \"id\" , getPackageName () ); Button mButton = ( Button ) findViewById ( buttonId ); mButton . setOnClickListener ( this ); buttons . add ( mButton ); // \u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b // \u30b5\u30a6\u30f3\u30c9\u30d5\u30a1\u30a4\u30eb\u304csound01\u306e\u3088\u3046\u306b\u30010\u304c\u4ed8\u3044\u305f2\u6841\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6570\u5024\u306e\u982d\u306b0\u3092\u4ed8\u3051\u305f\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b if ( i < 10 ) { n = \"0\" + n ; } int soundId = getResources (). getIdentifier ( \"sound\" + n , \"raw\" , getPackageName () ); MediaPlayer sound = MediaPlayer . create ( this , soundId ); sounds . add ( sound ); } } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 */ @Override public void onClick ( View mView ) { if ( mView . equals ( mButtonPlay )) { for ( int i = 0 ; i < mMerody . length ; i ++ ) { int onkai = mMerody [ i ] ; sounds . get ( onkai ). seekTo ( 0 ); sounds . get ( onkai ). start (); try { Thread . sleep ( 500 ); } catch ( InterruptedException e ) { e . printStackTrace (); } } } else { // button\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3042\u308bButton\u3092\u4e00\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView(mView)\u3068Button\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001\u97f3\u3092\u518d\u751f\u3059\u308b\u3002 for ( int i = 0 ; i < howManyButtons ; i ++ ) { if ( mView . equals ( buttons . get ( i ))) { Log . i ( \"PIANO\" , \"Button\" + Integer . toString ( i + 1 ) + \"\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" ); sounds . get ( i ). seekTo ( 0 ); sounds . get ( i ). start (); return ; } } } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 < RelativeLayout xmlns : android = \"http://schemas.android.com/apk/res/android\" xmlns : tools = \"http://schemas.android.com/tools\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" android : background = \"#000000\" tools : context = \".PianoSample001\" > < Button android : id = \"@+id/button1\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentTop = \"true\" android : layout_marginLeft = \"0dp\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button2\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button1\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button3\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button2\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button4\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button3\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button5\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button4\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button6\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button5\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button7\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button6\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/button8\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button7\" android : layout_marginTop = \"1dp\" android : background = \"@drawable/kenban\" android : text = \"\" /> < Button android : id = \"@+id/buttonPlay\" android : layout_width = \"fill_parent\" android : layout_height = \"55dp\" android : layout_alignParentLeft = \"true\" android : layout_alignParentRight = \"true\" android : layout_below = \"@+id/button8\" android : layout_marginTop = \"10dp\" android : text = \"play\" /> </ RelativeLayout >","title":"\u81ea\u52d5\u6f14\u594f\u6a5f\u80fd"},{"location":"01_app/chapter09/#json","text":"JSON Format 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 {\"title\" : \"MySound\", \"data\" : [ {\"merody\" : 0, \"time\" : 500}, {\"merody\" : 1, \"time\" : 500}, {\"merody\" : 2, \"time\" : 500}, {\"merody\" : 1, \"time\" : 500}, {\"merody\" : 2, \"time\" : 300}, {\"merody\" : 3, \"time\" : 100}, {\"merody\" : 1, \"time\" : 500}, {\"merody\" : 2, \"time\" : 300}, {\"merody\" : 3, \"time\" : 100}, {\"merody\" : 1, \"time\" : 500}, {\"merody\" : 2, \"time\" : 300}, {\"merody\" : 3, \"time\" : 100}, ]}","title":"JSON\u914d\u5217\u306b\u3088\u308b\u6f14\u594f"},{"location":"01_app/chapter09/#_8","text":"1 2 3 4 5 6 7 8 { \"\u9805\u76ee\u540d\" : \"\u9805\u76ee\" } { \"\u9805\u76ee\u540d1\" : \"\u9805\u76ee1\" , \"\u9805\u76ee\u540d2\" : \"\u9805\u76ee2\" } { \"\u9805\u76ee\u540d1\" : \"\u9805\u76ee1\" , \"\u9805\u76ee\u540d2\" :[ { \"\u9805\u76ee\u540d\" : \"\u9805\u76ee2-1\" } , { \"\u9805\u76ee\u540d\" : \"\u9805\u76ee2-2\" } ] }","title":"\u57fa\u672c\u69cb\u6587"},{"location":"01_app/chapter09/#for-example","text":"1 2 3 4 5 6 7 8 { \"title\" : \"myJsonData\" } { \"title\" : \"myJsonData\" , \"update\" : \"2015-03-31\" } { \"title\" : \"myJsonData\" , \"data\" : [ { \"value\" : \"data of value1\" } , { \"value\" : \"data of value2\" } ] }","title":"for example"},{"location":"01_app/chapter09/#_9","text":"1 2 {\"\u9805\u76ee\u540d\":\"\u6587\u5b57\u5217\"} {\"\u9805\u76ee\u540d\":\u6570\u5024}","title":"\u6570\u5024\u3068\u6587\u5b57\u5217"},{"location":"01_app/chapter09/#for-example_1","text":"1 2 3 4 5 { \"title\" : \"myJsonData\" , \"data\" : \"\u6587\u5b57\u5217\" } { \"title\" : \"myJsonData\" , \"data\" : 111 }","title":"for example"},{"location":"01_app/chapter09/#json-object","text":"1 2 3 4 5 6 String jsonData = \"{\\\" title \\ \":\\\" myJsonData \\ \", \\\" data \\ \":\\\" \u6587\u5b57\u5217\\ \"}\" ; JSON Object mJson = new JSONObject ( jsonData ); String mTitle = mJson . get ( \"title\" ); String mData = \"mJson.get(\" data \" );","title":"JSON Object\u306e\u6271\u3044"},{"location":"01_app/chapter09/#json-object_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 String jsonData = \"\\\"title\\\":\\\"myJsonData\\\", \\\"data\\\" : [ { \\ \"value \\\" : \\\" data of value1 \\\" },{ \\\" value \\\" : \\\" data of value2 \\\" }]}\" ; JSON Object mJson = new JSONObject ( jsonData ); String mTitle = mJson.get ( \"title\" ); JSONArray datas = mJson.getJSONArray ( \"data\" ); for ( int i = 0 ; i < datas.length (); i ++ ) { String mValue = datas.getJSONObject ( i ) . getString ( \"value\" ); Log . i ( TAG , \"value:\" + mValue ); } } MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 package com.gclue.mypiano ; import android.app.Activity ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.util.Log ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import org.json.JSONArray ; import org.json.JSONException ; import org.json.JSONObject ; import java.util.ArrayList ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < Button > buttons = new ArrayList < Button > (); /** \u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < MediaPlayer > sounds = new ArrayList < MediaPlayer > (); /** /res/layout/pianosample001_layout.xml\u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u306e\u6570\u3002 */ private int howManyButtons = 8 ; /** Data. */ private String mMerodyData = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 0,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; /** Button play. */ private Button mButtonPlay ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButtonPlay . setOnClickListener ( this ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 addButtonAndSound ( howManyButtons ); } /** * \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002 * @param num \u30dc\u30bf\u30f3\u306e\u6570 */ private void addButtonAndSound ( int num ) { for ( int i = 0 ; i < num ; i ++ ) { String n = Integer . toString ( i + 1 ); // \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b int buttonId = getResources (). getIdentifier ( \"button\" + n , \"id\" , getPackageName () ); Button mButton = ( Button ) findViewById ( buttonId ); mButton . setOnClickListener ( this ); buttons . add ( mButton ); // \u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b // \u30b5\u30a6\u30f3\u30c9\u30d5\u30a1\u30a4\u30eb\u304csound01\u306e\u3088\u3046\u306b\u30010\u304c\u4ed8\u3044\u305f2\u6841\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6570\u5024\u306e\u982d\u306b0\u3092\u4ed8\u3051\u305f\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b if ( i < 10 ) { n = \"0\" + n ; } int soundId = getResources (). getIdentifier ( \"sound\" + n , \"raw\" , getPackageName () ); MediaPlayer sound = MediaPlayer . create ( this , soundId ); sounds . add ( sound ); } } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 */ @Override public void onClick ( View mView ) { if ( mView . equals ( mButtonPlay )) { JSONObject mMerodyJson = null ; try { mMerodyJson = new JSONObject ( mMerodyData ); Log . i ( \"PIANO\" , \"title:\" + mMerodyJson . get ( \"title\" )); JSONArray datas = mMerodyJson . getJSONArray ( \"data\" ); for ( int i = 0 ; i < datas . length (); i ++ ) { int onkai = datas . getJSONObject ( i ). getInt ( \"merody\" ); sounds . get ( onkai ). seekTo ( 0 ); sounds . get ( onkai ). start (); int sleepTime = datas . getJSONObject ( i ). getInt ( \"time\" ); try { Thread . sleep ( sleepTime ); } catch ( InterruptedException e ) { e . printStackTrace (); } } } catch ( JSONException e ) { e . printStackTrace (); } } else { // button\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3042\u308bButton\u3092\u4e00\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView(mView)\u3068Button\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001\u97f3\u3092\u518d\u751f\u3059\u308b\u3002 for ( int i = 0 ; i < howManyButtons ; i ++ ) { if ( mView . equals ( buttons . get ( i ))) { Log . i ( \"PIANO\" , \"Button\" + Integer . toString ( i + 1 ) + \"\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" ); sounds . get ( i ). seekTo ( 0 ); sounds . get ( i ). start (); return ; } } } } }","title":"JSON Object\u306e\u914d\u5217\u306e\u6271\u3044"},{"location":"01_app/chapter09/#_10","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 package com.gclue.mypiano ; import android.app.Activity ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.util.Log ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import org.json.JSONArray ; import org.json.JSONException ; import org.json.JSONObject ; import java.util.ArrayList ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < Button > buttons = new ArrayList < Button > (); /** \u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < MediaPlayer > sounds = new ArrayList < MediaPlayer > (); /** /res/layout/pianosample001_layout.xml\u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u306e\u6570\u3002 */ private int howManyButtons = 8 ; /** Data. */ private String mMerodyData = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 0,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; /** Button play. */ private Button mButtonPlay ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButtonPlay . setOnClickListener ( this ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 addButtonAndSound ( howManyButtons ); } /** * \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002 * @param num \u30dc\u30bf\u30f3\u306e\u6570 */ private void addButtonAndSound ( int num ) { for ( int i = 0 ; i < num ; i ++ ) { String n = Integer . toString ( i + 1 ); // \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b int buttonId = getResources (). getIdentifier ( \"button\" + n , \"id\" , getPackageName () ); Button mButton = ( Button ) findViewById ( buttonId ); mButton . setOnClickListener ( this ); buttons . add ( mButton ); // \u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b // \u30b5\u30a6\u30f3\u30c9\u30d5\u30a1\u30a4\u30eb\u304csound01\u306e\u3088\u3046\u306b\u30010\u304c\u4ed8\u3044\u305f2\u6841\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6570\u5024\u306e\u982d\u306b0\u3092\u4ed8\u3051\u305f\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b if ( i < 10 ) { n = \"0\" + n ; } int soundId = getResources (). getIdentifier ( \"sound\" + n , \"raw\" , getPackageName () ); MediaPlayer sound = MediaPlayer . create ( this , soundId ); sounds . add ( sound ); } } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 */ @Override public void onClick ( View mView ) { if ( mView . equals ( mButtonPlay )) { JSONObject mMerodyJson = null ; try { mMerodyJson = new JSONObject ( mMerodyData ); Log . i ( \"PIANO\" , \"title:\" + mMerodyJson . get ( \"title\" )); JSONArray datas = mMerodyJson . getJSONArray ( \"data\" ); for ( int i = 0 ; i < datas . length (); i ++ ) { int onkai = datas . getJSONObject ( i ). getInt ( \"merody\" ); buttons . get ( onkai ). performClick (); int sleepTime = datas . getJSONObject ( i ). getInt ( \"time\" ); try { Thread . sleep ( sleepTime ); } catch ( InterruptedException e ) { e . printStackTrace (); } } } catch ( JSONException e ) { e . printStackTrace (); } } else { // button\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3042\u308bButton\u3092\u4e00\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView(mView)\u3068Button\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001\u97f3\u3092\u518d\u751f\u3059\u308b\u3002 for ( int i = 0 ; i < howManyButtons ; i ++ ) { if ( mView . equals ( buttons . get ( i ))) { Log . i ( \"PIANO\" , \"Button\" + Integer . toString ( i + 1 ) + \"\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" ); sounds . get ( i ). seekTo ( 0 ); sounds . get ( i ). start (); return ; } } } } }","title":"\u30dc\u30bf\u30f3\u62bc\u4e0b\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3"},{"location":"01_app/chapter10/","text":"\u30d4\u30a2\u30ce\u30a2\u30d7\u30ea\u306e\u4f5c\u6210(2) \u66f2\u9078\u629e\u753b\u9762\u7528Activity\u306e\u4f5c\u6210 listview_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" > <ListView android:layout_height= \"wrap_content\" android:layout_width= \"fill_parent\" android:id= \"@+id/listView1\" > </ListView> </LinearLayout> ListViewActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 package com.gclue.mypiano ; import android.app.Activity ; import android.os.Bundle ; import android.view.View ; import android.widget.AdapterView ; import android.widget.ArrayAdapter ; import android.widget.ListView ; import android.widget.Toast ; public class ListViewActivity extends Activity { /** * ListView */ private ListView mListView ; /** Called when the activity is first created. */ @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . listview_main ); // Adapter\u306e\u4f5c\u6210 ArrayAdapter < String > mAdapter = new ArrayAdapter < String > ( this , android . R . layout . simple_list_item_1 ); // \u5024\u3092\u8ffd\u52a0 mAdapter . add ( \"\u66f2A\" ); mAdapter . add ( \"\u66f2B\" ); mAdapter . add ( \"\u66f2C\" ); // ListView\u306e\u53d6\u308a\u8fbc\u307f mListView = ( ListView ) findViewById ( R . id . listView1 ); // \u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u30bb\u30c3\u30c8 mListView . setAdapter ( mAdapter ); // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u6642\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u8ffd\u52a0 mListView . setOnItemClickListener ( new AdapterView . OnItemClickListener () { @Override public void onItemClick ( AdapterView <?> parent , View view , int position , long id ) { String selectList = ( String ) parent . getItemAtPosition ( position ); Toast . makeText ( ListViewActivity . this , \"pos=\" + position + \":\" + selectList , Toast . LENGTH_LONG ). show (); } }); } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.gclue.mypiano\" > <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <activity android:name= \".ListViewActivity\" > </activity> </application> </manifest> activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:background= \"#000000\" tools:context= \".PianoSample001\" > <Button android:id= \"@+id/button1\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentTop= \"true\" android:layout_marginLeft= \"0dp\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button2\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button1\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button3\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button2\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button4\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button3\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button5\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button4\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button6\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button5\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button7\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button6\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button8\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button7\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/buttonPlay\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button8\" android:layout_marginTop= \"10dp\" android:text= \"play\" /> <Button android:id= \"@+id/buttonGet\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/buttonPlay\" android:layout_marginTop= \"2dp\" android:text= \"get Data\" /> </RelativeLayout> MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 package com.gclue.mypiano ; import android.app.Activity ; import android.content.Intent ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.util.Log ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import org.json.JSONArray ; import org.json.JSONException ; import org.json.JSONObject ; import java.util.ArrayList ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < Button > buttons = new ArrayList < Button > (); /** \u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < MediaPlayer > sounds = new ArrayList < MediaPlayer > (); /** /res/layout/pianosample001_layout.xml\u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u306e\u6570\u3002 */ private int howManyButtons = 8 ; /** Data. */ private String mMerodyData = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 0,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; /** Button play. */ private Button mButtonPlay ; /** Button get. */ private Button mButtonGet ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButtonPlay . setOnClickListener ( this ); mButtonGet = ( Button ) findViewById ( R . id . buttonGet ); mButtonGet . setOnClickListener ( this ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 addButtonAndSound ( howManyButtons ); } /** * \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002 * @param num \u30dc\u30bf\u30f3\u306e\u6570 */ private void addButtonAndSound ( int num ) { for ( int i = 0 ; i < num ; i ++ ) { String n = Integer . toString ( i + 1 ); // \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b int buttonId = getResources (). getIdentifier ( \"button\" + n , \"id\" , getPackageName () ); Button mButton = ( Button ) findViewById ( buttonId ); mButton . setOnClickListener ( this ); buttons . add ( mButton ); // \u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b // \u30b5\u30a6\u30f3\u30c9\u30d5\u30a1\u30a4\u30eb\u304csound01\u306e\u3088\u3046\u306b\u30010\u304c\u4ed8\u3044\u305f2\u6841\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6570\u5024\u306e\u982d\u306b0\u3092\u4ed8\u3051\u305f\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b if ( i < 10 ) { n = \"0\" + n ; } int soundId = getResources (). getIdentifier ( \"sound\" + n , \"raw\" , getPackageName () ); MediaPlayer sound = MediaPlayer . create ( this , soundId ); sounds . add ( sound ); } } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 */ @Override public void onClick ( View mView ) { if ( mView . equals ( mButtonPlay )) { JSONObject mMerodyJson = null ; try { mMerodyJson = new JSONObject ( mMerodyData ); Log . i ( \"PIANO\" , \"title:\" + mMerodyJson . get ( \"title\" )); JSONArray datas = mMerodyJson . getJSONArray ( \"data\" ); for ( int i = 0 ; i < datas . length (); i ++ ) { int onkai = datas . getJSONObject ( i ). getInt ( \"merody\" ); buttons . get ( onkai ). performClick (); int sleepTime = datas . getJSONObject ( i ). getInt ( \"time\" ); try { Thread . sleep ( sleepTime ); } catch ( InterruptedException e ) { e . printStackTrace (); } } } catch ( JSONException e ) { e . printStackTrace (); } } else if ( mView . equals ( mButtonGet )) { Intent selectIntent = new Intent (); selectIntent . setClassName ( \"com.gclue.mypiano\" , \"com.gclue.mypiano.ListViewActivity\" ); startActivity ( selectIntent ); } else { // button\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3042\u308bButton\u3092\u4e00\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView(mView)\u3068Button\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001\u97f3\u3092\u518d\u751f\u3059\u308b\u3002 for ( int i = 0 ; i < howManyButtons ; i ++ ) { if ( mView . equals ( buttons . get ( i ))) { Log . i ( \"PIANO\" , \"Button\" + Integer . toString ( i + 1 ) + \"\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" ); sounds . get ( i ). seekTo ( 0 ); sounds . get ( i ). start (); return ; } } } } } SharedPreference\u306b\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58 MainAxctivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 package com.gclue.mypiano ; import android.app.Activity ; import android.content.Intent ; import android.content.SharedPreferences ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.util.Log ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import org.json.JSONArray ; import org.json.JSONException ; import org.json.JSONObject ; import java.util.ArrayList ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < Button > buttons = new ArrayList < Button > (); /** \u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < MediaPlayer > sounds = new ArrayList < MediaPlayer > (); /** /res/layout/pianosample001_layout.xml\u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u306e\u6570\u3002 */ private int howManyButtons = 8 ; /** Button play. */ private Button mButtonPlay ; /** Button get. */ private Button mButtonGet ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButtonPlay . setOnClickListener ( this ); mButtonGet = ( Button ) findViewById ( R . id . buttonGet ); mButtonGet . setOnClickListener ( this ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 addButtonAndSound ( howManyButtons ); } /** * \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002 * @param num \u30dc\u30bf\u30f3\u306e\u6570 */ private void addButtonAndSound ( int num ) { for ( int i = 0 ; i < num ; i ++ ) { String n = Integer . toString ( i + 1 ); // \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b int buttonId = getResources (). getIdentifier ( \"button\" + n , \"id\" , getPackageName () ); Button mButton = ( Button ) findViewById ( buttonId ); mButton . setOnClickListener ( this ); buttons . add ( mButton ); // \u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b // \u30b5\u30a6\u30f3\u30c9\u30d5\u30a1\u30a4\u30eb\u304csound01\u306e\u3088\u3046\u306b\u30010\u304c\u4ed8\u3044\u305f2\u6841\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6570\u5024\u306e\u982d\u306b0\u3092\u4ed8\u3051\u305f\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b if ( i < 10 ) { n = \"0\" + n ; } int soundId = getResources (). getIdentifier ( \"sound\" + n , \"raw\" , getPackageName () ); MediaPlayer sound = MediaPlayer . create ( this , soundId ); sounds . add ( sound ); } } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 */ @Override public void onClick ( View mView ) { if ( mView . equals ( mButtonPlay )) { JSONObject mMerodyJson = null ; try { // MYDATA\u3068\u3044\u3046\u540d\u524d\u306eSharedPreference SharedPreferences settings = this . getSharedPreferences ( \"MYDATA\" , this . MODE_PRIVATE ); String mMerodyData = settings . getString ( \"DATA\" , \"\" ); mMerodyJson = new JSONObject ( mMerodyData ); Log . i ( \"PIANO\" , \"title:\" + mMerodyJson . get ( \"title\" )); JSONArray datas = mMerodyJson . getJSONArray ( \"data\" ); for ( int i = 0 ; i < datas . length (); i ++ ) { int onkai = datas . getJSONObject ( i ). getInt ( \"merody\" ); buttons . get ( onkai ). performClick (); int sleepTime = datas . getJSONObject ( i ). getInt ( \"time\" ); try { Thread . sleep ( sleepTime ); } catch ( InterruptedException e ) { e . printStackTrace (); } } } catch ( JSONException e ) { e . printStackTrace (); } } else if ( mView . equals ( mButtonGet )) { Intent selectIntent = new Intent (); selectIntent . setClassName ( \"com.gclue.mypiano\" , \"com.gclue.mypiano.ListViewActivity\" ); startActivity ( selectIntent ); } else { // button\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3042\u308bButton\u3092\u4e00\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView(mView)\u3068Button\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001\u97f3\u3092\u518d\u751f\u3059\u308b\u3002 for ( int i = 0 ; i < howManyButtons ; i ++ ) { if ( mView . equals ( buttons . get ( i ))) { Log . i ( \"PIANO\" , \"Button\" + Integer . toString ( i + 1 ) + \"\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" ); sounds . get ( i ). seekTo ( 0 ); sounds . get ( i ). start (); return ; } } } } } ListViewActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 package com.gclue.mypiano ; import android.app.Activity ; import android.content.Context ; import android.content.SharedPreferences ; import android.os.Bundle ; import android.view.View ; import android.widget.AdapterView ; import android.widget.ArrayAdapter ; import android.widget.ListView ; public class ListViewActivity extends Activity { /** * ListView */ private ListView mListView ; /** Data. */ private String mMerodyData [] ; /** Called when the activity is first created. */ @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . listview_main ); // Adapter\u306e\u4f5c\u6210 ArrayAdapter < String > mAdapter = new ArrayAdapter < String > ( this , android . R . layout . simple_list_item_1 ); // \u5024\u3092\u8ffd\u52a0 mAdapter . add ( \"\u66f2A\" ); mAdapter . add ( \"\u66f2B\" ); mAdapter . add ( \"\u66f2C\" ); mMerodyData = new String [ 3 ] ; // \u66f2A\u30c7\u30fc\u30bf mMerodyData [ 0 ] = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 0,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; // \u66f2B\u30c7\u30fc\u30bf mMerodyData [ 1 ] = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 6,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 5,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 4,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 4,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 5,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 6,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 7,\\\"time\\\" : 100},]}\" ; // \u66f2C\u30c7\u30fc\u30bf mMerodyData [ 2 ] = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 4,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; // ListView\u306e\u53d6\u308a\u8fbc\u307f mListView = ( ListView ) findViewById ( R . id . listView1 ); // \u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u30bb\u30c3\u30c8 mListView . setAdapter ( mAdapter ); // Context\u3092\u53d6\u5f97. final Context mContext = this . getBaseContext (); // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u6642\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u8ffd\u52a0 mListView . setOnItemClickListener ( new AdapterView . OnItemClickListener () { @Override public void onItemClick ( AdapterView <?> parent , View view , int position , long id ) { // MYDATA\u3068\u3044\u3046\u540d\u524d\u306eSharedPreference. SharedPreferences settings = mContext . getSharedPreferences ( \"MYDATA\" , mContext . MODE_PRIVATE ); // SharePreference\u306b\u4fdd\u5b58. SharedPreferences . Editor editor = settings . edit (); editor . putString ( \"DATA\" , mMerodyData [ position ] ); editor . commit (); finish (); } }); } } Github\u304b\u3089\u30c7\u30fc\u30bf\u53d6\u5f97 Github\u304b\u3089\u53d6\u5f97\u3059\u308b \u30c7\u30fc\u30bf\u3092Push\u3057\u3066\u304a\u304f https://raw.githubusercontent.com/micknerd/Aizu/master/akira/data0.json https://raw.githubusercontent.com/micknerd/Aizu/master/akira/data1.json https://raw.githubusercontent.com/micknerd/Aizu/master/akira/data2.json ListViewActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 package com.gclue.mypiano ; import android.app.Activity ; import android.content.Context ; import android.content.SharedPreferences ; import android.os.Bundle ; import android.view.View ; import android.widget.AdapterView ; import android.widget.ArrayAdapter ; import android.widget.ListView ; public class ListViewActivity extends Activity { /** * ListView */ private ListView mListView ; /** Data. */ private String mMerodyData [] ; /** Called when the activity is first created. */ @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . listview_main ); // Adapter\u306e\u4f5c\u6210 ArrayAdapter < String > mAdapter = new ArrayAdapter < String > ( this , android . R . layout . simple_list_item_1 ); // \u5024\u3092\u8ffd\u52a0 mAdapter . add ( \"\u66f2A\" ); mAdapter . add ( \"\u66f2B\" ); mAdapter . add ( \"\u66f2C\" ); mMerodyData = new String [ 3 ] ; // \u66f2A\u30c7\u30fc\u30bf mMerodyData [ 0 ] = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 0,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; // \u66f2B\u30c7\u30fc\u30bf mMerodyData [ 1 ] = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 6,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 5,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 4,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 4,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 5,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 6,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 7,\\\"time\\\" : 100},]}\" ; // \u66f2C\u30c7\u30fc\u30bf mMerodyData [ 2 ] = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 4,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; // ListView\u306e\u53d6\u308a\u8fbc\u307f mListView = ( ListView ) findViewById ( R . id . listView1 ); // \u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u30bb\u30c3\u30c8 mListView . setAdapter ( mAdapter ); // Context\u3092\u53d6\u5f97. final Context mContext = this . getBaseContext (); // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u6642\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u8ffd\u52a0 mListView . setOnItemClickListener ( new AdapterView . OnItemClickListener () { @Override public void onItemClick ( AdapterView <?> parent , View view , int position , long id ) { ( new Thread ( new Runnable () { @Override public void run () { String response = \"\" ; DefaultHttpClient client = new DefaultHttpClient (); HttpGet httpGet = new HttpGet ( \"https://raw.githubusercontent.com/micknerd/Aizu/master/akira/data\" + position + \".json\" ); try { HttpResponse execute = client . execute ( httpGet ); InputStream content = execute . getEntity (). getContent (); BufferedReader buffer = new BufferedReader ( new InputStreamReader ( content )); String line = \"\" ; while (( line = buffer . readLine ()) != null ) { response += line ; } Log . i ( \"LIFE\" , response ); } catch ( Exception e ) { Log . i ( \"LIFE\" , \"error\" + e ); } // MYDATA\u3068\u3044\u3046\u540d\u524d\u306eSharedPreference. SharedPreferences settings = mContext . getSharedPreferences ( \"MYDATA\" , mContext . MODE_PRIVATE ); // SharePreference\u306b\u4fdd\u5b58. SharedPreferences . Editor editor = settings . edit (); editor . putString ( \"DATA\" , response ); editor . commit (); } })). start (); finish (); } }); } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.gclue.mypiano\" > <uses-permission android:name= \"android.permission.INTERNET\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <activity android:name= \".ListViewActivity\" > </activity> </application> </manifest>","title":"\u30d4\u30a2\u30ce\u30a2\u30d7\u30ea\u306e\u4f5c\u6210(2)"},{"location":"01_app/chapter10/#2","text":"","title":"\u30d4\u30a2\u30ce\u30a2\u30d7\u30ea\u306e\u4f5c\u6210(2)"},{"location":"01_app/chapter10/#activity","text":"listview_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" > <ListView android:layout_height= \"wrap_content\" android:layout_width= \"fill_parent\" android:id= \"@+id/listView1\" > </ListView> </LinearLayout> ListViewActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 package com.gclue.mypiano ; import android.app.Activity ; import android.os.Bundle ; import android.view.View ; import android.widget.AdapterView ; import android.widget.ArrayAdapter ; import android.widget.ListView ; import android.widget.Toast ; public class ListViewActivity extends Activity { /** * ListView */ private ListView mListView ; /** Called when the activity is first created. */ @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . listview_main ); // Adapter\u306e\u4f5c\u6210 ArrayAdapter < String > mAdapter = new ArrayAdapter < String > ( this , android . R . layout . simple_list_item_1 ); // \u5024\u3092\u8ffd\u52a0 mAdapter . add ( \"\u66f2A\" ); mAdapter . add ( \"\u66f2B\" ); mAdapter . add ( \"\u66f2C\" ); // ListView\u306e\u53d6\u308a\u8fbc\u307f mListView = ( ListView ) findViewById ( R . id . listView1 ); // \u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u30bb\u30c3\u30c8 mListView . setAdapter ( mAdapter ); // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u6642\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u8ffd\u52a0 mListView . setOnItemClickListener ( new AdapterView . OnItemClickListener () { @Override public void onItemClick ( AdapterView <?> parent , View view , int position , long id ) { String selectList = ( String ) parent . getItemAtPosition ( position ); Toast . makeText ( ListViewActivity . this , \"pos=\" + position + \":\" + selectList , Toast . LENGTH_LONG ). show (); } }); } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.gclue.mypiano\" > <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <activity android:name= \".ListViewActivity\" > </activity> </application> </manifest> activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:background= \"#000000\" tools:context= \".PianoSample001\" > <Button android:id= \"@+id/button1\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentTop= \"true\" android:layout_marginLeft= \"0dp\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button2\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button1\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button3\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button2\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button4\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button3\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button5\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button4\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button6\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button5\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button7\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button6\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/button8\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button7\" android:layout_marginTop= \"1dp\" android:background= \"@drawable/kenban\" android:text= \"\" /> <Button android:id= \"@+id/buttonPlay\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/button8\" android:layout_marginTop= \"10dp\" android:text= \"play\" /> <Button android:id= \"@+id/buttonGet\" android:layout_width= \"fill_parent\" android:layout_height= \"55dp\" android:layout_alignParentLeft= \"true\" android:layout_alignParentRight= \"true\" android:layout_below= \"@+id/buttonPlay\" android:layout_marginTop= \"2dp\" android:text= \"get Data\" /> </RelativeLayout> MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 package com.gclue.mypiano ; import android.app.Activity ; import android.content.Intent ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.util.Log ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import org.json.JSONArray ; import org.json.JSONException ; import org.json.JSONObject ; import java.util.ArrayList ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < Button > buttons = new ArrayList < Button > (); /** \u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < MediaPlayer > sounds = new ArrayList < MediaPlayer > (); /** /res/layout/pianosample001_layout.xml\u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u306e\u6570\u3002 */ private int howManyButtons = 8 ; /** Data. */ private String mMerodyData = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 0,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; /** Button play. */ private Button mButtonPlay ; /** Button get. */ private Button mButtonGet ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButtonPlay . setOnClickListener ( this ); mButtonGet = ( Button ) findViewById ( R . id . buttonGet ); mButtonGet . setOnClickListener ( this ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 addButtonAndSound ( howManyButtons ); } /** * \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002 * @param num \u30dc\u30bf\u30f3\u306e\u6570 */ private void addButtonAndSound ( int num ) { for ( int i = 0 ; i < num ; i ++ ) { String n = Integer . toString ( i + 1 ); // \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b int buttonId = getResources (). getIdentifier ( \"button\" + n , \"id\" , getPackageName () ); Button mButton = ( Button ) findViewById ( buttonId ); mButton . setOnClickListener ( this ); buttons . add ( mButton ); // \u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b // \u30b5\u30a6\u30f3\u30c9\u30d5\u30a1\u30a4\u30eb\u304csound01\u306e\u3088\u3046\u306b\u30010\u304c\u4ed8\u3044\u305f2\u6841\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6570\u5024\u306e\u982d\u306b0\u3092\u4ed8\u3051\u305f\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b if ( i < 10 ) { n = \"0\" + n ; } int soundId = getResources (). getIdentifier ( \"sound\" + n , \"raw\" , getPackageName () ); MediaPlayer sound = MediaPlayer . create ( this , soundId ); sounds . add ( sound ); } } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 */ @Override public void onClick ( View mView ) { if ( mView . equals ( mButtonPlay )) { JSONObject mMerodyJson = null ; try { mMerodyJson = new JSONObject ( mMerodyData ); Log . i ( \"PIANO\" , \"title:\" + mMerodyJson . get ( \"title\" )); JSONArray datas = mMerodyJson . getJSONArray ( \"data\" ); for ( int i = 0 ; i < datas . length (); i ++ ) { int onkai = datas . getJSONObject ( i ). getInt ( \"merody\" ); buttons . get ( onkai ). performClick (); int sleepTime = datas . getJSONObject ( i ). getInt ( \"time\" ); try { Thread . sleep ( sleepTime ); } catch ( InterruptedException e ) { e . printStackTrace (); } } } catch ( JSONException e ) { e . printStackTrace (); } } else if ( mView . equals ( mButtonGet )) { Intent selectIntent = new Intent (); selectIntent . setClassName ( \"com.gclue.mypiano\" , \"com.gclue.mypiano.ListViewActivity\" ); startActivity ( selectIntent ); } else { // button\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3042\u308bButton\u3092\u4e00\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView(mView)\u3068Button\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001\u97f3\u3092\u518d\u751f\u3059\u308b\u3002 for ( int i = 0 ; i < howManyButtons ; i ++ ) { if ( mView . equals ( buttons . get ( i ))) { Log . i ( \"PIANO\" , \"Button\" + Integer . toString ( i + 1 ) + \"\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" ); sounds . get ( i ). seekTo ( 0 ); sounds . get ( i ). start (); return ; } } } } }","title":"\u66f2\u9078\u629e\u753b\u9762\u7528Activity\u306e\u4f5c\u6210"},{"location":"01_app/chapter10/#sharedpreference","text":"MainAxctivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 package com.gclue.mypiano ; import android.app.Activity ; import android.content.Intent ; import android.content.SharedPreferences ; import android.media.MediaPlayer ; import android.os.Bundle ; import android.util.Log ; import android.view.View ; import android.view.Window ; import android.widget.Button ; import org.json.JSONArray ; import org.json.JSONException ; import org.json.JSONObject ; import java.util.ArrayList ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < Button > buttons = new ArrayList < Button > (); /** \u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306e\u5b9a\u7fa9\u3002 */ private ArrayList < MediaPlayer > sounds = new ArrayList < MediaPlayer > (); /** /res/layout/pianosample001_layout.xml\u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u306e\u6570\u3002 */ private int howManyButtons = 8 ; /** Button play. */ private Button mButtonPlay ; /** Button get. */ private Button mButtonGet ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); requestWindowFeature ( Window . FEATURE_NO_TITLE ); setContentView ( R . layout . activity_main ); mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButtonPlay . setOnClickListener ( this ); mButtonGet = ( Button ) findViewById ( R . id . buttonGet ); mButtonGet . setOnClickListener ( this ); // /res/layout/pianosample_layout.xml \u306b\u8a18\u8ff0\u3057\u305f\u30dc\u30bf\u30f3\u3092\u8aad\u307f\u8fbc\u3080 addButtonAndSound ( howManyButtons ); } /** * \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002 * @param num \u30dc\u30bf\u30f3\u306e\u6570 */ private void addButtonAndSound ( int num ) { for ( int i = 0 ; i < num ; i ++ ) { String n = Integer . toString ( i + 1 ); // \u30dc\u30bf\u30f3\u3092\u30dc\u30bf\u30f3\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b int buttonId = getResources (). getIdentifier ( \"button\" + n , \"id\" , getPackageName () ); Button mButton = ( Button ) findViewById ( buttonId ); mButton . setOnClickListener ( this ); buttons . add ( mButton ); // \u30b5\u30a6\u30f3\u30c9\u3092\u30b5\u30a6\u30f3\u30c9\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b // \u30b5\u30a6\u30f3\u30c9\u30d5\u30a1\u30a4\u30eb\u304csound01\u306e\u3088\u3046\u306b\u30010\u304c\u4ed8\u3044\u305f2\u6841\u8868\u793a\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u6570\u5024\u306e\u982d\u306b0\u3092\u4ed8\u3051\u305f\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b if ( i < 10 ) { n = \"0\" + n ; } int soundId = getResources (). getIdentifier ( \"sound\" + n , \"raw\" , getPackageName () ); MediaPlayer sound = MediaPlayer . create ( this , soundId ); sounds . add ( sound ); } } /** * \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 */ @Override public void onClick ( View mView ) { if ( mView . equals ( mButtonPlay )) { JSONObject mMerodyJson = null ; try { // MYDATA\u3068\u3044\u3046\u540d\u524d\u306eSharedPreference SharedPreferences settings = this . getSharedPreferences ( \"MYDATA\" , this . MODE_PRIVATE ); String mMerodyData = settings . getString ( \"DATA\" , \"\" ); mMerodyJson = new JSONObject ( mMerodyData ); Log . i ( \"PIANO\" , \"title:\" + mMerodyJson . get ( \"title\" )); JSONArray datas = mMerodyJson . getJSONArray ( \"data\" ); for ( int i = 0 ; i < datas . length (); i ++ ) { int onkai = datas . getJSONObject ( i ). getInt ( \"merody\" ); buttons . get ( onkai ). performClick (); int sleepTime = datas . getJSONObject ( i ). getInt ( \"time\" ); try { Thread . sleep ( sleepTime ); } catch ( InterruptedException e ) { e . printStackTrace (); } } } catch ( JSONException e ) { e . printStackTrace (); } } else if ( mView . equals ( mButtonGet )) { Intent selectIntent = new Intent (); selectIntent . setClassName ( \"com.gclue.mypiano\" , \"com.gclue.mypiano.ListViewActivity\" ); startActivity ( selectIntent ); } else { // button\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3042\u308bButton\u3092\u4e00\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3001\u30af\u30ea\u30c3\u30af\u3055\u308c\u305fView(mView)\u3068Button\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001\u97f3\u3092\u518d\u751f\u3059\u308b\u3002 for ( int i = 0 ; i < howManyButtons ; i ++ ) { if ( mView . equals ( buttons . get ( i ))) { Log . i ( \"PIANO\" , \"Button\" + Integer . toString ( i + 1 ) + \"\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u307e\u3057\u305f\u3002\" ); sounds . get ( i ). seekTo ( 0 ); sounds . get ( i ). start (); return ; } } } } } ListViewActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 package com.gclue.mypiano ; import android.app.Activity ; import android.content.Context ; import android.content.SharedPreferences ; import android.os.Bundle ; import android.view.View ; import android.widget.AdapterView ; import android.widget.ArrayAdapter ; import android.widget.ListView ; public class ListViewActivity extends Activity { /** * ListView */ private ListView mListView ; /** Data. */ private String mMerodyData [] ; /** Called when the activity is first created. */ @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . listview_main ); // Adapter\u306e\u4f5c\u6210 ArrayAdapter < String > mAdapter = new ArrayAdapter < String > ( this , android . R . layout . simple_list_item_1 ); // \u5024\u3092\u8ffd\u52a0 mAdapter . add ( \"\u66f2A\" ); mAdapter . add ( \"\u66f2B\" ); mAdapter . add ( \"\u66f2C\" ); mMerodyData = new String [ 3 ] ; // \u66f2A\u30c7\u30fc\u30bf mMerodyData [ 0 ] = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 0,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; // \u66f2B\u30c7\u30fc\u30bf mMerodyData [ 1 ] = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 6,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 5,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 4,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 4,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 5,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 6,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 7,\\\"time\\\" : 100},]}\" ; // \u66f2C\u30c7\u30fc\u30bf mMerodyData [ 2 ] = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 4,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; // ListView\u306e\u53d6\u308a\u8fbc\u307f mListView = ( ListView ) findViewById ( R . id . listView1 ); // \u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u30bb\u30c3\u30c8 mListView . setAdapter ( mAdapter ); // Context\u3092\u53d6\u5f97. final Context mContext = this . getBaseContext (); // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u6642\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u8ffd\u52a0 mListView . setOnItemClickListener ( new AdapterView . OnItemClickListener () { @Override public void onItemClick ( AdapterView <?> parent , View view , int position , long id ) { // MYDATA\u3068\u3044\u3046\u540d\u524d\u306eSharedPreference. SharedPreferences settings = mContext . getSharedPreferences ( \"MYDATA\" , mContext . MODE_PRIVATE ); // SharePreference\u306b\u4fdd\u5b58. SharedPreferences . Editor editor = settings . edit (); editor . putString ( \"DATA\" , mMerodyData [ position ] ); editor . commit (); finish (); } }); } }","title":"SharedPreference\u306b\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58"},{"location":"01_app/chapter10/#github","text":"Github\u304b\u3089\u53d6\u5f97\u3059\u308b \u30c7\u30fc\u30bf\u3092Push\u3057\u3066\u304a\u304f https://raw.githubusercontent.com/micknerd/Aizu/master/akira/data0.json https://raw.githubusercontent.com/micknerd/Aizu/master/akira/data1.json https://raw.githubusercontent.com/micknerd/Aizu/master/akira/data2.json ListViewActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 package com.gclue.mypiano ; import android.app.Activity ; import android.content.Context ; import android.content.SharedPreferences ; import android.os.Bundle ; import android.view.View ; import android.widget.AdapterView ; import android.widget.ArrayAdapter ; import android.widget.ListView ; public class ListViewActivity extends Activity { /** * ListView */ private ListView mListView ; /** Data. */ private String mMerodyData [] ; /** Called when the activity is first created. */ @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . listview_main ); // Adapter\u306e\u4f5c\u6210 ArrayAdapter < String > mAdapter = new ArrayAdapter < String > ( this , android . R . layout . simple_list_item_1 ); // \u5024\u3092\u8ffd\u52a0 mAdapter . add ( \"\u66f2A\" ); mAdapter . add ( \"\u66f2B\" ); mAdapter . add ( \"\u66f2C\" ); mMerodyData = new String [ 3 ] ; // \u66f2A\u30c7\u30fc\u30bf mMerodyData [ 0 ] = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 0,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; // \u66f2B\u30c7\u30fc\u30bf mMerodyData [ 1 ] = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 6,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 5,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 4,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 4,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 5,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 6,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 7,\\\"time\\\" : 100},]}\" ; // \u66f2C\u30c7\u30fc\u30bf mMerodyData [ 2 ] = \"{\\\"title\\\" : \\\"MySound\\\",\\\"data\\\" : [\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 4,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 1,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 2,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 500},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 300},\" + \"{\\\"merody\\\" : 3,\\\"time\\\" : 100},]}\" ; // ListView\u306e\u53d6\u308a\u8fbc\u307f mListView = ( ListView ) findViewById ( R . id . listView1 ); // \u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u30bb\u30c3\u30c8 mListView . setAdapter ( mAdapter ); // Context\u3092\u53d6\u5f97. final Context mContext = this . getBaseContext (); // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u6642\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u8ffd\u52a0 mListView . setOnItemClickListener ( new AdapterView . OnItemClickListener () { @Override public void onItemClick ( AdapterView <?> parent , View view , int position , long id ) { ( new Thread ( new Runnable () { @Override public void run () { String response = \"\" ; DefaultHttpClient client = new DefaultHttpClient (); HttpGet httpGet = new HttpGet ( \"https://raw.githubusercontent.com/micknerd/Aizu/master/akira/data\" + position + \".json\" ); try { HttpResponse execute = client . execute ( httpGet ); InputStream content = execute . getEntity (). getContent (); BufferedReader buffer = new BufferedReader ( new InputStreamReader ( content )); String line = \"\" ; while (( line = buffer . readLine ()) != null ) { response += line ; } Log . i ( \"LIFE\" , response ); } catch ( Exception e ) { Log . i ( \"LIFE\" , \"error\" + e ); } // MYDATA\u3068\u3044\u3046\u540d\u524d\u306eSharedPreference. SharedPreferences settings = mContext . getSharedPreferences ( \"MYDATA\" , mContext . MODE_PRIVATE ); // SharePreference\u306b\u4fdd\u5b58. SharedPreferences . Editor editor = settings . edit (); editor . putString ( \"DATA\" , response ); editor . commit (); } })). start (); finish (); } }); } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.gclue.mypiano\" > <uses-permission android:name= \"android.permission.INTERNET\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <activity android:name= \".ListViewActivity\" > </activity> </application> </manifest>","title":"Github\u304b\u3089\u30c7\u30fc\u30bf\u53d6\u5f97"},{"location":"01_app/chapter11/","text":"Arduino Bluetooth\u9023\u643a Bluetooth\u3068\u306f Bluetooth(\u30d6\u30eb\u30fc\u30c8\u30a5\u30fc\u30b9)\u306f\u300110\u30e1\u30fc\u30c8\u30eb\u7a0b\u5ea6\u306e\u8ddd\u96e2\u306b\u3042\u308b\u6a5f\u5668\u9593\u3067\u4f7f\u7528\u3067\u304d\u308b2.4GHz\u5e2f\u306e\u96fb\u6ce2\u306b\u3088\u308b\u7121\u7dda\u901a\u4fe1\u3067\u3059\u3002 \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3084\u30ad\u30fc\u30dc\u30fc\u30c9\u3001\u30de\u30a6\u30b9\u306a\u3069\u306e\u30d1\u30bd\u30b3\u30f3\u306e\u5468\u8fba\u6a5f\u5668\u7b49\u306e\u97f3\u58f0\u3084\u6587\u5b57\u7b49\u306e\u6bd4\u8f03\u7684\u7c21\u5358\u306a\u901a\u4fe1\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002","title":"Arduino Bluetooth\u9023\u643a"},{"location":"01_app/chapter11/#arduino-bluetooth","text":"","title":"Arduino Bluetooth\u9023\u643a"},{"location":"01_app/chapter11/#bluetooth","text":"Bluetooth(\u30d6\u30eb\u30fc\u30c8\u30a5\u30fc\u30b9)\u306f\u300110\u30e1\u30fc\u30c8\u30eb\u7a0b\u5ea6\u306e\u8ddd\u96e2\u306b\u3042\u308b\u6a5f\u5668\u9593\u3067\u4f7f\u7528\u3067\u304d\u308b2.4GHz\u5e2f\u306e\u96fb\u6ce2\u306b\u3088\u308b\u7121\u7dda\u901a\u4fe1\u3067\u3059\u3002 \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3084\u30ad\u30fc\u30dc\u30fc\u30c9\u3001\u30de\u30a6\u30b9\u306a\u3069\u306e\u30d1\u30bd\u30b3\u30f3\u306e\u5468\u8fba\u6a5f\u5668\u7b49\u306e\u97f3\u58f0\u3084\u6587\u5b57\u7b49\u306e\u6bd4\u8f03\u7684\u7c21\u5358\u306a\u901a\u4fe1\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002","title":"Bluetooth\u3068\u306f"},{"location":"01_app/chapter12/","text":"Arduino USB Host\u9023\u643a","title":"Arduino USB Host\u9023\u643a"},{"location":"01_app/chapter12/#arduino-usb-host","text":"","title":"Arduino USB Host\u9023\u643a"},{"location":"02_appendix/appendix01/","text":"Ap1.USB\u30c7\u30d0\u30c3\u30af\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3059\u308b Android 4.2 \u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3 \u8a2d\u5b9a\u304b\u3089\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3002 USB\u30c7\u30d0\u30c3\u30af\u306b\u30c1\u30a7\u30c3\u30af\u30de\u30fc\u30af\u3092\u3044\u308c\u308b\u3002 Android 4.2 \u4ee5\u964d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3 \u7aef\u672b\u60c5\u5831\u3092\u9078\u629e\u3057\u3001\u30d3\u30eb\u30c9\u756a\u53f7\u309210\u56de\u9078\u629e\u3059\u308b\u3068\u3001\u30c7\u30d0\u30c3\u30af\u30e2\u30fc\u30c9\u306b\u306a\u308b\u3002 \u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3002 USB\u30c7\u30d0\u30c3\u30af\u306b\u30c1\u30a7\u30c3\u30af\u30de\u30fc\u30af\u3092\u3044\u308c\u308b\u3002","title":"Ap1.USB\u30c7\u30d0\u30c3\u30af\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3059\u308b"},{"location":"02_appendix/appendix01/#ap1usb","text":"","title":"Ap1.USB\u30c7\u30d0\u30c3\u30af\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3059\u308b"},{"location":"02_appendix/appendix01/#android-42","text":"\u8a2d\u5b9a\u304b\u3089\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3002 USB\u30c7\u30d0\u30c3\u30af\u306b\u30c1\u30a7\u30c3\u30af\u30de\u30fc\u30af\u3092\u3044\u308c\u308b\u3002","title":"Android 4.2 \u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3"},{"location":"02_appendix/appendix01/#android-42_1","text":"\u7aef\u672b\u60c5\u5831\u3092\u9078\u629e\u3057\u3001\u30d3\u30eb\u30c9\u756a\u53f7\u309210\u56de\u9078\u629e\u3059\u308b\u3068\u3001\u30c7\u30d0\u30c3\u30af\u30e2\u30fc\u30c9\u306b\u306a\u308b\u3002 \u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3002 USB\u30c7\u30d0\u30c3\u30af\u306b\u30c1\u30a7\u30c3\u30af\u30de\u30fc\u30af\u3092\u3044\u308c\u308b\u3002","title":"Android 4.2 \u4ee5\u964d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3"},{"location":"02_appendix/appendix02/","text":"Appendix2.Logcat\u3067\u30ed\u30b0\u3092\u898b\u308b logcat\u3092\u8868\u793a Devices|logcat\u3092\u9078\u629e\u3057\u3001Devices\u306b\u7aef\u672b\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002 \u3092\u9078\u629e\u3057\u3001\u30c7\u30d0\u30a4\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u3002 Filter \u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3067\u3001Filter\u3092\u304b\u3051\u308b\u3053\u3068\u3067\u3001\u30ed\u30b0\u3092\u8868\u793a\u3059\u308b\u30a2\u30d7\u30ea\u3092\u7d5e\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 Keyword \u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u5165\u308c\u308b\u3053\u3068\u3067\u3001\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u95a2\u9023\u3059\u308b\u30ed\u30b0\u3092\u8868\u793a\u3067\u304d\u308b\u3002 1 Log . d ( \"TEST\" , \"MESSAGE\" ); Reference Log class Log.d\u4ee5\u5916\u306b\u3082\u3001\u4e0b\u8a18\u306e\u5b9a\u7fa9\u304c\u53ef\u80fd\u3002 1 2 3 4 Log . v ( \"TEST\" , \"MESSAGE\" ); Log . e ( \"TEST\" , \"MESSAGE\" ); Log . i ( \"TEST\" , \"MESSAGE\" ); Log . w ( \"TEST\" , \"MESSAGE\" );","title":"Appendix2.Logcat\u3067\u30ed\u30b0\u3092\u898b\u308b"},{"location":"02_appendix/appendix02/#appendix2logcat","text":"","title":"Appendix2.Logcat\u3067\u30ed\u30b0\u3092\u898b\u308b"},{"location":"02_appendix/appendix02/#logcat","text":"Devices|logcat\u3092\u9078\u629e\u3057\u3001Devices\u306b\u7aef\u672b\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002 \u3092\u9078\u629e\u3057\u3001\u30c7\u30d0\u30a4\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u3002","title":"logcat\u3092\u8868\u793a"},{"location":"02_appendix/appendix02/#filter","text":"\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3067\u3001Filter\u3092\u304b\u3051\u308b\u3053\u3068\u3067\u3001\u30ed\u30b0\u3092\u8868\u793a\u3059\u308b\u30a2\u30d7\u30ea\u3092\u7d5e\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002","title":"Filter"},{"location":"02_appendix/appendix02/#keyword","text":"\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u5165\u308c\u308b\u3053\u3068\u3067\u3001\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u95a2\u9023\u3059\u308b\u30ed\u30b0\u3092\u8868\u793a\u3067\u304d\u308b\u3002 1 Log . d ( \"TEST\" , \"MESSAGE\" ); Reference Log class Log.d\u4ee5\u5916\u306b\u3082\u3001\u4e0b\u8a18\u306e\u5b9a\u7fa9\u304c\u53ef\u80fd\u3002 1 2 3 4 Log . v ( \"TEST\" , \"MESSAGE\" ); Log . e ( \"TEST\" , \"MESSAGE\" ); Log . i ( \"TEST\" , \"MESSAGE\" ); Log . w ( \"TEST\" , \"MESSAGE\" );","title":"Keyword"},{"location":"02_appendix/appendix03/","text":"Appendix3.\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30ad\u30fc \u30b3\u30fc\u30c9\u306e\u30a4\u30f3\u30c7\u30f3\u30c8\u6574\u5f62 1 control + option + i import \u30a8\u30e9\u30fc\u7b87\u6240\u306e\u4e0a\u3067\u3001alt + Enter\u3092\u62bc\u3059\u3068\u3001\u30af\u30e9\u30b9\u306eimport\u6587\u304c\u81ea\u52d5\u7684\u306b\u8ffd\u52a0\u3055\u308c\u308b\u3002 1 alt + Enter \u30b3\u30fc\u30c9\u3092\u5168\u6587\u9078\u629e 1 option + a","title":"Appendix3.\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30ad\u30fc"},{"location":"02_appendix/appendix03/#appendix3","text":"","title":"Appendix3.\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30ad\u30fc"},{"location":"02_appendix/appendix03/#_1","text":"1 control + option + i","title":"\u30b3\u30fc\u30c9\u306e\u30a4\u30f3\u30c7\u30f3\u30c8\u6574\u5f62"},{"location":"02_appendix/appendix03/#import","text":"\u30a8\u30e9\u30fc\u7b87\u6240\u306e\u4e0a\u3067\u3001alt + Enter\u3092\u62bc\u3059\u3068\u3001\u30af\u30e9\u30b9\u306eimport\u6587\u304c\u81ea\u52d5\u7684\u306b\u8ffd\u52a0\u3055\u308c\u308b\u3002 1 alt + Enter","title":"import"},{"location":"02_appendix/appendix03/#_2","text":"1 option + a","title":"\u30b3\u30fc\u30c9\u3092\u5168\u6587\u9078\u629e"},{"location":"02_appendix/appendix04/","text":"Appendix4.Android\u306e\u6b74\u53f2 Android 1.0 2008\u5e749\u670828\u65e5 Android 1.1 2009\u5e742\u67089\u65e5 Android 1.5 Cupcake 2009\u5e744\u670830\u65e5 Android 1.6 Donuts 2009\u5e749\u670815\u65e5 Android 2.0/2.1 Eclair 2009\u5e7410\u670826\u65e5 Android 2.2 Froyo 2010\u5e745\u670812\u65e5 Android 2.3 Gingerbread 2010\u5e7412\u67086\u65e5 Android 3.x Honeycomb 2011\u5e742\u670822\u65e5 Android 4.0 Ice Cream Sandwich 2011\u5e7410\u670818\u65e5 Android 4.1/4.2/4.3 Jelly Bean 2012\u5e746\u670827\u65e5 Android 4.4 KitKat 2013\u5e7410\u670831\u65e5","title":"Appendix4.Android\u306e\u6b74\u53f2"},{"location":"02_appendix/appendix04/#appendix4android","text":"","title":"Appendix4.Android\u306e\u6b74\u53f2"},{"location":"02_appendix/appendix04/#android-10","text":"2008\u5e749\u670828\u65e5","title":"Android 1.0"},{"location":"02_appendix/appendix04/#android-11","text":"2009\u5e742\u67089\u65e5","title":"Android 1.1"},{"location":"02_appendix/appendix04/#android-15-cupcake","text":"2009\u5e744\u670830\u65e5","title":"Android 1.5 Cupcake"},{"location":"02_appendix/appendix04/#android-16-donuts","text":"2009\u5e749\u670815\u65e5","title":"Android  1.6 Donuts"},{"location":"02_appendix/appendix04/#android-2021-eclair","text":"2009\u5e7410\u670826\u65e5","title":"Android 2.0/2.1 Eclair"},{"location":"02_appendix/appendix04/#android-22-froyo","text":"2010\u5e745\u670812\u65e5","title":"Android 2.2 Froyo"},{"location":"02_appendix/appendix04/#android-23-gingerbread","text":"2010\u5e7412\u67086\u65e5","title":"Android 2.3 Gingerbread"},{"location":"02_appendix/appendix04/#android-3x-honeycomb","text":"2011\u5e742\u670822\u65e5","title":"Android 3.x Honeycomb"},{"location":"02_appendix/appendix04/#android-40-ice-cream-sandwich","text":"2011\u5e7410\u670818\u65e5","title":"Android 4.0 Ice Cream Sandwich"},{"location":"02_appendix/appendix04/#android-414243-jelly-bean","text":"2012\u5e746\u670827\u65e5","title":"Android 4.1/4.2/4.3 Jelly Bean"},{"location":"02_appendix/appendix04/#android-44-kitkat","text":"2013\u5e7410\u670831\u65e5","title":"Android 4.4 KitKat"},{"location":"02_appendix/appendix05/","text":"SourceTree\u3068Github\u306e\u9023\u643a SourceTree\u3092\u5b9f\u884c\u3057\u3066\u3001\u65b0\u898f\u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u9078\u629e\u3002URL\u304b\u3089\u30af\u30ed\u30fc\u30f3\u3092\u9078\u3076\u3002 \u9023\u643a\u3055\u305b\u305f\u3044\u30ec\u30dd\u30b8\u30c8\u30ea\u306eGithub\u30da\u30fc\u30b8\u306b\u3044\u3044\u3002\u53f3\u4e0b\u306eHTTPS clone URL\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3002 \u30b3\u30d4\u30fc\u3057\u305fClone URL\u3092\u3001\u30bd\u30fc\u30b9URL\u306b\u5165\u529b\u3001\u4fdd\u5b58\u5148\u306e\u30d1\u30b9\u306f\u4efb\u610f\u3067\u3001\u30af\u30ed\u30fc\u30f3\u3059\u308b\u3002 Github\u3068\u9023\u643a\u304c\u5b8c\u4e86\u3059\u308b\u3002","title":"SourceTree\u3068Github\u306e\u9023\u643a"},{"location":"02_appendix/appendix05/#sourcetreegithub","text":"SourceTree\u3092\u5b9f\u884c\u3057\u3066\u3001\u65b0\u898f\u30ec\u30dd\u30b8\u30c8\u30ea\u3092\u9078\u629e\u3002URL\u304b\u3089\u30af\u30ed\u30fc\u30f3\u3092\u9078\u3076\u3002 \u9023\u643a\u3055\u305b\u305f\u3044\u30ec\u30dd\u30b8\u30c8\u30ea\u306eGithub\u30da\u30fc\u30b8\u306b\u3044\u3044\u3002\u53f3\u4e0b\u306eHTTPS clone URL\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3002 \u30b3\u30d4\u30fc\u3057\u305fClone URL\u3092\u3001\u30bd\u30fc\u30b9URL\u306b\u5165\u529b\u3001\u4fdd\u5b58\u5148\u306e\u30d1\u30b9\u306f\u4efb\u610f\u3067\u3001\u30af\u30ed\u30fc\u30f3\u3059\u308b\u3002 Github\u3068\u9023\u643a\u304c\u5b8c\u4e86\u3059\u308b\u3002","title":"SourceTree\u3068Github\u306e\u9023\u643a"},{"location":"02_appendix/appendix06/","text":"Appendix6.Github\u306ePullrequest Repo\u3092Fork \u53c2\u52a0\u3057\u305f\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eRepo\u3092Fork\u3059\u308b\u3002 Fork\u3057\u305fRepo\u3092Clone Fork\u3057\u305fRepo\u3092Clone\u3059\u308b\u3002 \u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0 PULLREQUEST.md\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3059\u308b\u3002 \u30d5\u30a1\u30a4\u30eb\u3092Commit \u30d5\u30a1\u30a4\u30eb\u3092Commit\u3057\u3066\u3001Sync\u3059\u308b\u3002 Pullrequest\u3092\u767a\u884c\u3059\u308b \u3053\u308c\u3067\u3001\u672c\u5bb6\u306eRepo\u306bPullrequest\u3092\u3057\u305f\u4e8b\u306b\u306a\u308b\u3002","title":"Appendix6.Github\u306ePullrequest"},{"location":"02_appendix/appendix06/#appendix6githubpullrequest","text":"","title":"Appendix6.Github\u306ePullrequest"},{"location":"02_appendix/appendix06/#repofork","text":"\u53c2\u52a0\u3057\u305f\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eRepo\u3092Fork\u3059\u308b\u3002","title":"Repo\u3092Fork"},{"location":"02_appendix/appendix06/#forkrepoclone","text":"Fork\u3057\u305fRepo\u3092Clone\u3059\u308b\u3002","title":"Fork\u3057\u305fRepo\u3092Clone"},{"location":"02_appendix/appendix06/#_1","text":"PULLREQUEST.md\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3059\u308b\u3002","title":"\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0"},{"location":"02_appendix/appendix06/#commit","text":"\u30d5\u30a1\u30a4\u30eb\u3092Commit\u3057\u3066\u3001Sync\u3059\u308b\u3002","title":"\u30d5\u30a1\u30a4\u30eb\u3092Commit"},{"location":"02_appendix/appendix06/#pullrequest","text":"\u3053\u308c\u3067\u3001\u672c\u5bb6\u306eRepo\u306bPullrequest\u3092\u3057\u305f\u4e8b\u306b\u306a\u308b\u3002","title":"Pullrequest\u3092\u767a\u884c\u3059\u308b"},{"location":"02_appendix/appendix07/","text":"Appendix7.Github\u306e\u30b3\u30de\u30f3\u30c9\u3092\u3044\u3058\u308b Repo\u3092Clone 1 git clone https://github.com/akira-sasaki/GitTest.git 1 2 ls . .. GitTest 1 cd GitTest 1 2 ls -a . .. .git README.md TEST.md\u3092\u8ffd\u52a0 TEST.md\u3092\u4efb\u610f\u306e\u30a8\u30c7\u30a3\u30bf\u3067\u8ffd\u52a0\u3059\u308b\u3002 1 2 ls README.md TEST.md Add\u3059\u308b Current\u30d5\u30a9\u30eb\u30c0\u306e\u30d5\u30a1\u30a4\u30eb\u3092add\u3059\u308b\u3002 1 git add . Status\u3067\u78ba\u8a8d\u3059\u308b\u3002 1 2 3 4 5 6 7 git status On branch master Your branch is up - to - date with 'origin/master' . Changes to be committed : ( use \"git reset HEAD <file>...\" to unstage ) new file : TEST . md new file: \u306bTEST.md\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308c\u3070\u3001add\u3067\u304d\u3066\u3044\u308b\u3002 Commit\u3059\u308b 1 git commit -m \"add TEST.md\" Push\u3059\u308b 1 git push -u origin master","title":"Appendix7.Github\u306e\u30b3\u30de\u30f3\u30c9\u3092\u3044\u3058\u308b"},{"location":"02_appendix/appendix07/#appendix7github","text":"","title":"Appendix7.Github\u306e\u30b3\u30de\u30f3\u30c9\u3092\u3044\u3058\u308b"},{"location":"02_appendix/appendix07/#repoclone","text":"1 git clone https://github.com/akira-sasaki/GitTest.git 1 2 ls . .. GitTest 1 cd GitTest 1 2 ls -a . .. .git README.md","title":"Repo\u3092Clone"},{"location":"02_appendix/appendix07/#testmd","text":"TEST.md\u3092\u4efb\u610f\u306e\u30a8\u30c7\u30a3\u30bf\u3067\u8ffd\u52a0\u3059\u308b\u3002 1 2 ls README.md TEST.md","title":"TEST.md\u3092\u8ffd\u52a0"},{"location":"02_appendix/appendix07/#add","text":"Current\u30d5\u30a9\u30eb\u30c0\u306e\u30d5\u30a1\u30a4\u30eb\u3092add\u3059\u308b\u3002 1 git add . Status\u3067\u78ba\u8a8d\u3059\u308b\u3002 1 2 3 4 5 6 7 git status On branch master Your branch is up - to - date with 'origin/master' . Changes to be committed : ( use \"git reset HEAD <file>...\" to unstage ) new file : TEST . md new file: \u306bTEST.md\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308c\u3070\u3001add\u3067\u304d\u3066\u3044\u308b\u3002","title":"Add\u3059\u308b"},{"location":"02_appendix/appendix07/#commit","text":"1 git commit -m \"add TEST.md\"","title":"Commit\u3059\u308b"},{"location":"02_appendix/appendix07/#push","text":"1 git push -u origin master","title":"Push\u3059\u308b"},{"location":"03_maps/maps/","text":"Google Maps MapActivity\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u65b0\u898f\u4f5c\u6210\u3002 manifets/AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.gclue.loratest\" > <uses-permission android:name= \"android.permission.ACCESS_FINE_LOCATION\" /> <uses-permission android:name= \"android.permission.ACCESS_COARSE_LOCATION\" /> <uses-feature android:name= \"android.hardware.location.gps\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:roundIcon= \"@mipmap/ic_launcher_round\" android:supportsRtl= \"true\" android:theme= \"@style/AppTheme\" > <meta-data android:name= \"com.google.android.geo.API_KEY\" android:value= \"@string/google_maps_key\" /> <activity android:name= \".MapsActivity\" android:label= \"@string/title_activity_maps\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> res/values/google_maps_api.xml Xml 1 2 3 <resources> <string name= \"google_maps_key\" templateMergeStrategy= \"preserve\" translatable= \"false\" > \u53d6\u5f97\u3057\u305fKey\u3092\u8a18\u8f09 </string> </resources> Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 package io.gclue.loratest ; import android.Manifest ; import android.annotation.SuppressLint ; import android.content.pm.PackageManager ; import android.location.Location ; import android.location.LocationListener ; import android.location.LocationManager ; import android.os.Build ; import android.support.annotation.NonNull ; import android.support.v4.app.ActivityCompat ; import android.support.v4.app.FragmentActivity ; import android.os.Bundle ; import android.support.v4.content.ContextCompat ; import android.util.Log ; import com.google.android.gms.maps.CameraUpdateFactory ; import com.google.android.gms.maps.GoogleMap ; import com.google.android.gms.maps.OnMapReadyCallback ; import com.google.android.gms.maps.SupportMapFragment ; import com.google.android.gms.maps.model.LatLng ; import com.google.android.gms.maps.model.MarkerOptions ; public class MapsActivity extends FragmentActivity implements OnMapReadyCallback { private GoogleMap mMap ; private LocationManager locationManager ; private LocationListener locationListener ; private static final String TAG = \"MAP\" ; @SuppressLint ( \"MissingPermission\" ) @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_maps ); // Obtain the SupportMapFragment and get notified when the map is ready to be used. SupportMapFragment mapFragment = ( SupportMapFragment ) getSupportFragmentManager () . findFragmentById ( R . id . map ); mapFragment . getMapAsync ( this ); locationManager = ( LocationManager ) this . getSystemService ( LOCATION_SERVICE ); locationListener = new LocationListener () { @Override public void onLocationChanged ( Location location ) { Log . d ( TAG , location . toString ()); // \u53d6\u5f97\u3057\u305f\u4f4d\u7f6e\u60c5\u5831\u306bMap\u3092\u79fb\u52d5 LatLng now = new LatLng ( location . getLatitude (), location . getLongitude ()); mMap . moveCamera ( CameraUpdateFactory . newLatLngZoom ( now , 16 )); } @Override public void onStatusChanged ( String provider , int status , Bundle extras ) { Log . d ( TAG , \"onStatusChanged\" ); } @Override public void onProviderEnabled ( String provider ) { Log . d ( TAG , \"onProviderEnabled\" ); } @Override public void onProviderDisabled ( String provider ) { Log . d ( \"TEST:\" , \"onProviderDisabled\" ); } }; if ( Build . VERSION . SDK_INT < 23 ) { locationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 0 , 0 , locationListener ); } else { if ( ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_FINE_LOCATION ) != PackageManager . PERMISSION_GRANTED && ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_COARSE_LOCATION ) != PackageManager . PERMISSION_GRANTED ) { // Permission\u304c\u306a\u3044\u5834\u5408\u306f\u3001Permission\u3092\u8981\u6c42\u3059\u308b ActivityCompat . requestPermissions ( this , new String [] { Manifest . permission . ACCESS_FINE_LOCATION }, 1 ); } else { // GPS\u3068NETWORK\u306b\u3088\u308b\u4f4d\u7f6e\u60c5\u5831\u53d6\u5f97\u958b\u59cb locationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 0 , 0 , locationListener ); locationManager . requestLocationUpdates ( LocationManager . NETWORK_PROVIDER , 0 , 0 , locationListener ); } } } @Override public void onRequestPermissionsResult ( int requestCode , @NonNull String [] permissions , @NonNull int [] grantResults ) { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ); if ( grantResults . length > 0 && grantResults [ 0 ] == PackageManager . PERMISSION_GRANTED ) { if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_FINE_LOCATION ) == PackageManager . PERMISSION_GRANTED ){ locationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 0 , 0 , locationListener ); } } } /** * Map\u306e\u7528\u610f\u304c\u3067\u304d\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u308b */ @Override public void onMapReady ( GoogleMap googleMap ) { mMap = googleMap ; LatLng aizu = new LatLng ( 37.521359 , 139.938603 ); mMap . moveCamera ( CameraUpdateFactory . newLatLngZoom ( aizu , 16 )); } }","title":"Google Maps"},{"location":"03_maps/maps/#google-maps","text":"MapActivity\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u65b0\u898f\u4f5c\u6210\u3002 manifets/AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.gclue.loratest\" > <uses-permission android:name= \"android.permission.ACCESS_FINE_LOCATION\" /> <uses-permission android:name= \"android.permission.ACCESS_COARSE_LOCATION\" /> <uses-feature android:name= \"android.hardware.location.gps\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:roundIcon= \"@mipmap/ic_launcher_round\" android:supportsRtl= \"true\" android:theme= \"@style/AppTheme\" > <meta-data android:name= \"com.google.android.geo.API_KEY\" android:value= \"@string/google_maps_key\" /> <activity android:name= \".MapsActivity\" android:label= \"@string/title_activity_maps\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> res/values/google_maps_api.xml Xml 1 2 3 <resources> <string name= \"google_maps_key\" templateMergeStrategy= \"preserve\" translatable= \"false\" > \u53d6\u5f97\u3057\u305fKey\u3092\u8a18\u8f09 </string> </resources> Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 package io.gclue.loratest ; import android.Manifest ; import android.annotation.SuppressLint ; import android.content.pm.PackageManager ; import android.location.Location ; import android.location.LocationListener ; import android.location.LocationManager ; import android.os.Build ; import android.support.annotation.NonNull ; import android.support.v4.app.ActivityCompat ; import android.support.v4.app.FragmentActivity ; import android.os.Bundle ; import android.support.v4.content.ContextCompat ; import android.util.Log ; import com.google.android.gms.maps.CameraUpdateFactory ; import com.google.android.gms.maps.GoogleMap ; import com.google.android.gms.maps.OnMapReadyCallback ; import com.google.android.gms.maps.SupportMapFragment ; import com.google.android.gms.maps.model.LatLng ; import com.google.android.gms.maps.model.MarkerOptions ; public class MapsActivity extends FragmentActivity implements OnMapReadyCallback { private GoogleMap mMap ; private LocationManager locationManager ; private LocationListener locationListener ; private static final String TAG = \"MAP\" ; @SuppressLint ( \"MissingPermission\" ) @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_maps ); // Obtain the SupportMapFragment and get notified when the map is ready to be used. SupportMapFragment mapFragment = ( SupportMapFragment ) getSupportFragmentManager () . findFragmentById ( R . id . map ); mapFragment . getMapAsync ( this ); locationManager = ( LocationManager ) this . getSystemService ( LOCATION_SERVICE ); locationListener = new LocationListener () { @Override public void onLocationChanged ( Location location ) { Log . d ( TAG , location . toString ()); // \u53d6\u5f97\u3057\u305f\u4f4d\u7f6e\u60c5\u5831\u306bMap\u3092\u79fb\u52d5 LatLng now = new LatLng ( location . getLatitude (), location . getLongitude ()); mMap . moveCamera ( CameraUpdateFactory . newLatLngZoom ( now , 16 )); } @Override public void onStatusChanged ( String provider , int status , Bundle extras ) { Log . d ( TAG , \"onStatusChanged\" ); } @Override public void onProviderEnabled ( String provider ) { Log . d ( TAG , \"onProviderEnabled\" ); } @Override public void onProviderDisabled ( String provider ) { Log . d ( \"TEST:\" , \"onProviderDisabled\" ); } }; if ( Build . VERSION . SDK_INT < 23 ) { locationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 0 , 0 , locationListener ); } else { if ( ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_FINE_LOCATION ) != PackageManager . PERMISSION_GRANTED && ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_COARSE_LOCATION ) != PackageManager . PERMISSION_GRANTED ) { // Permission\u304c\u306a\u3044\u5834\u5408\u306f\u3001Permission\u3092\u8981\u6c42\u3059\u308b ActivityCompat . requestPermissions ( this , new String [] { Manifest . permission . ACCESS_FINE_LOCATION }, 1 ); } else { // GPS\u3068NETWORK\u306b\u3088\u308b\u4f4d\u7f6e\u60c5\u5831\u53d6\u5f97\u958b\u59cb locationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 0 , 0 , locationListener ); locationManager . requestLocationUpdates ( LocationManager . NETWORK_PROVIDER , 0 , 0 , locationListener ); } } } @Override public void onRequestPermissionsResult ( int requestCode , @NonNull String [] permissions , @NonNull int [] grantResults ) { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ); if ( grantResults . length > 0 && grantResults [ 0 ] == PackageManager . PERMISSION_GRANTED ) { if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_FINE_LOCATION ) == PackageManager . PERMISSION_GRANTED ){ locationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 0 , 0 , locationListener ); } } } /** * Map\u306e\u7528\u610f\u304c\u3067\u304d\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u308b */ @Override public void onMapReady ( GoogleMap googleMap ) { mMap = googleMap ; LatLng aizu = new LatLng ( 37.521359 , 139.938603 ); mMap . moveCamera ( CameraUpdateFactory . newLatLngZoom ( aizu , 16 )); } }","title":"Google Maps"},{"location":"03_maps/maps00/","text":"Google Maps Google Maps\u7528\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210 API Key\u306e\u53d6\u5f97 Maps\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba Maps\u306e\u88c5\u98fe","title":"Google Maps"},{"location":"03_maps/maps00/#google-maps","text":"Google Maps\u7528\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210 API Key\u306e\u53d6\u5f97 Maps\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba Maps\u306e\u88c5\u98fe","title":"Google Maps"},{"location":"03_maps/maps01/","text":"Google Maps\u7528\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210 \u751f\u6210\u3055\u308c\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9 MapActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 package utsunomiya.gclue.com.mapsample ; import android.support.v4.app.FragmentActivity ; import android.os.Bundle ; import com.google.android.gms.maps.GoogleMap ; import com.google.android.gms.maps.SupportMapFragment ; import com.google.android.gms.maps.model.LatLng ; import com.google.android.gms.maps.model.MarkerOptions ; public class MapsActivity extends FragmentActivity { private GoogleMap mMap ; // Might be null if Google Play services APK is not available. @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_maps ); setUpMapIfNeeded (); } @Override protected void onResume () { super . onResume (); setUpMapIfNeeded (); } /** * Sets up the map if it is possible to do so (i.e., the Google Play services APK is correctly * installed) and the map has not already been instantiated.. This will ensure that we only ever * call {@link #setUpMap()} once when {@link #mMap} is not null. * <p/> * If it isn't installed {@link SupportMapFragment} (and * {@link com.google.android.gms.maps.MapView MapView}) will show a prompt for the user to * install/update the Google Play services APK on their device. * <p/> * A user can return to this FragmentActivity after following the prompt and correctly * installing/updating/enabling the Google Play services. Since the FragmentActivity may not * have been completely destroyed during this process (it is likely that it would only be * stopped or paused), {@link #onCreate(Bundle)} may not be called again so we should call this * method in {@link #onResume()} to guarantee that it will be called. */ private void setUpMapIfNeeded () { // Do a null check to confirm that we have not already instantiated the map. if ( mMap == null ) { // Try to obtain the map from the SupportMapFragment. mMap = (( SupportMapFragment ) getSupportFragmentManager (). findFragmentById ( R . id . map )) . getMap (); // Check if we were successful in obtaining the map. if ( mMap != null ) { setUpMap (); } } } /** * This is where we can add markers or lines, add listeners or move the camera. In this case, we * just add a marker near Africa. * <p/> * This should only be called once and when we are sure that {@link #mMap} is not null. */ private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); } } activity_maps.xml 1 2 3 4 <fragment xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:id= \"@+id/map\" tools:context= \".MapsActivity\" android:name= \"com.google.android.gms.maps.SupportMapFragment\" /> AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.mapsample\" > <uses-permission android:name= \"android.permission.INTERNET\" /> <uses-permission android:name= \"android.permission.ACCESS_NETWORK_STATE\" /> <uses-permission android:name= \"android.permission.WRITE_EXTERNAL_STORAGE\" /> <uses-permission android:name= \"com.google.android.providers.gsf.permission.READ_GSERVICES\" /> <!-- The ACCESS_COARSE/FINE_LOCATION permissions are not required to use Google Maps Android API v2, but are recommended. --> <uses-permission android:name= \"android.permission.ACCESS_COARSE_LOCATION\" /> <uses-permission android:name= \"android.permission.ACCESS_FINE_LOCATION\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <meta-data android:name= \"com.google.android.gms.version\" android:value= \"@integer/google_play_services_version\" /> <meta-data android:name= \"com.google.android.maps.v2.API_KEY\" android:value= \"@string/google_maps_key\" /> <activity android:name= \".MapsActivity\" android:label= \"@string/title_activity_maps\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"Google Maps\u7528\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210"},{"location":"03_maps/maps01/#google-maps","text":"","title":"Google Maps\u7528\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210"},{"location":"03_maps/maps01/#_1","text":"","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210"},{"location":"03_maps/maps01/#_2","text":"","title":"\u751f\u6210\u3055\u308c\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9"},{"location":"03_maps/maps01/#mapactivityjava","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 package utsunomiya.gclue.com.mapsample ; import android.support.v4.app.FragmentActivity ; import android.os.Bundle ; import com.google.android.gms.maps.GoogleMap ; import com.google.android.gms.maps.SupportMapFragment ; import com.google.android.gms.maps.model.LatLng ; import com.google.android.gms.maps.model.MarkerOptions ; public class MapsActivity extends FragmentActivity { private GoogleMap mMap ; // Might be null if Google Play services APK is not available. @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_maps ); setUpMapIfNeeded (); } @Override protected void onResume () { super . onResume (); setUpMapIfNeeded (); } /** * Sets up the map if it is possible to do so (i.e., the Google Play services APK is correctly * installed) and the map has not already been instantiated.. This will ensure that we only ever * call {@link #setUpMap()} once when {@link #mMap} is not null. * <p/> * If it isn't installed {@link SupportMapFragment} (and * {@link com.google.android.gms.maps.MapView MapView}) will show a prompt for the user to * install/update the Google Play services APK on their device. * <p/> * A user can return to this FragmentActivity after following the prompt and correctly * installing/updating/enabling the Google Play services. Since the FragmentActivity may not * have been completely destroyed during this process (it is likely that it would only be * stopped or paused), {@link #onCreate(Bundle)} may not be called again so we should call this * method in {@link #onResume()} to guarantee that it will be called. */ private void setUpMapIfNeeded () { // Do a null check to confirm that we have not already instantiated the map. if ( mMap == null ) { // Try to obtain the map from the SupportMapFragment. mMap = (( SupportMapFragment ) getSupportFragmentManager (). findFragmentById ( R . id . map )) . getMap (); // Check if we were successful in obtaining the map. if ( mMap != null ) { setUpMap (); } } } /** * This is where we can add markers or lines, add listeners or move the camera. In this case, we * just add a marker near Africa. * <p/> * This should only be called once and when we are sure that {@link #mMap} is not null. */ private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); } }","title":"MapActivity.java"},{"location":"03_maps/maps01/#activity_mapsxml","text":"1 2 3 4 <fragment xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:id= \"@+id/map\" tools:context= \".MapsActivity\" android:name= \"com.google.android.gms.maps.SupportMapFragment\" />","title":"activity_maps.xml"},{"location":"03_maps/maps01/#androidmanifestxml","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.mapsample\" > <uses-permission android:name= \"android.permission.INTERNET\" /> <uses-permission android:name= \"android.permission.ACCESS_NETWORK_STATE\" /> <uses-permission android:name= \"android.permission.WRITE_EXTERNAL_STORAGE\" /> <uses-permission android:name= \"com.google.android.providers.gsf.permission.READ_GSERVICES\" /> <!-- The ACCESS_COARSE/FINE_LOCATION permissions are not required to use Google Maps Android API v2, but are recommended. --> <uses-permission android:name= \"android.permission.ACCESS_COARSE_LOCATION\" /> <uses-permission android:name= \"android.permission.ACCESS_FINE_LOCATION\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <meta-data android:name= \"com.google.android.gms.version\" android:value= \"@integer/google_play_services_version\" /> <meta-data android:name= \"com.google.android.maps.v2.API_KEY\" android:value= \"@string/google_maps_key\" /> <activity android:name= \".MapsActivity\" android:label= \"@string/title_activity_maps\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"AndroidManifest.xml"},{"location":"03_maps/maps02/","text":"API Key\u306e\u53d6\u5f97 \u8a3c\u660e\u66f8\u306e\u30d5\u30a3\u30f3\u30ac\u30d7\u30ea\u30f3\u30c8\u306e\u53d6\u5f97 \u307e\u305a\u3001Googke Maps API Key\u3092\u767a\u884c\u3059\u308b\u305f\u3081\u306b\u3001\u958b\u767a\u3067\u4f7f\u7528\u3057\u3066\u3044\u308bMac\u306e\u30d5\u30a3\u30f3\u30ac\u30d7\u30ea\u30f3\u30c8\u306e\u53d6\u5f97\u3092\u304a\u3053\u306a\u3044\u307e\u3059\u3002 1 $ keytool -list -v -keystore ~/.android/debug.keystore Google API Console\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210 https://code.google.com/apis/console/?pli=1 \u306b\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3059\u3002 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002","title":"API Key\u306e\u53d6\u5f97"},{"location":"03_maps/maps02/#api-key","text":"","title":"API Key\u306e\u53d6\u5f97"},{"location":"03_maps/maps02/#_1","text":"\u307e\u305a\u3001Googke Maps API Key\u3092\u767a\u884c\u3059\u308b\u305f\u3081\u306b\u3001\u958b\u767a\u3067\u4f7f\u7528\u3057\u3066\u3044\u308bMac\u306e\u30d5\u30a3\u30f3\u30ac\u30d7\u30ea\u30f3\u30c8\u306e\u53d6\u5f97\u3092\u304a\u3053\u306a\u3044\u307e\u3059\u3002 1 $ keytool -list -v -keystore ~/.android/debug.keystore","title":"\u8a3c\u660e\u66f8\u306e\u30d5\u30a3\u30f3\u30ac\u30d7\u30ea\u30f3\u30c8\u306e\u53d6\u5f97"},{"location":"03_maps/maps02/#google-api-console","text":"https://code.google.com/apis/console/?pli=1 \u306b\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3059\u3002 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002","title":"Google API Console\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210"},{"location":"03_maps/maps03/","text":"Maps\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba Maps\u306b\u30ad\u30fc\u3092\u57cb\u3081\u8fbc\u3080 AndroidManifest.xml\u306b\u30ad\u30fc\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002 \u30ad\u30fc\u306e\u5b9f\u614b\u306f\u3001res/values/google_maps_api.xml\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u3092\u5b9f\u884c\u3059\u308b\u3068Google Maps\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 \u5b87\u90fd\u5bae\u5927\u5b66\u306b\u5ea7\u6a19\u3092\u79fb\u52d5 MapsActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 package utsunomiya.gclue.com.mapsample ; import android.support.v4.app.FragmentActivity ; import android.os.Bundle ; import com.google.android.gms.maps.CameraUpdate ; import com.google.android.gms.maps.CameraUpdateFactory ; import com.google.android.gms.maps.GoogleMap ; import com.google.android.gms.maps.SupportMapFragment ; import com.google.android.gms.maps.model.LatLng ; import com.google.android.gms.maps.model.MarkerOptions ; public class MapsActivity extends FragmentActivity { private GoogleMap mMap ; // Might be null if Google Play services APK is not available. @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_maps ); setUpMapIfNeeded (); } @Override protected void onResume () { super . onResume (); setUpMapIfNeeded (); } /** * Sets up the map if it is possible to do so (i.e., the Google Play services APK is correctly * installed) and the map has not already been instantiated.. This will ensure that we only ever * call {@link #setUpMap()} once when {@link #mMap} is not null. * <p/> * If it isn't installed {@link SupportMapFragment} (and * {@link com.google.android.gms.maps.MapView MapView}) will show a prompt for the user to * install/update the Google Play services APK on their device. * <p/> * A user can return to this FragmentActivity after following the prompt and correctly * installing/updating/enabling the Google Play services. Since the FragmentActivity may not * have been completely destroyed during this process (it is likely that it would only be * stopped or paused), {@link #onCreate(Bundle)} may not be called again so we should call this * method in {@link #onResume()} to guarantee that it will be called. */ private void setUpMapIfNeeded () { // Do a null check to confirm that we have not already instantiated the map. if ( mMap == null ) { // Try to obtain the map from the SupportMapFragment. mMap = (( SupportMapFragment ) getSupportFragmentManager (). findFragmentById ( R . id . map )) . getMap (); // Check if we were successful in obtaining the map. if ( mMap != null ) { setUpMap (); } } } /** * This is where we can add markers or lines, add listeners or move the camera. In this case, we * just add a marker near Africa. * <p/> * This should only be called once and when we are sure that {@link #mMap} is not null. */ private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng mLatLon = new LatLng ( 36.549792 , 139.929513 ); CameraUpdate mCameraUpdate = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( mCameraUpdate ); } } \u5b87\u90fd\u5bae\u5927\u5b66\u306e\u5ea7\u6a19\u306f\u3001Google Map\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002 setUpMap()\u306e\u4e2d\u3092\u6539\u826f\u3059\u308b 1 2 3 LatLng mLatLon = new LatLng ( 36.549792 , 139.929513 ); CameraUpdate mCameraUpdate = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( mCameraUpdate ); Google Map\u306e\u4e2d\u5fc3\u70b9\u306e\u5ea7\u6a19\u3092\u8868\u793a maps_activity.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 <fragment xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:id= \"@+id/map\" tools:context= \".MapsActivity\" android:name= \"com.google.android.gms.maps.SupportMapFragment\" > <Button android:id= \"@+id/Button01\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Lat/Lon\" > </Button> </fragment> MapsActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 package utsunomiya.gclue.com.mapsample ; import android.support.v4.app.FragmentActivity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.Toast ; import com.google.android.gms.maps.CameraUpdate ; import com.google.android.gms.maps.CameraUpdateFactory ; import com.google.android.gms.maps.GoogleMap ; import com.google.android.gms.maps.SupportMapFragment ; import com.google.android.gms.maps.model.LatLng ; import com.google.android.gms.maps.model.MarkerOptions ; public class MapsActivity extends FragmentActivity implements View . OnClickListener { private GoogleMap mMap ; // Might be null if Google Play services APK is not available. /** \u7def\u5ea6\u3001\u7d4c\u5ea6\u3092\u8868\u793a\u3059\u308b\u30dc\u30bf\u30f3. */ private Button mButton01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_maps ); setUpMapIfNeeded (); // \u7def\u5ea6\u30fb\u7d4c\u5ea6\u3092\u8868\u793a\u3059\u308b\u30dc\u30bf\u30f3\u3002\u62bc\u3059\u3068\u7def\u5ea6\u7d4c\u5ea6\u306eToast\u3092\u8868\u793a\u3059\u308b mButton01 = ( Button ) findViewById ( R . id . Button01 ); mButton01 . setOnClickListener ( this ); } @Override protected void onResume () { super . onResume (); setUpMapIfNeeded (); } /** * Sets up the map if it is possible to do so (i.e., the Google Play services APK is correctly * installed) and the map has not already been instantiated.. This will ensure that we only ever * call {@link #setUpMap()} once when {@link #mMap} is not null. * <p/> * If it isn't installed {@link SupportMapFragment} (and * {@link com.google.android.gms.maps.MapView MapView}) will show a prompt for the user to * install/update the Google Play services APK on their device. * <p/> * A user can return to this FragmentActivity after following the prompt and correctly * installing/updating/enabling the Google Play services. Since the FragmentActivity may not * have been completely destroyed during this process (it is likely that it would only be * stopped or paused), {@link #onCreate(Bundle)} may not be called again so we should call this * method in {@link #onResume()} to guarantee that it will be called. */ private void setUpMapIfNeeded () { // Do a null check to confirm that we have not already instantiated the map. if ( mMap == null ) { // Try to obtain the map from the SupportMapFragment. mMap = (( SupportMapFragment ) getSupportFragmentManager (). findFragmentById ( R . id . map )) . getMap (); // Check if we were successful in obtaining the map. if ( mMap != null ) { setUpMap (); } } } /** * This is where we can add markers or lines, add listeners or move the camera. In this case, we * just add a marker near Africa. * <p/> * This should only be called once and when we are sure that {@link #mMap} is not null. */ private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng mLatLon = new LatLng ( 36.549792 , 139.929513 ); CameraUpdate cu = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( cu ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { LatLng latLng = mMap . getCameraPosition (). target ; // \u5730\u56f3\u306e\u4e2d\u5fc3\u70b9\u306e\u7def\u5ea6\u30fb\u7d4c\u5ea6\u3092\u53d6\u5f97 double lat = latLng . latitude ; double lon = latLng . longitude ; Toast . makeText ( this , \"lat:\" + lat + \" lon:\" + lon , Toast . LENGTH_LONG ). show (); } } } \u5909\u6570\u8ffd\u52a0 1 2 /** \u7def\u5ea6\u3001\u7d4c\u5ea6\u3092\u8868\u793a\u3059\u308b\u30dc\u30bf\u30f3. */ private Button mButton01 ; onCreate()\u8ffd\u8a18 1 2 3 4 5 6 7 8 9 10 @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_maps ); setUpMapIfNeeded (); // \u7def\u5ea6\u30fb\u7d4c\u5ea6\u3092\u8868\u793a\u3059\u308b\u30dc\u30bf\u30f3\u3002\u62bc\u3059\u3068\u7def\u5ea6\u7d4c\u5ea6\u306eToast\u3092\u8868\u793a\u3059\u308b mButton01 = ( Button ) findViewById ( R . id . Button01 ); mButton01 . setOnClickListener ( this ); } onClick(View v)\u8ffd\u52a0 1 2 3 4 5 6 7 8 9 10 @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { LatLng latLng = mMap . getCameraPosition (). target ; // \u5730\u56f3\u306e\u4e2d\u5fc3\u70b9\u306e\u7def\u5ea6\u30fb\u7d4c\u5ea6\u3092\u53d6\u5f97 double lat = latLng . latitude ; double lon = latLng . longitude ; Toast . makeText ( this , \"lat:\" + lat + \" lon:\" + lon , Toast . LENGTH_LONG ). show (); } } \u5730\u56f3\u306e\u30bf\u30a4\u30d7 1 2 3 4 5 6 7 8 9 10 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng mLatLon = new LatLng ( 36.549792 , 139.929513 ); CameraUpdate cu = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( cu ); mMap . setMapType ( GoogleMap . MAP_TYPE_HYBRID ); } 1 2 3 4 5 6 7 8 9 10 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng mLatLon = new LatLng ( 36.549792 , 139.929513 ); CameraUpdate cu = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( cu ); mMap . setMapType ( GoogleMap . MAP_TYPE_SATELLITE ); } 1 2 3 4 5 6 7 8 9 10 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng mLatLon = new LatLng ( 36 . 549792 , 139 . 929513 ); CameraUpdate cu = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( cu ); mMap . setMapType ( GoogleMap . MAP_TYPE_TERRAIN ); } \u73fe\u5728\u4f4d\u7f6e\u30dc\u30bf\u30f3\u3092\u8868\u793a 1 2 3 4 5 6 7 8 9 10 11 12 13 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng mLatLon = new LatLng ( 36.549792 , 139.929513 ); CameraUpdate cu = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( cu ); mMap . setMapType ( GoogleMap . MAP_TYPE_TERRAIN ); mMap . setMyLocationEnabled ( true ); }","title":"Maps\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba"},{"location":"03_maps/maps03/#maps","text":"","title":"Maps\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba"},{"location":"03_maps/maps03/#maps_1","text":"AndroidManifest.xml\u306b\u30ad\u30fc\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002 \u30ad\u30fc\u306e\u5b9f\u614b\u306f\u3001res/values/google_maps_api.xml\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u3092\u5b9f\u884c\u3059\u308b\u3068Google Maps\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002","title":"Maps\u306b\u30ad\u30fc\u3092\u57cb\u3081\u8fbc\u3080"},{"location":"03_maps/maps03/#_1","text":"MapsActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 package utsunomiya.gclue.com.mapsample ; import android.support.v4.app.FragmentActivity ; import android.os.Bundle ; import com.google.android.gms.maps.CameraUpdate ; import com.google.android.gms.maps.CameraUpdateFactory ; import com.google.android.gms.maps.GoogleMap ; import com.google.android.gms.maps.SupportMapFragment ; import com.google.android.gms.maps.model.LatLng ; import com.google.android.gms.maps.model.MarkerOptions ; public class MapsActivity extends FragmentActivity { private GoogleMap mMap ; // Might be null if Google Play services APK is not available. @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_maps ); setUpMapIfNeeded (); } @Override protected void onResume () { super . onResume (); setUpMapIfNeeded (); } /** * Sets up the map if it is possible to do so (i.e., the Google Play services APK is correctly * installed) and the map has not already been instantiated.. This will ensure that we only ever * call {@link #setUpMap()} once when {@link #mMap} is not null. * <p/> * If it isn't installed {@link SupportMapFragment} (and * {@link com.google.android.gms.maps.MapView MapView}) will show a prompt for the user to * install/update the Google Play services APK on their device. * <p/> * A user can return to this FragmentActivity after following the prompt and correctly * installing/updating/enabling the Google Play services. Since the FragmentActivity may not * have been completely destroyed during this process (it is likely that it would only be * stopped or paused), {@link #onCreate(Bundle)} may not be called again so we should call this * method in {@link #onResume()} to guarantee that it will be called. */ private void setUpMapIfNeeded () { // Do a null check to confirm that we have not already instantiated the map. if ( mMap == null ) { // Try to obtain the map from the SupportMapFragment. mMap = (( SupportMapFragment ) getSupportFragmentManager (). findFragmentById ( R . id . map )) . getMap (); // Check if we were successful in obtaining the map. if ( mMap != null ) { setUpMap (); } } } /** * This is where we can add markers or lines, add listeners or move the camera. In this case, we * just add a marker near Africa. * <p/> * This should only be called once and when we are sure that {@link #mMap} is not null. */ private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng mLatLon = new LatLng ( 36.549792 , 139.929513 ); CameraUpdate mCameraUpdate = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( mCameraUpdate ); } } \u5b87\u90fd\u5bae\u5927\u5b66\u306e\u5ea7\u6a19\u306f\u3001Google Map\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002 setUpMap()\u306e\u4e2d\u3092\u6539\u826f\u3059\u308b 1 2 3 LatLng mLatLon = new LatLng ( 36.549792 , 139.929513 ); CameraUpdate mCameraUpdate = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( mCameraUpdate );","title":"\u5b87\u90fd\u5bae\u5927\u5b66\u306b\u5ea7\u6a19\u3092\u79fb\u52d5"},{"location":"03_maps/maps03/#google-map","text":"maps_activity.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 <fragment xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:id= \"@+id/map\" tools:context= \".MapsActivity\" android:name= \"com.google.android.gms.maps.SupportMapFragment\" > <Button android:id= \"@+id/Button01\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Lat/Lon\" > </Button> </fragment> MapsActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 package utsunomiya.gclue.com.mapsample ; import android.support.v4.app.FragmentActivity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.Toast ; import com.google.android.gms.maps.CameraUpdate ; import com.google.android.gms.maps.CameraUpdateFactory ; import com.google.android.gms.maps.GoogleMap ; import com.google.android.gms.maps.SupportMapFragment ; import com.google.android.gms.maps.model.LatLng ; import com.google.android.gms.maps.model.MarkerOptions ; public class MapsActivity extends FragmentActivity implements View . OnClickListener { private GoogleMap mMap ; // Might be null if Google Play services APK is not available. /** \u7def\u5ea6\u3001\u7d4c\u5ea6\u3092\u8868\u793a\u3059\u308b\u30dc\u30bf\u30f3. */ private Button mButton01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_maps ); setUpMapIfNeeded (); // \u7def\u5ea6\u30fb\u7d4c\u5ea6\u3092\u8868\u793a\u3059\u308b\u30dc\u30bf\u30f3\u3002\u62bc\u3059\u3068\u7def\u5ea6\u7d4c\u5ea6\u306eToast\u3092\u8868\u793a\u3059\u308b mButton01 = ( Button ) findViewById ( R . id . Button01 ); mButton01 . setOnClickListener ( this ); } @Override protected void onResume () { super . onResume (); setUpMapIfNeeded (); } /** * Sets up the map if it is possible to do so (i.e., the Google Play services APK is correctly * installed) and the map has not already been instantiated.. This will ensure that we only ever * call {@link #setUpMap()} once when {@link #mMap} is not null. * <p/> * If it isn't installed {@link SupportMapFragment} (and * {@link com.google.android.gms.maps.MapView MapView}) will show a prompt for the user to * install/update the Google Play services APK on their device. * <p/> * A user can return to this FragmentActivity after following the prompt and correctly * installing/updating/enabling the Google Play services. Since the FragmentActivity may not * have been completely destroyed during this process (it is likely that it would only be * stopped or paused), {@link #onCreate(Bundle)} may not be called again so we should call this * method in {@link #onResume()} to guarantee that it will be called. */ private void setUpMapIfNeeded () { // Do a null check to confirm that we have not already instantiated the map. if ( mMap == null ) { // Try to obtain the map from the SupportMapFragment. mMap = (( SupportMapFragment ) getSupportFragmentManager (). findFragmentById ( R . id . map )) . getMap (); // Check if we were successful in obtaining the map. if ( mMap != null ) { setUpMap (); } } } /** * This is where we can add markers or lines, add listeners or move the camera. In this case, we * just add a marker near Africa. * <p/> * This should only be called once and when we are sure that {@link #mMap} is not null. */ private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng mLatLon = new LatLng ( 36.549792 , 139.929513 ); CameraUpdate cu = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( cu ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { LatLng latLng = mMap . getCameraPosition (). target ; // \u5730\u56f3\u306e\u4e2d\u5fc3\u70b9\u306e\u7def\u5ea6\u30fb\u7d4c\u5ea6\u3092\u53d6\u5f97 double lat = latLng . latitude ; double lon = latLng . longitude ; Toast . makeText ( this , \"lat:\" + lat + \" lon:\" + lon , Toast . LENGTH_LONG ). show (); } } } \u5909\u6570\u8ffd\u52a0 1 2 /** \u7def\u5ea6\u3001\u7d4c\u5ea6\u3092\u8868\u793a\u3059\u308b\u30dc\u30bf\u30f3. */ private Button mButton01 ; onCreate()\u8ffd\u8a18 1 2 3 4 5 6 7 8 9 10 @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_maps ); setUpMapIfNeeded (); // \u7def\u5ea6\u30fb\u7d4c\u5ea6\u3092\u8868\u793a\u3059\u308b\u30dc\u30bf\u30f3\u3002\u62bc\u3059\u3068\u7def\u5ea6\u7d4c\u5ea6\u306eToast\u3092\u8868\u793a\u3059\u308b mButton01 = ( Button ) findViewById ( R . id . Button01 ); mButton01 . setOnClickListener ( this ); } onClick(View v)\u8ffd\u52a0 1 2 3 4 5 6 7 8 9 10 @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { LatLng latLng = mMap . getCameraPosition (). target ; // \u5730\u56f3\u306e\u4e2d\u5fc3\u70b9\u306e\u7def\u5ea6\u30fb\u7d4c\u5ea6\u3092\u53d6\u5f97 double lat = latLng . latitude ; double lon = latLng . longitude ; Toast . makeText ( this , \"lat:\" + lat + \" lon:\" + lon , Toast . LENGTH_LONG ). show (); } }","title":"Google Map\u306e\u4e2d\u5fc3\u70b9\u306e\u5ea7\u6a19\u3092\u8868\u793a"},{"location":"03_maps/maps03/#_2","text":"1 2 3 4 5 6 7 8 9 10 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng mLatLon = new LatLng ( 36.549792 , 139.929513 ); CameraUpdate cu = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( cu ); mMap . setMapType ( GoogleMap . MAP_TYPE_HYBRID ); } 1 2 3 4 5 6 7 8 9 10 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng mLatLon = new LatLng ( 36.549792 , 139.929513 ); CameraUpdate cu = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( cu ); mMap . setMapType ( GoogleMap . MAP_TYPE_SATELLITE ); } 1 2 3 4 5 6 7 8 9 10 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng mLatLon = new LatLng ( 36 . 549792 , 139 . 929513 ); CameraUpdate cu = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( cu ); mMap . setMapType ( GoogleMap . MAP_TYPE_TERRAIN ); }","title":"\u5730\u56f3\u306e\u30bf\u30a4\u30d7"},{"location":"03_maps/maps03/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng mLatLon = new LatLng ( 36.549792 , 139.929513 ); CameraUpdate cu = CameraUpdateFactory . newLatLngZoom ( mLatLon , 15 ); mMap . moveCamera ( cu ); mMap . setMapType ( GoogleMap . MAP_TYPE_TERRAIN ); mMap . setMyLocationEnabled ( true ); }","title":"\u73fe\u5728\u4f4d\u7f6e\u30dc\u30bf\u30f3\u3092\u8868\u793a"},{"location":"03_maps/maps04/","text":"Maps\u306e\u88c5\u98fe \u7dda\u3092\u5f15\u304f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng startPos = new LatLng ( 36.550796 , 139.929061 ); LatLng endPos = new LatLng ( 36.560147 , 139.898935 ); mMap . addPolyline ( new PolylineOptions () . add ( startPos , endPos ) . width ( 40 ) . color ( Color . BLUE )); mMap . moveCamera ( CameraUpdateFactory . newLatLng ( startPos )); mMap . animateCamera ( CameraUpdateFactory . zoomTo ( 13 )); } \u4e09\u89d2\u5f62 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng startPos = new LatLng ( 36 . 550796 , 139 . 929061 ); LatLng endPos = new LatLng ( 36 . 560147 , 139 . 898935 ); mMap . addPolyline ( new PolylineOptions () . add ( startPos , endPos ) . width ( 40 ) . color ( Color . BLUE )); LatLng pos1 = new LatLng ( 36 . 550796 , 139 . 929061 ); LatLng pos2 = new LatLng ( 36 . 566421 , 139 . 919877 ); LatLng pos3 = new LatLng ( 36 . 560147 , 139 . 898935 ); mMap . addPolygon ( new PolygonOptions () . add ( pos1 , pos2 , pos3 ) . fillColor ( Color . CYAN )); mMap . moveCamera ( CameraUpdateFactory . newLatLng ( startPos )); mMap . animateCamera ( CameraUpdateFactory . zoomTo ( 13 )); } \u753b\u50cf\u30de\u30fc\u30ab\u30fc\u306e\u8ffd\u52a0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng startPos = new LatLng ( 36 . 550796 , 139 . 929061 ); LatLng endPos = new LatLng ( 36 . 560147 , 139 . 898935 ); mMap . addPolyline ( new PolylineOptions () . add ( startPos , endPos ) . width ( 40 ) . color ( Color . BLUE )); LatLng pos1 = new LatLng ( 36 . 550796 , 139 . 929061 ); LatLng pos2 = new LatLng ( 36 . 566421 , 139 . 919877 ); LatLng pos3 = new LatLng ( 36 . 560147 , 139 . 898935 ); mMap . addPolygon ( new PolygonOptions () . add ( pos1 , pos2 , pos3 ) . fillColor ( Color . CYAN )); LatLng eyePos = new LatLng ( 36 . 550796 , 139 . 929061 ); Marker eyeMarker = mMap . addMarker ( new MarkerOptions () . position ( eyePos ) . title ( \"Eye\" ) . snippet ( \"Image of Eye\" ) . icon ( BitmapDescriptorFactory . fromResource ( R . drawable . eye ))); mMap . moveCamera ( CameraUpdateFactory . newLatLng ( startPos )); mMap . animateCamera ( CameraUpdateFactory . zoomTo ( 13 )); }","title":"Maps\u306e\u88c5\u98fe"},{"location":"03_maps/maps04/#maps","text":"","title":"Maps\u306e\u88c5\u98fe"},{"location":"03_maps/maps04/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng startPos = new LatLng ( 36.550796 , 139.929061 ); LatLng endPos = new LatLng ( 36.560147 , 139.898935 ); mMap . addPolyline ( new PolylineOptions () . add ( startPos , endPos ) . width ( 40 ) . color ( Color . BLUE )); mMap . moveCamera ( CameraUpdateFactory . newLatLng ( startPos )); mMap . animateCamera ( CameraUpdateFactory . zoomTo ( 13 )); }","title":"\u7dda\u3092\u5f15\u304f"},{"location":"03_maps/maps04/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng startPos = new LatLng ( 36 . 550796 , 139 . 929061 ); LatLng endPos = new LatLng ( 36 . 560147 , 139 . 898935 ); mMap . addPolyline ( new PolylineOptions () . add ( startPos , endPos ) . width ( 40 ) . color ( Color . BLUE )); LatLng pos1 = new LatLng ( 36 . 550796 , 139 . 929061 ); LatLng pos2 = new LatLng ( 36 . 566421 , 139 . 919877 ); LatLng pos3 = new LatLng ( 36 . 560147 , 139 . 898935 ); mMap . addPolygon ( new PolygonOptions () . add ( pos1 , pos2 , pos3 ) . fillColor ( Color . CYAN )); mMap . moveCamera ( CameraUpdateFactory . newLatLng ( startPos )); mMap . animateCamera ( CameraUpdateFactory . zoomTo ( 13 )); }","title":"\u4e09\u89d2\u5f62"},{"location":"03_maps/maps04/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 private void setUpMap () { mMap . addMarker ( new MarkerOptions (). position ( new LatLng ( 0 , 0 )). title ( \"Marker\" )); LatLng startPos = new LatLng ( 36 . 550796 , 139 . 929061 ); LatLng endPos = new LatLng ( 36 . 560147 , 139 . 898935 ); mMap . addPolyline ( new PolylineOptions () . add ( startPos , endPos ) . width ( 40 ) . color ( Color . BLUE )); LatLng pos1 = new LatLng ( 36 . 550796 , 139 . 929061 ); LatLng pos2 = new LatLng ( 36 . 566421 , 139 . 919877 ); LatLng pos3 = new LatLng ( 36 . 560147 , 139 . 898935 ); mMap . addPolygon ( new PolygonOptions () . add ( pos1 , pos2 , pos3 ) . fillColor ( Color . CYAN )); LatLng eyePos = new LatLng ( 36 . 550796 , 139 . 929061 ); Marker eyeMarker = mMap . addMarker ( new MarkerOptions () . position ( eyePos ) . title ( \"Eye\" ) . snippet ( \"Image of Eye\" ) . icon ( BitmapDescriptorFactory . fromResource ( R . drawable . eye ))); mMap . moveCamera ( CameraUpdateFactory . newLatLng ( startPos )); mMap . animateCamera ( CameraUpdateFactory . zoomTo ( 13 )); }","title":"\u753b\u50cf\u30de\u30fc\u30ab\u30fc\u306e\u8ffd\u52a0"},{"location":"03_maps/maps05/","text":"Maps\u95a2\u9023API GeoCoder 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 LatLng latLng = mMap . getCameraPosition (). target ; // \u5730\u56f3\u306e\u4e2d\u5fc3\u70b9\u306e\u7def\u5ea6\u30fb\u7d4c\u5ea6\u3092\u53d6\u5f97 double lat = latLng . latitude ; double lon = latLng . longitude ; // Geocoder\u3067\u4f4f\u6240\u3092\u53d6\u5f97 Geocoder mGeocoder = new Geocoder ( this , Locale . getDefault ()); // \u4f4f\u6240\u3092\u683c\u7d0d\u3059\u308b\u6587\u5b57\u5217\u30d0\u30c3\u30d5\u30a1 StringBuffer sb = new StringBuffer (); // \u7def\u5ea6\u3001\u7d4c\u5ea6\u3001\u53d6\u5f97\u53ef\u80fd\u306a\u6700\u5927\u306e\u4f4f\u6240\u6570\u3092\u6307\u5b9a List < Address > addresses ; try { addresses = mGeocoder . getFromLocation ( lat , lon , 1 ); for ( Address address : addresses ) { // \u53d6\u5f97\u3055\u308c\u305f\u4f4f\u6240\u60c5\u5831\u306e\u30b5\u30a4\u30ba\u3067for\u30eb\u30fc\u30d7 int maxSize = address . getMaxAddressLineIndex (); for ( int i = 0 ; i <= maxSize ; i ++ ) { sb . append ( address . getAddressLine ( i )); } } } catch ( IOException e ) { // \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a8\u30e9\u30fc\u306e\u6642 e . printStackTrace (); } catch ( IllegalArgumentException e ) { // \u7def\u5ea6\u30fb\u7d4c\u5ea6\u304c\u7bc4\u56f2\u5916\u306e\u5024\u306e\u6642 e . printStackTrace (); } Toast . makeText ( this , \"lat:\" + lat + \" lon:\" + lon + \" address:\" + sb , Toast . LENGTH_LONG ). show (); \u4ed6\u306eAPI https://developers.google.com/maps/","title":"Maps\u95a2\u9023API"},{"location":"03_maps/maps05/#mapsapi","text":"","title":"Maps\u95a2\u9023API"},{"location":"03_maps/maps05/#geocoder","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 LatLng latLng = mMap . getCameraPosition (). target ; // \u5730\u56f3\u306e\u4e2d\u5fc3\u70b9\u306e\u7def\u5ea6\u30fb\u7d4c\u5ea6\u3092\u53d6\u5f97 double lat = latLng . latitude ; double lon = latLng . longitude ; // Geocoder\u3067\u4f4f\u6240\u3092\u53d6\u5f97 Geocoder mGeocoder = new Geocoder ( this , Locale . getDefault ()); // \u4f4f\u6240\u3092\u683c\u7d0d\u3059\u308b\u6587\u5b57\u5217\u30d0\u30c3\u30d5\u30a1 StringBuffer sb = new StringBuffer (); // \u7def\u5ea6\u3001\u7d4c\u5ea6\u3001\u53d6\u5f97\u53ef\u80fd\u306a\u6700\u5927\u306e\u4f4f\u6240\u6570\u3092\u6307\u5b9a List < Address > addresses ; try { addresses = mGeocoder . getFromLocation ( lat , lon , 1 ); for ( Address address : addresses ) { // \u53d6\u5f97\u3055\u308c\u305f\u4f4f\u6240\u60c5\u5831\u306e\u30b5\u30a4\u30ba\u3067for\u30eb\u30fc\u30d7 int maxSize = address . getMaxAddressLineIndex (); for ( int i = 0 ; i <= maxSize ; i ++ ) { sb . append ( address . getAddressLine ( i )); } } } catch ( IOException e ) { // \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a8\u30e9\u30fc\u306e\u6642 e . printStackTrace (); } catch ( IllegalArgumentException e ) { // \u7def\u5ea6\u30fb\u7d4c\u5ea6\u304c\u7bc4\u56f2\u5916\u306e\u5024\u306e\u6642 e . printStackTrace (); } Toast . makeText ( this , \"lat:\" + lat + \" lon:\" + lon + \" address:\" + sb , Toast . LENGTH_LONG ). show ();","title":"GeoCoder"},{"location":"03_maps/maps05/#api","text":"https://developers.google.com/maps/","title":"\u4ed6\u306eAPI"},{"location":"04_sensor/sensor00/","text":"Sensor MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); List < Sensor > sensorList = mSensorManager . getSensorList ( Sensor . TYPE_ALL ); for ( Sensor sensor : sensorList ) { Log . d ( TAG , \"Sensor:\" + sensor . getName ()); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } Nexus7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:MPU6515 Accelerometer 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:AK8963 Magnetometer 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:AK8963 Magnetometer Uncalibrated 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:MPU6515 Gyroscope 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:MPU6515 Gyroscope Uncalibrated 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:APDS-9930/QPDS-T930 Proximity & Light 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:APDS-9930/QPDS-T930 Proximity & Light 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:BMP280 Barometer 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Gravity 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Linear Acceleration 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Rotation Vector 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Step Detector 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Step Counter 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Significant Motion Detector 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Game Rotation Vector 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:GeoMagnetic Rotation Vector 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Orientation 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Tilt Detector 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:MPU6515 Game Rotation Vector Secondary 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:AMD 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:RMD 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Basic Gestures 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Tap 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Facing 10-23 09:00:29.407 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Tilt 10-23 09:00:29.407 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Pedometer 10-23 09:00:29.407 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:PEDESTRIAN-ACTIVITY-MONITOR","title":"Sensor"},{"location":"04_sensor/sensor00/#sensor","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); List < Sensor > sensorList = mSensorManager . getSensorList ( Sensor . TYPE_ALL ); for ( Sensor sensor : sensorList ) { Log . d ( TAG , \"Sensor:\" + sensor . getName ()); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } }","title":"Sensor"},{"location":"04_sensor/sensor00/#nexus7","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:MPU6515 Accelerometer 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:AK8963 Magnetometer 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:AK8963 Magnetometer Uncalibrated 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:MPU6515 Gyroscope 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:MPU6515 Gyroscope Uncalibrated 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:APDS-9930/QPDS-T930 Proximity & Light 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:APDS-9930/QPDS-T930 Proximity & Light 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:BMP280 Barometer 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Gravity 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Linear Acceleration 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Rotation Vector 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Step Detector 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Step Counter 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Significant Motion Detector 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Game Rotation Vector 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:GeoMagnetic Rotation Vector 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Orientation 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Tilt Detector 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:MPU6515 Game Rotation Vector Secondary 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:AMD 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:RMD 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Basic Gestures 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Tap 10-23 09:00:29.406 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Facing 10-23 09:00:29.407 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Tilt 10-23 09:00:29.407 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:Pedometer 10-23 09:00:29.407 6104-6104/utsunomiya.gclue.com.sensorsample D/SNESOR\ufe55 Sensor:PEDESTRIAN-ACTIVITY-MONITOR","title":"Nexus7"},{"location":"04_sensor/sensor01/","text":"\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u52a0\u901f\u5ea6\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > axisSensors = mSensorManager . getSensorList ( Sensor . TYPE_ACCELEROMETER ); if ( axisSensors . size () > 0 ) { Sensor sensor = axisSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged()\" ); if ( event . sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { Log . i ( TAG , \"X-axis (gravitational force).\" + event . values [ 0 ] ); Log . i ( TAG , \"Y-axis (gravitational force).\" + event . values [ 1 ] ); Log . i ( TAG , \"Z-axis (gravitational force).\" + event . values [ 2 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } } \u642d\u8f09Chip \u7aef\u672b Chip\u540d Nexus7 MPU-6050 Nexus5 [MPU-6151] Reference - MPU-9250","title":"\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5"},{"location":"04_sensor/sensor01/#_1","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u52a0\u901f\u5ea6\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > axisSensors = mSensorManager . getSensorList ( Sensor . TYPE_ACCELEROMETER ); if ( axisSensors . size () > 0 ) { Sensor sensor = axisSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged()\" ); if ( event . sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { Log . i ( TAG , \"X-axis (gravitational force).\" + event . values [ 0 ] ); Log . i ( TAG , \"Y-axis (gravitational force).\" + event . values [ 1 ] ); Log . i ( TAG , \"Z-axis (gravitational force).\" + event . values [ 2 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5"},{"location":"04_sensor/sensor01/#chip","text":"\u7aef\u672b Chip\u540d Nexus7 MPU-6050 Nexus5 [MPU-6151]","title":"\u642d\u8f09Chip"},{"location":"04_sensor/sensor01/#reference","text":"","title":"Reference"},{"location":"04_sensor/sensor01/#-mpu-9250","text":"","title":"- MPU-9250"},{"location":"04_sensor/sensor02/","text":"Gyroscope MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u52a0\u901f\u5ea6\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > axisSensors = mSensorManager . getSensorList ( Sensor . TYPE_ACCELEROMETER ); if ( axisSensors . size () > 0 ) { Sensor sensor = axisSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } // \u30b8\u30e3\u30a4\u30ed\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > gyroSensors = mSensorManager . getSensorList ( Sensor . TYPE_GYROSCOPE ); if ( gyroSensors . size () > 0 ) { Sensor sensor = gyroSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged()\" ); if ( event . sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { Log . i ( TAG , \"X-axis (gravitational force).\" + event . values [ 0 ] ); Log . i ( TAG , \"Y-axis (gravitational force).\" + event . values [ 1 ] ); Log . i ( TAG , \"Z-axis (gravitational force).\" + event . values [ 2 ] ); } else if ( event . sensor . getType () == Sensor . TYPE_GYROSCOPE ) { Log . i ( TAG , \"yaw.\" + event . values [ 0 ] ); Log . i ( TAG , \"raw.\" + event . values [ 1 ] ); Log . i ( TAG , \"pitch.\" + event . values [ 2 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } } \u642d\u8f09Chip \u7aef\u672b Chip\u540d Nexus7 MPU-6050 Reference Gyroscope\u306e\u539f\u7406 Gryoscope MEMS","title":"Gyroscope"},{"location":"04_sensor/sensor02/#gyroscope","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u52a0\u901f\u5ea6\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > axisSensors = mSensorManager . getSensorList ( Sensor . TYPE_ACCELEROMETER ); if ( axisSensors . size () > 0 ) { Sensor sensor = axisSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } // \u30b8\u30e3\u30a4\u30ed\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > gyroSensors = mSensorManager . getSensorList ( Sensor . TYPE_GYROSCOPE ); if ( gyroSensors . size () > 0 ) { Sensor sensor = gyroSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged()\" ); if ( event . sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { Log . i ( TAG , \"X-axis (gravitational force).\" + event . values [ 0 ] ); Log . i ( TAG , \"Y-axis (gravitational force).\" + event . values [ 1 ] ); Log . i ( TAG , \"Z-axis (gravitational force).\" + event . values [ 2 ] ); } else if ( event . sensor . getType () == Sensor . TYPE_GYROSCOPE ) { Log . i ( TAG , \"yaw.\" + event . values [ 0 ] ); Log . i ( TAG , \"raw.\" + event . values [ 1 ] ); Log . i ( TAG , \"pitch.\" + event . values [ 2 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"Gyroscope"},{"location":"04_sensor/sensor02/#chip","text":"\u7aef\u672b Chip\u540d Nexus7 MPU-6050","title":"\u642d\u8f09Chip"},{"location":"04_sensor/sensor02/#reference","text":"Gyroscope\u306e\u539f\u7406 Gryoscope MEMS","title":"Reference"},{"location":"04_sensor/sensor03/","text":"\u56de\u8ee2\u5ea6 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > rotationSensors = mSensorManager . getSensorList ( Sensor . TYPE_ROTATION_VECTOR ); Log . d ( TAG , \"Count:\" + rotationSensors . size ()); if ( rotationSensors . size () > 0 ) { Sensor sensor = rotationSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged()\" ); if ( event . sensor . getType () == Sensor . TYPE_ROTATION_VECTOR ) { Log . i ( TAG , \"X-vec:\" + event . values [ 0 ] ); Log . i ( TAG , \"Y-vec:\" + event . values [ 1 ] ); Log . i ( TAG , \"Z-vec:\" + event . values [ 2 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } } Geometric\u7cfb MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SNESOR\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > rotationSensors = mSensorManager . getSensorList ( Sensor . TYPE_GEOMAGNETIC_ROTATION_VECTOR ); Log . d ( TAG , \"Count:\" + rotationSensors . size ()); if ( rotationSensors . size () > 0 ) { Sensor sensor = rotationSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged()\" ); if ( event . sensor . getType () == Sensor . TYPE_GEOMAGNETIC_ROTATION_VECTOR ) { Log . i ( TAG , \"X-vec:\" + event . values [ 0 ] ); Log . i ( TAG , \"Y-vec:\" + event . values [ 1 ] ); Log . i ( TAG , \"Z-vec:\" + event . values [ 2 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } } Game\u7528 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SNESOR\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > rotationSensors = mSensorManager . getSensorList ( Sensor . TYPE_GAME_ROTATION_VECTOR ); Log . d ( TAG , \"Count:\" + rotationSensors . size ()); if ( rotationSensors . size () > 0 ) { Sensor sensor = rotationSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_GAME ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged()\" ); if ( event . sensor . getType () == Sensor . TYPE_GAME_ROTATION_VECTOR ) { Log . i ( TAG , \"X-vec:\" + event . values [ 0 ] ); Log . i ( TAG , \"Y-vec:\" + event . values [ 1 ] ); Log . i ( TAG , \"Z-vec:\" + event . values [ 2 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"\u56de\u8ee2\u5ea6"},{"location":"04_sensor/sensor03/#_1","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > rotationSensors = mSensorManager . getSensorList ( Sensor . TYPE_ROTATION_VECTOR ); Log . d ( TAG , \"Count:\" + rotationSensors . size ()); if ( rotationSensors . size () > 0 ) { Sensor sensor = rotationSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged()\" ); if ( event . sensor . getType () == Sensor . TYPE_ROTATION_VECTOR ) { Log . i ( TAG , \"X-vec:\" + event . values [ 0 ] ); Log . i ( TAG , \"Y-vec:\" + event . values [ 1 ] ); Log . i ( TAG , \"Z-vec:\" + event . values [ 2 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"\u56de\u8ee2\u5ea6"},{"location":"04_sensor/sensor03/#geometric","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SNESOR\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > rotationSensors = mSensorManager . getSensorList ( Sensor . TYPE_GEOMAGNETIC_ROTATION_VECTOR ); Log . d ( TAG , \"Count:\" + rotationSensors . size ()); if ( rotationSensors . size () > 0 ) { Sensor sensor = rotationSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged()\" ); if ( event . sensor . getType () == Sensor . TYPE_GEOMAGNETIC_ROTATION_VECTOR ) { Log . i ( TAG , \"X-vec:\" + event . values [ 0 ] ); Log . i ( TAG , \"Y-vec:\" + event . values [ 1 ] ); Log . i ( TAG , \"Z-vec:\" + event . values [ 2 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"Geometric\u7cfb"},{"location":"04_sensor/sensor03/#game","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SNESOR\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > rotationSensors = mSensorManager . getSensorList ( Sensor . TYPE_GAME_ROTATION_VECTOR ); Log . d ( TAG , \"Count:\" + rotationSensors . size ()); if ( rotationSensors . size () > 0 ) { Sensor sensor = rotationSensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_GAME ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged()\" ); if ( event . sensor . getType () == Sensor . TYPE_GAME_ROTATION_VECTOR ) { Log . i ( TAG , \"X-vec:\" + event . values [ 0 ] ); Log . i ( TAG , \"Y-vec:\" + event . values [ 1 ] ); Log . i ( TAG , \"Z-vec:\" + event . values [ 2 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"Game\u7528"},{"location":"04_sensor/sensor04/","text":"\u6e29\u5ea6","title":"\u6e29\u5ea6"},{"location":"04_sensor/sensor04/#_1","text":"","title":"\u6e29\u5ea6"},{"location":"04_sensor/sensor05/","text":"\u7167\u5ea6\u30bb\u30f3\u30b5 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; Sensor sensor ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > Sensors = mSensorManager . getSensorList ( Sensor . TYPE_LIGHT ); if ( Sensors . size () > 0 ) { Sensor sensor = Sensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged():\" ); if ( event . sensor . getType () == Sensor . TYPE_LIGHT ) { Log . i ( TAG , \"Light Level:\" + event . values [ 0 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { Log . i ( TAG , \"onAccuracyChanged()\" ); } }","title":"\u7167\u5ea6\u30bb\u30f3\u30b5"},{"location":"04_sensor/sensor05/#_1","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; Sensor sensor ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > Sensors = mSensorManager . getSensorList ( Sensor . TYPE_LIGHT ); if ( Sensors . size () > 0 ) { Sensor sensor = Sensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged():\" ); if ( event . sensor . getType () == Sensor . TYPE_LIGHT ) { Log . i ( TAG , \"Light Level:\" + event . values [ 0 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { Log . i ( TAG , \"onAccuracyChanged()\" ); } }","title":"\u7167\u5ea6\u30bb\u30f3\u30b5"},{"location":"04_sensor/sensor06/","text":"\u6c17\u5727\u30bb\u30f3\u30b5 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; Sensor sensor ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > Sensors = mSensorManager . getSensorList ( Sensor . TYPE_PRESSURE ); if ( Sensors . size () > 0 ) { Sensor sensor = Sensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged():\" ); if ( event . sensor . getType () == Sensor . TYPE_PRESSURE ) { Log . i ( TAG , \"Pressure Level:\" + event . values [ 0 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { Log . i ( TAG , \"onAccuracyChanged()\" ); } }","title":"\u6c17\u5727\u30bb\u30f3\u30b5"},{"location":"04_sensor/sensor06/#_1","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; Sensor sensor ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > Sensors = mSensorManager . getSensorList ( Sensor . TYPE_PRESSURE ); if ( Sensors . size () > 0 ) { Sensor sensor = Sensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged():\" ); if ( event . sensor . getType () == Sensor . TYPE_PRESSURE ) { Log . i ( TAG , \"Pressure Level:\" + event . values [ 0 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { Log . i ( TAG , \"onAccuracyChanged()\" ); } }","title":"\u6c17\u5727\u30bb\u30f3\u30b5"},{"location":"04_sensor/sensor07/","text":"\u8fd1\u63a5\u30bb\u30f3\u30b5 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; Sensor sensor ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > Sensors = mSensorManager . getSensorList ( Sensor . TYPE_PROXIMITY ); if ( Sensors . size () > 0 ) { Sensor sensor = Sensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xm:l. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged():\" ); if ( event . sensor . getType () == Sensor . TYPE_PROXIMITY ) { Log . i ( TAG , \"Proximity Level\" + event . values [ 0 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { Log . i ( TAG , \"onAccuracyChanged()\" ); } }","title":"\u8fd1\u63a5\u30bb\u30f3\u30b5"},{"location":"04_sensor/sensor07/#_1","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; Sensor sensor ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > Sensors = mSensorManager . getSensorList ( Sensor . TYPE_PROXIMITY ); if ( Sensors . size () > 0 ) { Sensor sensor = Sensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xm:l. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged():\" ); if ( event . sensor . getType () == Sensor . TYPE_PROXIMITY ) { Log . i ( TAG , \"Proximity Level\" + event . values [ 0 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { Log . i ( TAG , \"onAccuracyChanged()\" ); } }","title":"\u8fd1\u63a5\u30bb\u30f3\u30b5"},{"location":"04_sensor/sensor08/","text":"\u4e07\u6b69\u8a08 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; Sensor sensor ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > Sensors = mSensorManager . getSensorList ( Sensor . TYPE_STEP_COUNTER ); if ( Sensors . size () > 0 ) { Sensor sensor = Sensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged():\" ); if ( event . sensor . getType () == Sensor . TYPE_STEP_COUNTER ) { Log . i ( TAG , \"Step Count:\" + event . values [ 0 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { Log . i ( TAG , \"onAccuracyChanged()\" ); } }","title":"\u4e07\u6b69\u8a08"},{"location":"04_sensor/sensor08/#_1","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; Sensor sensor ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > Sensors = mSensorManager . getSensorList ( Sensor . TYPE_STEP_COUNTER ); if ( Sensors . size () > 0 ) { Sensor sensor = Sensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged():\" ); if ( event . sensor . getType () == Sensor . TYPE_STEP_COUNTER ) { Log . i ( TAG , \"Step Count:\" + event . values [ 0 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { Log . i ( TAG , \"onAccuracyChanged()\" ); } }","title":"\u4e07\u6b69\u8a08"},{"location":"04_sensor/sensor09/","text":"\u78c1\u529b\u8a08 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; Sensor sensor ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > Sensors = mSensorManager . getSensorList ( Sensor . TYPE_MAGNETIC_FIELD ); if ( Sensors . size () > 0 ) { Sensor sensor = Sensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged():\" ); if ( event . sensor . getType () == Sensor . TYPE_MAGNETIC_FIELD ) { Log . i ( TAG , \"X-mag:\" + event . values [ 0 ] ); Log . i ( TAG , \"Y-mag:\" + event . values [ 1 ] ); Log . i ( TAG , \"Z-mag:\" + event . values [ 2 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { Log . i ( TAG , \"onAccuracyChanged()\" ); } }","title":"\u78c1\u529b\u8a08"},{"location":"04_sensor/sensor09/#_1","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 package utsunomiya.gclue.com.sensorsample ; import android.app.Activity ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import java.util.List ; public class MainActivity extends Activity implements SensorEventListener { /** SensorManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9. */ private SensorManager mSensorManager = null ; /** Log\u7528\u306eTag. */ private final static String TAG = \"SENSOR\" ; Sensor sensor ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // SensorManager mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ); // \u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\u3068\u30ea\u30b9\u30ca\u30fc\u3078\u306e\u767b\u9332 List < Sensor > Sensors = mSensorManager . getSensorList ( Sensor . TYPE_MAGNETIC_FIELD ); if ( Sensors . size () > 0 ) { Sensor sensor = Sensors . get ( 0 ); mSensorManager . registerListener ( this , sensor , SensorManager . SENSOR_DELAY_FASTEST ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"SensorChanged():\" ); if ( event . sensor . getType () == Sensor . TYPE_MAGNETIC_FIELD ) { Log . i ( TAG , \"X-mag:\" + event . values [ 0 ] ); Log . i ( TAG , \"Y-mag:\" + event . values [ 1 ] ); Log . i ( TAG , \"Z-mag:\" + event . values [ 2 ] ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { Log . i ( TAG , \"onAccuracyChanged()\" ); } }","title":"\u78c1\u529b\u8a08"},{"location":"04_sensor/sensor10/","text":"GPS AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.gpssample\" > <uses-permission android:name= \"android.permission.ACCESS_COARSE_LOCATION\" /> <uses-permission android:name= \"android.permission.ACCESS_FINE_LOCATION\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 package utsunomiya.gclue.com.gpssample ; import android.app.Activity ; import android.content.Context ; import android.content.Intent ; import android.location.Location ; import android.location.LocationListener ; import android.location.LocationManager ; import android.os.Bundle ; import android.provider.Settings ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.widget.Toast ; public class MainActivity extends Activity implements LocationListener { /** * Location Manager */ private LocationManager mLocationManager = null ; /** Tag. */ private final static String TAG = \"GPS\" ; private final int REQUEST_PERMISSION = 1024 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // LocationManager\u3067GPS\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a mLocationManager = ( LocationManager ) getSystemService ( Context . LOCATION_SERVICE ); // GPS\u304c\u6709\u52b9\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3059\u308b final boolean isGPS = mLocationManager . isProviderEnabled ( LocationManager . GPS_PROVIDER ); Log . i ( TAG , \"isGPS:\" + isGPS ); if ( ! isGPS ){ Intent mIntent = new Intent ( Settings . ACTION_LOCATION_SOURCE_SETTINGS ); startActivity ( mIntent ); } if ( ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_FINE_LOCATION ) != PackageManager . PERMISSION_GRANTED && ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_COARSE_LOCATION ) != PackageManager . PERMISSION_GRANTED ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( this , Manifest . permission . ACCESS_FINE_LOCATION )) { ActivityCompat . requestPermissions ( MainActivity . this , new String [] { Manifest . permission . ACCESS_FINE_LOCATION }, REQUEST_PERMISSION ); } else { Toast toast = Toast . makeText ( this , \"\u8a31\u53ef\u3055\u308c\u306a\u3044\u3068\u30a2\u30d7\u30ea\u304c\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\" , Toast . LENGTH_SHORT ); toast . show (); ActivityCompat . requestPermissions ( this , new String [] { Manifest . permission . ACCESS_FINE_LOCATION ,}, REQUEST_PERMISSION ); } } else { // \u5024\u304c\u5909\u5316\u3057\u305f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30ea\u30b9\u30ca\u30fc\u306e\u8ffd\u52a0 mLocationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 1000 , 50 , this ); } Log . i ( TAG , \"GPS\" ); } @Override protected void onPause () { super . onPause (); if ( mLocationManager != null ) { mLocationManager . removeUpdates ( this ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onLocationChanged ( Location location ) { Log . i ( TAG , \"lat:\" + location . getLatitude ()); Log . i ( TAG , \"lon:\" + location . getLongitude ()); // \u30c8\u30fc\u30b9\u30c8\u3067\u8868\u793a. Toast . makeText ( this , \"lat:\" + location . getLatitude () + \"lon:\" + location . getLongitude (), Toast . LENGTH_LONG ). show (); } @Override public void onStatusChanged ( String provider , int status , Bundle extras ) { } @Override public void onProviderEnabled ( String provider ) { } @Override public void onProviderDisabled ( String provider ) { } @Override public void onRequestPermissionsResult ( int requestCode , @NonNull String [] permissions , @NonNull int [] grantResults ) { if ( requestCode == REQUEST_PERMISSION ) { // \u4f7f\u7528\u304c\u8a31\u53ef\u3055\u308c\u305f if ( grantResults [ 0 ] == PackageManager . PERMISSION_GRANTED ) { if ( ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_FINE_LOCATION ) != PackageManager . PERMISSION_GRANTED && ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_COARSE_LOCATION ) != PackageManager . PERMISSION_GRANTED ) { return ; } mLocationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 1000 , 50 , this ); } else { // \u305d\u308c\u3067\u3082\u62d2\u5426\u3055\u308c\u305f\u6642\u306e\u5bfe\u5fdc Toast toast = Toast . makeText ( this , \"\u3053\u308c\u4ee5\u4e0a\u306a\u306b\u3082\u3067\u304d\u307e\u305b\u3093\" , Toast . LENGTH_SHORT ); toast . show (); } } } }","title":"GPS"},{"location":"04_sensor/sensor10/#gps","text":"AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.gpssample\" > <uses-permission android:name= \"android.permission.ACCESS_COARSE_LOCATION\" /> <uses-permission android:name= \"android.permission.ACCESS_FINE_LOCATION\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 package utsunomiya.gclue.com.gpssample ; import android.app.Activity ; import android.content.Context ; import android.content.Intent ; import android.location.Location ; import android.location.LocationListener ; import android.location.LocationManager ; import android.os.Bundle ; import android.provider.Settings ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.widget.Toast ; public class MainActivity extends Activity implements LocationListener { /** * Location Manager */ private LocationManager mLocationManager = null ; /** Tag. */ private final static String TAG = \"GPS\" ; private final int REQUEST_PERMISSION = 1024 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // LocationManager\u3067GPS\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a mLocationManager = ( LocationManager ) getSystemService ( Context . LOCATION_SERVICE ); // GPS\u304c\u6709\u52b9\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3059\u308b final boolean isGPS = mLocationManager . isProviderEnabled ( LocationManager . GPS_PROVIDER ); Log . i ( TAG , \"isGPS:\" + isGPS ); if ( ! isGPS ){ Intent mIntent = new Intent ( Settings . ACTION_LOCATION_SOURCE_SETTINGS ); startActivity ( mIntent ); } if ( ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_FINE_LOCATION ) != PackageManager . PERMISSION_GRANTED && ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_COARSE_LOCATION ) != PackageManager . PERMISSION_GRANTED ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( this , Manifest . permission . ACCESS_FINE_LOCATION )) { ActivityCompat . requestPermissions ( MainActivity . this , new String [] { Manifest . permission . ACCESS_FINE_LOCATION }, REQUEST_PERMISSION ); } else { Toast toast = Toast . makeText ( this , \"\u8a31\u53ef\u3055\u308c\u306a\u3044\u3068\u30a2\u30d7\u30ea\u304c\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\" , Toast . LENGTH_SHORT ); toast . show (); ActivityCompat . requestPermissions ( this , new String [] { Manifest . permission . ACCESS_FINE_LOCATION ,}, REQUEST_PERMISSION ); } } else { // \u5024\u304c\u5909\u5316\u3057\u305f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30ea\u30b9\u30ca\u30fc\u306e\u8ffd\u52a0 mLocationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 1000 , 50 , this ); } Log . i ( TAG , \"GPS\" ); } @Override protected void onPause () { super . onPause (); if ( mLocationManager != null ) { mLocationManager . removeUpdates ( this ); } } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onLocationChanged ( Location location ) { Log . i ( TAG , \"lat:\" + location . getLatitude ()); Log . i ( TAG , \"lon:\" + location . getLongitude ()); // \u30c8\u30fc\u30b9\u30c8\u3067\u8868\u793a. Toast . makeText ( this , \"lat:\" + location . getLatitude () + \"lon:\" + location . getLongitude (), Toast . LENGTH_LONG ). show (); } @Override public void onStatusChanged ( String provider , int status , Bundle extras ) { } @Override public void onProviderEnabled ( String provider ) { } @Override public void onProviderDisabled ( String provider ) { } @Override public void onRequestPermissionsResult ( int requestCode , @NonNull String [] permissions , @NonNull int [] grantResults ) { if ( requestCode == REQUEST_PERMISSION ) { // \u4f7f\u7528\u304c\u8a31\u53ef\u3055\u308c\u305f if ( grantResults [ 0 ] == PackageManager . PERMISSION_GRANTED ) { if ( ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_FINE_LOCATION ) != PackageManager . PERMISSION_GRANTED && ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_COARSE_LOCATION ) != PackageManager . PERMISSION_GRANTED ) { return ; } mLocationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 1000 , 50 , this ); } else { // \u305d\u308c\u3067\u3082\u62d2\u5426\u3055\u308c\u305f\u6642\u306e\u5bfe\u5fdc Toast toast = Toast . makeText ( this , \"\u3053\u308c\u4ee5\u4e0a\u306a\u306b\u3082\u3067\u304d\u307e\u305b\u3093\" , Toast . LENGTH_SHORT ); toast . show (); } } } }","title":"GPS"},{"location":"8.0/maps/","text":"Google Maps MapActivity\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u65b0\u898f\u4f5c\u6210\u3002 manifets/AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.gclue.loratest\" > <uses-permission android:name= \"android.permission.ACCESS_FINE_LOCATION\" /> <uses-permission android:name= \"android.permission.ACCESS_COARSE_LOCATION\" /> <uses-feature android:name= \"android.hardware.location.gps\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:roundIcon= \"@mipmap/ic_launcher_round\" android:supportsRtl= \"true\" android:theme= \"@style/AppTheme\" > <meta-data android:name= \"com.google.android.geo.API_KEY\" android:value= \"@string/google_maps_key\" /> <activity android:name= \".MapsActivity\" android:label= \"@string/title_activity_maps\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> res/values/google_maps_api.xml Xml 1 2 3 <resources> <string name= \"google_maps_key\" templateMergeStrategy= \"preserve\" translatable= \"false\" > \u53d6\u5f97\u3057\u305fKey\u3092\u8a18\u8f09 </string> </resources> Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 package io.gclue.loratest ; import android.Manifest ; import android.annotation.SuppressLint ; import android.content.pm.PackageManager ; import android.location.Location ; import android.location.LocationListener ; import android.location.LocationManager ; import android.os.Build ; import android.support.annotation.NonNull ; import android.support.v4.app.ActivityCompat ; import android.support.v4.app.FragmentActivity ; import android.os.Bundle ; import android.support.v4.content.ContextCompat ; import android.util.Log ; import com.google.android.gms.maps.CameraUpdateFactory ; import com.google.android.gms.maps.GoogleMap ; import com.google.android.gms.maps.OnMapReadyCallback ; import com.google.android.gms.maps.SupportMapFragment ; import com.google.android.gms.maps.model.LatLng ; import com.google.android.gms.maps.model.MarkerOptions ; public class MapsActivity extends FragmentActivity implements OnMapReadyCallback { private GoogleMap mMap ; private LocationManager locationManager ; private LocationListener locationListener ; private static final String TAG = \"MAP\" ; @SuppressLint ( \"MissingPermission\" ) @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_maps ); // Obtain the SupportMapFragment and get notified when the map is ready to be used. SupportMapFragment mapFragment = ( SupportMapFragment ) getSupportFragmentManager () . findFragmentById ( R . id . map ); mapFragment . getMapAsync ( this ); locationManager = ( LocationManager ) this . getSystemService ( LOCATION_SERVICE ); locationListener = new LocationListener () { @Override public void onLocationChanged ( Location location ) { Log . d ( TAG , location . toString ()); // \u53d6\u5f97\u3057\u305f\u4f4d\u7f6e\u60c5\u5831\u306bMap\u3092\u79fb\u52d5 LatLng now = new LatLng ( location . getLatitude (), location . getLongitude ()); mMap . moveCamera ( CameraUpdateFactory . newLatLngZoom ( now , 16 )); } @Override public void onStatusChanged ( String provider , int status , Bundle extras ) { Log . d ( TAG , \"onStatusChanged\" ); } @Override public void onProviderEnabled ( String provider ) { Log . d ( TAG , \"onProviderEnabled\" ); } @Override public void onProviderDisabled ( String provider ) { Log . d ( \"TEST:\" , \"onProviderDisabled\" ); } }; if ( Build . VERSION . SDK_INT < 23 ) { locationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 0 , 0 , locationListener ); } else { if ( ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_FINE_LOCATION ) != PackageManager . PERMISSION_GRANTED && ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_COARSE_LOCATION ) != PackageManager . PERMISSION_GRANTED ) { // Permission\u304c\u306a\u3044\u5834\u5408\u306f\u3001Permission\u3092\u8981\u6c42\u3059\u308b ActivityCompat . requestPermissions ( this , new String [] { Manifest . permission . ACCESS_FINE_LOCATION }, 1 ); } else { // GPS\u3068NETWORK\u306b\u3088\u308b\u4f4d\u7f6e\u60c5\u5831\u53d6\u5f97\u958b\u59cb locationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 0 , 0 , locationListener ); locationManager . requestLocationUpdates ( LocationManager . NETWORK_PROVIDER , 0 , 0 , locationListener ); } } } @Override public void onRequestPermissionsResult ( int requestCode , @NonNull String [] permissions , @NonNull int [] grantResults ) { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ); if ( grantResults . length > 0 && grantResults [ 0 ] == PackageManager . PERMISSION_GRANTED ) { if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_FINE_LOCATION ) == PackageManager . PERMISSION_GRANTED ){ locationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 0 , 0 , locationListener ); } } } /** * Map\u306e\u7528\u610f\u304c\u3067\u304d\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u308b */ @Override public void onMapReady ( GoogleMap googleMap ) { mMap = googleMap ; LatLng aizu = new LatLng ( 37.521359 , 139.938603 ); mMap . moveCamera ( CameraUpdateFactory . newLatLngZoom ( aizu , 16 )); } }","title":"Google Maps"},{"location":"8.0/maps/#google-maps","text":"MapActivity\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u65b0\u898f\u4f5c\u6210\u3002 manifets/AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.gclue.loratest\" > <uses-permission android:name= \"android.permission.ACCESS_FINE_LOCATION\" /> <uses-permission android:name= \"android.permission.ACCESS_COARSE_LOCATION\" /> <uses-feature android:name= \"android.hardware.location.gps\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:roundIcon= \"@mipmap/ic_launcher_round\" android:supportsRtl= \"true\" android:theme= \"@style/AppTheme\" > <meta-data android:name= \"com.google.android.geo.API_KEY\" android:value= \"@string/google_maps_key\" /> <activity android:name= \".MapsActivity\" android:label= \"@string/title_activity_maps\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> res/values/google_maps_api.xml Xml 1 2 3 <resources> <string name= \"google_maps_key\" templateMergeStrategy= \"preserve\" translatable= \"false\" > \u53d6\u5f97\u3057\u305fKey\u3092\u8a18\u8f09 </string> </resources> Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 package io.gclue.loratest ; import android.Manifest ; import android.annotation.SuppressLint ; import android.content.pm.PackageManager ; import android.location.Location ; import android.location.LocationListener ; import android.location.LocationManager ; import android.os.Build ; import android.support.annotation.NonNull ; import android.support.v4.app.ActivityCompat ; import android.support.v4.app.FragmentActivity ; import android.os.Bundle ; import android.support.v4.content.ContextCompat ; import android.util.Log ; import com.google.android.gms.maps.CameraUpdateFactory ; import com.google.android.gms.maps.GoogleMap ; import com.google.android.gms.maps.OnMapReadyCallback ; import com.google.android.gms.maps.SupportMapFragment ; import com.google.android.gms.maps.model.LatLng ; import com.google.android.gms.maps.model.MarkerOptions ; public class MapsActivity extends FragmentActivity implements OnMapReadyCallback { private GoogleMap mMap ; private LocationManager locationManager ; private LocationListener locationListener ; private static final String TAG = \"MAP\" ; @SuppressLint ( \"MissingPermission\" ) @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_maps ); // Obtain the SupportMapFragment and get notified when the map is ready to be used. SupportMapFragment mapFragment = ( SupportMapFragment ) getSupportFragmentManager () . findFragmentById ( R . id . map ); mapFragment . getMapAsync ( this ); locationManager = ( LocationManager ) this . getSystemService ( LOCATION_SERVICE ); locationListener = new LocationListener () { @Override public void onLocationChanged ( Location location ) { Log . d ( TAG , location . toString ()); // \u53d6\u5f97\u3057\u305f\u4f4d\u7f6e\u60c5\u5831\u306bMap\u3092\u79fb\u52d5 LatLng now = new LatLng ( location . getLatitude (), location . getLongitude ()); mMap . moveCamera ( CameraUpdateFactory . newLatLngZoom ( now , 16 )); } @Override public void onStatusChanged ( String provider , int status , Bundle extras ) { Log . d ( TAG , \"onStatusChanged\" ); } @Override public void onProviderEnabled ( String provider ) { Log . d ( TAG , \"onProviderEnabled\" ); } @Override public void onProviderDisabled ( String provider ) { Log . d ( \"TEST:\" , \"onProviderDisabled\" ); } }; if ( Build . VERSION . SDK_INT < 23 ) { locationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 0 , 0 , locationListener ); } else { if ( ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_FINE_LOCATION ) != PackageManager . PERMISSION_GRANTED && ActivityCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_COARSE_LOCATION ) != PackageManager . PERMISSION_GRANTED ) { // Permission\u304c\u306a\u3044\u5834\u5408\u306f\u3001Permission\u3092\u8981\u6c42\u3059\u308b ActivityCompat . requestPermissions ( this , new String [] { Manifest . permission . ACCESS_FINE_LOCATION }, 1 ); } else { // GPS\u3068NETWORK\u306b\u3088\u308b\u4f4d\u7f6e\u60c5\u5831\u53d6\u5f97\u958b\u59cb locationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 0 , 0 , locationListener ); locationManager . requestLocationUpdates ( LocationManager . NETWORK_PROVIDER , 0 , 0 , locationListener ); } } } @Override public void onRequestPermissionsResult ( int requestCode , @NonNull String [] permissions , @NonNull int [] grantResults ) { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ); if ( grantResults . length > 0 && grantResults [ 0 ] == PackageManager . PERMISSION_GRANTED ) { if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . ACCESS_FINE_LOCATION ) == PackageManager . PERMISSION_GRANTED ){ locationManager . requestLocationUpdates ( LocationManager . GPS_PROVIDER , 0 , 0 , locationListener ); } } } /** * Map\u306e\u7528\u610f\u304c\u3067\u304d\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u308b */ @Override public void onMapReady ( GoogleMap googleMap ) { mMap = googleMap ; LatLng aizu = new LatLng ( 37.521359 , 139.938603 ); mMap . moveCamera ( CameraUpdateFactory . newLatLngZoom ( aizu , 16 )); } }","title":"Google Maps"}]}